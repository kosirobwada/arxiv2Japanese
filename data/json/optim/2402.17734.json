{
    "optim": "Draft version February 28, 2024\nTypeset using LATEX twocolumn style in AASTeX631\nAutomated Scheduling of Doppler Exoplanet Observations at Keck Observatory\nLuke B. Handley\n,1 Erik A. Petigura\n,1 Velibor V. Miˇsi´c\n,2 Jack Lubin\n,1 and Howard Isaacson\n3, 4\n1Department of Physics & Astronomy, University of California Los Angeles, Los Angeles, CA 90095, USA\n2Anderson School of Management, University of California Los Angeles, Los Angeles, CA 90095, USA\n3501 Campbell Hall, University of California at Berkeley, Berkeley, CA 94720, USA\n4Centre for Astrophysics, University of Southern Queensland, Toowoomba, QLD, Australia\nABSTRACT\nPrecise Doppler studies of extrasolar planets require fine-grained control of observational cadence,\ni.e. the timing of and spacing between observations. We present a novel framework for scheduling a set\nof Doppler campaigns with different cadence requirements at the W. M. Keck Observatory (WMKO).\nFor a set of observing programs and allocated nights on an instrument, our software optimizes the\ntiming and ordering of ∼1000 observations within a given observing semester. We achieve a near-\noptimal solution in real-time using a hierarchical Integer Linear Programming (ILP) framework. Our\nscheduling formulation optimizes over the roughly 103000 possible orderings. A top level optimization\nfinds the most regular sequence of allocated nights by which to observe each host star in the request\ncatalog based on a frequency specified in the request. A second optimization scheme minimizes the\nslews and downtime of the instrument. We have assessed our algorithms performance with simulated\ndata and with the real suite of Doppler observations of the California Planet Search in 2023.\nKeywords: methods: observational\n1. INTRODUCTION\nThe discovery and characterization of extrasolar plan-\nets with the Doppler technique requires careful attention\nto the observational ‘cadence’ defined as the timing of\nand spacing between observations of a given target. The\ncensus of known Doppler extrasolar planets have orbital\nperiods ranging from only a few hours to several decades\n(Howard et al. 2012; Fulton et al. 2021). Thus, Doppler\nsurveys must be tuned to appropriately sample the or-\nbital periods of interest.\nMoreover,\ntime-variable\nsurface\nfeatures\nproduce\nshifts in the stellar spectra that register as Doppler\nshifts, yet have nothing to do with the star’s motion\naround the star-planet barycenter (Luhn et al. 2020).\nThe amplitude of activity RVs ranges from tens of cm/s\nfor the very quietest stars to hundreds of m/s for young\nand active stars. The timescale of this stellar variabil-\nity ranges from minutes (acoustic modes) (Chaplin et al.\n2019) to hours (granulation), to days (rotation), to years\n(magnetic cycles) (Fulton et al. 2015).\nOver the last few years, a number of spectrometers\nhave been commissioned that are stable at the level of\nseveral tens of cm/s. Some noteworthy examples include\nESPRESSO (Pepe et al. 2021), MAROON-X (Seifahrt\net al. 2018), EXPRES (Blackman et al. 2020), NEID\n(Schwab et al. 2016), and KPF (Gibson et al. 2020). For\nsuch instruments, stellar activity is the dominant noise\nsource for nearly all target stars. Several strategies have\nbeen developed for mitigating stellar activity. Most re-\nquire dense sampling of RVs over timescales relevant to\nplanetary and activity signals. Therefore, control of ob-\nservational cadence has become even more critical as the\ncommunity attempts to detect planetary signals below 1\nm/s in the presence of stellar activity (Anglada-Escud´e\net al. 2016).\nAchieving the desired observational cadence at any\nDoppler facility is a complex scheduling challenge. Most\nfacilities support a number of active Doppler programs\nwith different targets, observational priorities, and ca-\ndence requirements. In addition, most Doppler instru-\nments share the telescope with other instruments with\ntheir own scheduling constraints (e.g.\ndark time for\nextra-galactic observations). Finally, weather losses are\nguaranteed but the set of impacted nights is not known\nin advance.\nToday, the task of scheduling Doppler observations is\nperformed almost entirely by humans. This is a chal-\nlenging and time-consuming task. Schedulers must de-\ntermine the sequence of observations that favor high pro-\narXiv:2402.17734v1  [astro-ph.IM]  27 Feb 2024\n2\ngram completion and equity among the supported pro-\ngrams. There is an opportunity for automated schedul-\ning algorithms to save human effort and better achieve\ncompletion/equity goals. At present, we are aware of\nthree Doppler facilities that are autonomously sched-\nuled: the Las Cumbres Observatory Network of Robotic\nEchelle Spectrographs (LCO/NRES, Siverd et al. 2018),\nthe Calar Alto high-Resolution search for M dwarfs with\nExo- earths with Near-infrared and optical Echelle Spec-\ntrographs (CARMENES, Quirrenbach et al. 2014), and\nthe Automated Planet Finder Levy Spectrograph (Vogt\net al. 2014).\nAutomated telescope scheduling has been deployed\nsince at least the early 1990s.\nFor a more detailed\nreview of prior efforts, see Solar et al. (2016), Bellm\net al. (2019a), Parazin et al. (2022), and references\ntherein. A key early development was the Hubble Space\nTelescope’s SPIKE software (Johnston & Miller 1994)\nwhich has been adapted to suit other facilities including\nthe James Webb Space Telescope (Giuliano & Johnston\n2008). Many of the scheduling algorithms developed in\nthe 2000s adopted ‘local search’ or ‘greedy’ algorithms.\nHere a schedule is built sequentially by selecting the next\nobservation that contributes the most to a merit func-\ntion. Such methods are not well suited to Doppler work\nbecause they lack the look-ahead needed to schedule ob-\nservations over long intervals.\nA significant recent development was the introduc-\ntion of Integer Linear Programming (ILP) methods to\nthe telescope scheduling problem by Lampoudi et al.\n(2015) who developed the dynamic scheduling algorithm\nfor the LCO network.\nILP and Mixed-Integer Linear\nPrograming (MILP) formulations of scheduling prob-\nlems are common in the operations research commu-\nnities and powerful commercial software libraries exist\nto solve these problems to their global optima.\nThe\nability to confidently find global optima makes these\nmethods promising for the long-range planning needs of\nDoppler surveys. ILP- or MILP-based schedulers have\nsince been developed for the Atacama Large Millime-\nter/Submillimeter Array (ALMA) by Solar et al. (2016)\nand the Zwicky Transient Facility (ZTF) by Bellm et al.\n(2019b).\nThis paper describes our efforts to automatically\nschedule Doppler observations at Keck Observatory. We\nprovide some background on the prior human schedul-\ning at Keck Observatory (Section 2). We describe our\nscheduling algorithm (Section 3). We present, apply and\nassess the performance of our scheduler during observa-\ntions at Keck observatory during 2023 (Section 5). Fi-\nnally, we conclude and offer some thoughts on future\ndevelopment (Section 6).\n2. MANUAL SCHEDULING AT KECK\nDoppler searches for extrasolar planets have been con-\nducted at the 10 m Keck-I telescope with the High Res-\nolution Echelle Spectrometer (HIRES) instrument since\n1994 (Marcy & Butler 1996). The telescope is classically\nscheduled. PIs submit proposals to a number of time\nallocation committees (TACs) who award full or frac-\ntional nights over a six-month observing semester. Since\n2010, the Doppler programs have received ≈40–50 nights\nper semester distributed over ≈60–70 full or fractional\nnights. Generally, awarded time has been anchored by a\nsmall number of large, multi-semester projects, such as\nNASA mission support of Kepler, K2 and TESS, and a\nlarger number of smaller 1 to 3 night projects. The set\nof all accepted programs (Doppler and other) are sent to\nthe Keck Observatory with a cover sheet that includes\nbasic scheduling constraints and preferences. Those re-\nquests include a set of nearly consecutive nights and at\nleast one night per month to monitor short and long\nperiod planetary orbits.\nA human scheduler at Keck\nobservatory heuristically balances these requests to de-\ntermine a full semester schedule for the telescope.\nMost PIs of Doppler programs at Keck elect to ex-\necute their observations with the infrastructure of the\nCalifornia Planet Search (CPS, Howard et al. 2010a).\nCPS runs an ad hoc queue which schedules observations\nand maintains a pool of trained observers to execute the\nobservations. CPS also reduces, curates, and distributes\ndata. By collaborating with CPS, PIs may execute ob-\nservations over a larger number of nights and share in\nweather losses. Indeed, many of smaller programs could\nnot achieve scientifically useful cadence without access\nto a large number of nights through CPS.\nBetween 2010 and 2020, CPS observed ≈40,000 stellar\nspectra (not counting multi-shot exposures) or an aver-\nage of 2000 observations per semester. Each semester’s\nscheduling challenge is substantial as there are, in prin-\nciple, O(N!) ∼ 106000 possible orderings.\nThe CPS\nscheduler collects the observation requests at the start\nof the semester and before each night of observing. On\nthe day preceding observations, the scheduler manually\nmarks and removes previous observations. The schedule\nis balanced each night with fractions of each program\nas a function of overall allocations.\nThis helps bal-\nance weather losses, especially when entire nights are\nlost and each program loses time proportionally. The\nscheduler must also balance the distribution of target\nright ascension (RA) so that the telescope is not over-\nor under-subscribed at any point in the night. Follow-up\nof exoplanet systems in the ecliptic further complicate\nthe scheduling with the need to avoid pointing near the\nmoon.\n3\nAfter the scheduler determines upcoming night’s tar-\ngets, they generate a script, an ordered sequence of ob-\nservations to be executed at the telescope. The sched-\nuler also minimizes overheads associated with long slews\nand cable wrap limits.\nThis task is analogous to the\ntraveling salesman problem with the additional compli-\ncations of target visibility windows and time-dependent\nslew times. The scheduler must have an intuitive un-\nderstanding of the relationship between the right ascen-\nsion/declination coordinate system (that specify the tar-\ngets) and the altitude/azimuth coordinate system (that\nspecifies the telescope orientation). The relationship be-\ntween these coordinate systems is a time-dependent and\nnon-trivial transformation requiring tens of nights of ob-\nserving experience to understand for planning purposes.\nThe final schedule is slightly overfilled relative to what\ncan be achieved even under exceptional observing con-\nditions. At the telescope, CPS observers make real-time\ndecisions to skip targets given current conditions and\ntheir knowledge of the scientific needs of the portfolio of\nprograms.\nThe human effort required to schedule CPS observa-\ntions is substantial.\nAt the beginning of a semester,\nwith the most targets to consider, the ratio of schedul-\ning planning versus observation can be as high as one-\nto-one, and is reduced to one-to-ten by the end of the\nsemester. PIs of contributing programs must also moni-\ntor the progress of their programs and request changes,\nif needed. By any standard, the amount of human time\nrequired to plan effectively while scheduling up to 100\nstars in a night is high.\n3. SCHEDULING ALGORITHM\nDetermining the precise timestamps of 1000 exposures\nthroughout every night in an observing semester is an\nimpractical feat when both problem size and weather\nuncertainty are considered.\nPrecise minute-to-minute\nscheduling is only necessary for an upcoming night or\nsmall sequence of nights.\nHowever, long range look-\nahead at the semester scale remains critical to the scien-\ntific goals of the algorithm. To balance these needs, our\nscheduling algorithm is hierarchical, splitting the prob-\nlem into two stages.\nFirst, it solves the scheduling problem at quarter night\nresolution, assembling groups of targets into each allo-\ncated quarter night while incorporating constraints on\ntime, visibility, and cadence. The targets do not have a\nspecified ordering within each quarter during this stage.\nIn the second step, a small sequence of the nearest up-\ncoming quarters is scheduled exactly with the targets\nassigned by the first step. In this paper, we describe\nthe long range semester scheduling stage in detail, in-\ncluding the initialization data, model construction, and\nobjective function. The second step, which we refer to\nas the ‘Traveling Telescope Problem’ or the ‘TTP’, is\ndescribed in detail in Handley et al. (2023), submitted\nto AJ.\n3.1. Inputs to the Scheduler\nWe begin the semester scheduling with a list of Nr\nmany requests {1, . . . , Nr}, where r is the request index.\nEach request has the following attributes:\n• Star name [string].\n• Celestial coordinates [RA, Dec, epoch].\n• Maximum number of unique nights of observation\nover the semester [integer], ninter\nr\n• Maximum number of exposures per scheduled\nnight [integer] nintra\nr\n.\n• Minimum duration between observations on differ-\nent nights in days, the inter-night spacing [integer],\nτ inter\nr\n.\n• Minimum duration between observations on the\nsame night in hours, the intra-night spacing [float]\nτ intra\nr\n.\n• Exposure time τ exp\nr\nin seconds [integer]\n• Program code [string] that associates each request\nwith an approved telescope program.\nTable 1 shows a sample of KPF requests for the 2023B\nsemester to illustrate the form of the input data.\nThe scheduler also requires a list of KPF quarter\nnights.\nIf Ns is the total number of these allocated\nquarters, we index the list of slots arranged by increas-\ning time {1, . . . , Ns} with the letter s. Each individual\nawarded quarter night s need not be adjacent in the\nKeck schedule (in fact they are rarely so). We denote\nthe duration of each slot in seconds with Is.\nFinally, since the ILP algorithm described below parti-\ntions observations into slots while satisfying the cadence\nconstraints, we need to specify which targets can be ob-\nserved on which slots. This is encoded in the ‘Visibility\nMatrix’ Vrs.\n• Vrs = 1 if the target r is visible during quarter\nnight slot s, and 0 otherwise.\nDuring the 2023B semester, we calculated Vrs directly\nfrom the target coordinates, following a simple set of\nrules described in Section 5.1.\nHowever, Vrs may be\nspecified according to an arbitrary set of rules, such as\n4\nTable 1. Sample of KPF requests. From top to bottom: a non-cadenced/single shot observation, a low cadence observation, a\nmedium cadenced observation, and a high cadenced observation with three observations requested per night.\nStarname\nRa\nDec\nninter\nr\nnintra\nr\nτ inter\nr\nτ intra\nr\nτ exp\nr\nProgram code\nHour\n◦\nDay\nHour\nSec\nKOI-4032\n19.0\n42.7\n1\n1\nNaN\nNaN\n120\nIB\nK00701\n18.9\n45.3\n5\n1\n15\nNaN\n1200\nLW\nK00117\n19.8\n48.2\n20\n1\n1\nNaN\n1200\nLW\nK00319\n18.8\n43.9\n18\n1\n2\nNaN\n1400\nJZ\nT006324\n22.1\n67.5\n14\n3\n1\n1.5\n900\nFD\nmaximum airmass or minimum moon distance. We con-\nstrain the scheduling of targets only to when they are\nvisible in Section 3.4.\nFinally, the schedule requires an array that maps each\nslot s to a specific calendar date. This is done with ts\nwhich is set to be 1 on the first day of the observing\nsemester.\nThe time difference (in days) between two\nslots s and s′ is simply δ = ts′ − ts.\nWe denote the\nmaximum separation of any two given nights as δmax =\ntNs − t1, the duration of the observing semester. We\nsummarize the symbols from the main body of this text\nin Appendix A.\n3.2. Weather Sampling\nVariable weather at Maunakea impacts the nightly\nschedules.\nSome nights, cloud cover or poor seeing\nleads to significant reductions of throughput, render-\ning our target list practically unachievable. On severe\nweather nights, we are forced to forfeit observing al-\ntogether.\nWhile we cannot predict the precise extent\nof weather-related disruptions in advance, failing to in-\ncorporate amortized weather losses into our scheduler\nwould introduce a substantial error into our completion\nexpectations.\nTo address these challenges, we reserve 30% of all al-\nlocated quarter nights for adverse weather conditions.\nDuring these reserved periods, no observational targets\nare scheduled. This 30% allocation applies to a random\nselection of time slots in {1, 2, . . . , Ns}. In other words,\nfor each slot s′ randomly designated for weather-related\ndowntime, we ensure that all observing requests r have\nVrs′ = 0.\nWe chose to sample entire quarters as opposed to sam-\npling out 30% of the time within every quarter night be-\ncause we believe this to be closer to the reality of weather\nlosses. In general, individual quarters are usually either\nlost entirely to weather, or not. This works as a first\norder correction to our forecasting, and we discuss how\nthis might be improved in Section 6.\n3.3. Decision Variables\nOur ILP formulation of the semester scheduling prob-\nlem uses the following binary decision variables:\n• Yrs = 1 if request r is scheduled to the quarter\nnight slot s, and 0 otherwise. This variable speci-\nfies the full semester schedule, with the caveat that\nrequests within a slot are not (yet) ordered. It has\nsize Nr × Ns.\n• Brss′ = 1 if requested target r is scheduled to both\nslots s, s′, and 0 otherwise. This variable tracks\nthe assignment of pairs of observations. It has size\nNr × N 2\ns .\n• Drδ = 1 if requested target r is observed twice\nwith time separation δ in days, and 0 otherwise,\ntracking the cadence achieved for each request. It\nhas size Nr × (δmax + 1).\nFigure 1 is a schematic of showing how Yrs specifies a\nschedule. Figure 2 is a schematic showing the relation-\nship between the three binary decision variables listed\nabove.\n3.4. Constraints\nWe achieve the desired observational cadence by en-\nforcing the following constraints in our optimization.\nConstraints 1, 2, 3:\nEstablish relationship be-\ntween B and Y . For each request r, the values in Brss′\nact as and statements: values in B are only ‘turned on’\n(set to 1) when both corresponding values in Y also\ncontain the value 1. To avoid degenerate constraints,\nwe require s < s′. This is accomplished by:\nBrss′ ≤ Yrs\n(1)\nBrss′ ≤ Yrs′\n(2)\nBrss′ ≥ Yrs + Yrs′ − 1\n(3)\n∀r = 1, . . . , Nr\n∀s = 1, . . . , s′ − 1\n∀s′ = 1, . . . , Ns\n5\nFigure 1. The Yrs matrix specifies the set of requests as-\nsigned to each slot. Note that a single request may be sched-\nuled multiple times and a slot may contain multiple requests.\nConstraints 1 and 2 ensure that the values in Brss′ can-\nnot be 1 when either Yrs or Yrs′ is zero. Constraint 3\nensures Brss′ = 1 when both Yrs and Yrs′ are 1.\nConstraint 4: Establish relationship between D\nand B. Values in D are 1 if a pair of scheduled obser-\nvations exist for a request r at two slots separated by\nδ. That is, any pair of slot indices in B that satisfy this\nseparation condition will force D to 1:\nDrδ ≥ Brss′\n∀r = 1, . . . , Nr\n∀δ = 0, 1, . . . , δmax\n∀s = 1, . . . , s′ − 1 ∀s′ = 1, . . . , Ns\nif ts′ − ts = δ\n(4)\nConstraint 5:\nTargets may only be scheduled\nwhen they are visible. Values in Y must be forced\nto 0 whenever V holds the value 0.\nYrs ≤ Vrs\n∀r = 1, . . . , Nr\n∀s = 1, . . . , Ns\n(5)\nIf Vrs is 1, Yrs may be either 1 or 0. The value is deter-\nmined as part of the optimization.\nConstraint 6: Schedule may not exceed the max-\nimum number of requested observations. The sum\nof the values in each row of the Yrs matrix is the sched-\nuled number of observations for request r, and should\nnot exceed ninter\nr\n.\nNs\nX\ns=1\nYrs ≤ ninter\nr\n∀r = 1, . . . , Nr\n(6)\nConstraint 7: Total exposure times must not ex-\nceed length of slot. We constrain the sum of each\ncolumn of Y multiplied by the respective exposure time\nτ exp\nr\nand the number of exposures on each night nintra\nr\nof each index.\nNr\nX\nr=1\nYrsτ exp\nr\nnintra\nr\n≤ Is\n∀s = 1, . . . , Ns\n(7)\nNote that this summation does not give any considera-\ntion to slew times or overheads, slightly overfilling some\nslots. We choose to over-saturate those in the upcoming\nnight, in the next constraint.\nConstraint\n8:\nLoad\nthe\nupcoming\nquarter\nnight(s) with exposures.\nShould weather permit\nideal observing conditions, slots within the upcoming\nobserving night should be nearly filled with exposures.\nLet se and sℓ be the earliest and latest allocated quar-\nters in the upcoming night, respectively. Let f be the\nminimum fraction these quarters must be filled, i.e. the\nlower bound to the column sum.\nNr\nX\nr=1\nYrsτ exp\nr\nnintra\nr\n≥ Isf\n∀s = se, . . . , sℓ\n(8)\nWe allow the TTP optimization to throw out high slew\ntargets from upcoming nights, if necessary. We note that\nsℓ can arbitrarily be chosen to saturate several nights\nat once, if one wanted to prepare multiple schedules in\nadvance.\nConstraint 9: Ensure minimum specified inter-\nnight spacing of observations. Finally, we enforce\nthe minimum cadence threshold for each request by re-\nstricting the values in D, in turn restricting certain pairs\nof observations.\nDrδ = 0\n∀δ = 0, . . . , τ inter\nr\n− 1\n∀r = 1, . . . , Nr\n(9)\n3.5. Objective Function\nThe objective of the auto-scheduler is to maximize\nthe number of observations, while penalizing long gaps\nbetween observations:\nMax\n Nr\nX\nr=1\nNs\nX\ns=1\nYrs − C\nNr\nX\nr=1\nδmax\nX\nδ=1\nδDrδ\n!\n(10)\nWhere C is a small enough constant that the second\nterm is less than unity. We determined C using an up-\nper bound on the value of the second term, assuming\n6\nFigure 2. Graphical representation of binary decision variables. Left: Yrs for the first two targets in Figure 1. To\nsimplify the diagram, we show a scheme with one slot per night where slots occur on sequential nights. Our implementation at\nKeck uses up to four slots per night and slots are not guaranteed to occur on sequential nights. Middle: Brss′ specifies any\ninstance when a single request is scheduled into two separate slots, s and s′ where s < s′. The upper matrix shows how B1,s,s′\nfollows request 1 in Y1,s; the lower matrix corresponds to request 2. Entries in B at and below the diagonal are always zero.\nRight: Dr,δ records whether two observations of request r were scheduled δ days apart.\nthat all observations are achieved and any given pair of\nobservations occur a distance δmax apart:\n1\nC ≈\nX\n1≤r≤Nr,ninter\nr\n>1\n\u0012ninter\nr\n2\n\u0013\nδmax ≈ 106\n(11)\nThis ensures that our cadence penalizing term never im-\npedes on the observation of additional targets.\nA simple interpretation of the objective is that the op-\ntimization algorithm will prioritize a family of solutions\nto the ILP that have the highest number of completed\nrequests, then search these solutions locally for a sched-\nule that achieves the densest possible sampling for every\ntarget. The unconstrained values of D will preferentially\nbe set to 0, since they contribute negatively to the ob-\njective function.\nWe solve this ILP formulation using Gurobi version\n10.0.1, a state-of-the-art optimization suite that solves\nILP problems using the branch-and-bound algorithm\n(Gurobi Optimization, LLC 2023). We process observ-\ning requests and allocations using the Python program-\nming language, and generate the ILP model within the\nGurobi Python API. In our tests, Gurobi solves the\nmodel in ten minutes or less on a modern laptop (see\nSection 5.2 for further details).\n4. UPDATING THE MODEL THROUGHOUT THE\nSEMESTER\nWe re-run our algorithm after each observing night\nby integrating past observing data into our formulation\nas constraints.\nThe result is a dynamic optimization\nscheme where a unique semester plan is generated under\nthe new conditions each night.\n4.1. Changes to the Formulation\nUpdating the environment of the semester problem\nrequires the addition of new constraints and the mod-\nifications of others.\nWe first construct a new matrix\nPrs which contains the ingested observing data from all\nnights preceding the current night. Recall that se is the\nfirst slot in the upcoming night. P will contain entries\nfor all r for times before this value:\n• Prs = 1 if request r was already observed during\nslot s, and 0 otherwise\nConstraint 10:\nAt all time values before the\npresent, P should dictate the behavior of Y .\nYrs = Prs\n∀r = 1, . . . , Nr\n∀s = 1, . . . , se\n(12)\n7\nIn other words, the columns of Y which occurred in the\npast are included as ‘variables’, but are not freely opti-\nmized. They are used only to set the initial conditions\non cadence for the remainder of the schedule. For this\nreason, it is important to consider that observers may\nchoose to execute observations that violate constraints\nimposed on the model. Care must taken to remove the\ncorresponding constraints, or else the values retrieved in\nPrs may cause the model to become infeasible.\nFor example, on a night of notably poor weather con-\nditions, observers might abandon the queue schedule to\nobserve the brightest targets in the request list.\nSay\nthat one of those chosen targets, r, was observed two\ndays ago, but τ inter\nr\n= 5. Observers choose to execute\nthis observation, because it is one of the only targets\nbright enough for the current conditions. The next day,\nPrs will contain two observations with δ = ts′ − ts = 2,\nwhich violates Equation 9 as a result of Equations 12, 3,\nand 4. This immediately makes the entire optimization\ninfeasible.\nWe modify D to not track pairs of slots which have\nboth passed. We redefine the bounds of Equation 4 as\nfollows:\nDrδ ≥ Brss′\n∀r = 1, . . . , Nr\n∀δ = 0, 1, . . . , δmax\n∀s = 1, . . . , s′ − 1\n∀s′ = se, . . . , Ns\nif ts′ − ts = δ\n(13)\nFor pairs of slots which both occur in the past, B cannot\nforce D to be 1.\nThe model will ignore violations to\nEquation 9 that occurred in the past. The minimum\ncadence will still be respected for all future values of Y .\nNext, we restrict the domain of Equations 5 and 7\nto s = {se, . . . , Ns}. The scheduler need only impose\nthese rules on nights which have not already occurred,\nand must accept the values in Prs even if they violate\nthe rules enforced on upcoming nights. The adaptation\nto 5 will prevent model infeasibility if a request r was\nobserved during slot s, but the value of Vrs was com-\nputed by the scheduler to be 0. The change to 7 catches\nthe rare case where a past night achieved more expo-\nsures than were on the queue schedule, causing the sum\nof exposures to exceed Is if the constraint is enforced.\n4.2. Re-optimization\nWe optimize the semester problem again, with the\nsame objective function as in Section 3.5.\nThe val-\nues in Prs will act as hard constraints, and the op-\ntimizer will explore possible plans of action for future\nslots which maximize the objective. While the semester\noptimum may be altered after even the first observing\nnight, this dynamic method searches out the best path\nmoving forward. For slots between se and sℓ, we use\nthe TTP (Handley et al. 2023) to precisely order all the\nassigned requests and accommodate intra-night cadence\nconstraints, then share the schedule with the observing\nteam.\n5. IMPLEMENTATION AT KECK OBSERVATORY\nThis automated queue system is deployed at Keck Ob-\nservatory by the California Planet Search (CPS) coali-\ntion (Howard et al. 2010b) for the 2023B semester on\ntime allocated for the Keck Planet Finder (KPF). CPS\ncombines a multitude of Doppler search programs, re-\nsulting in 1388 observations scattered across 124 differ-\nent queue quarter nights in 2023B. Within these collec-\ntive pools is typically a combination of high cadence,\nlow cadence, and single shot observation requests from\nover a dozen programs.\n5.1. Request Visibility\nUsing the start and end Julian Dates of each quarter\nnight, we calculate the duration of each interval Is in\nminutes, and determine the nominal visibility of each\ntarget in the request catalog from the given celestial co-\nordinates. For Keck, we require that the target be above\n30 degree elevation, above the Nasymth platform, and\nmore than 30 degrees from the moon. This binary con-\ndition is evaluated at every minute within the interval.\nTo reduce the risk of over-constraining the slew opti-\nmization described in Handley et al. (2023) by packing\nthe night too tightly towards the beginning or end of\nthe quarter night, we require that observing conditions\nbe met for some constant a × Is minutes for Vrs to be\none (Figure 3), where a can be adjusted as necessary.\nIt should be noted that it is trivial to make the visibil-\nity requirements unique for each request, such as for tar-\ngets that require lower airmass observations. We com-\npile the subset of nights for which each request is visible\nat Keck, and construct the matrix Vrs.\n5.2. Performance on KPF in 2023B\nWe present the first month of progress by our auto-\nscheduler on the dataset described in Section 3.1. This\nsemester features fifteen distinct programs with Nr =\n204 unique requests for the pooled queue time of Ns =\n126 scattered quarter nights.\nThis totals to 1388 ob-\nservations to schedule into 317 hours of allocated time.\nEarly in the semester, the problem is largely uncon-\nstrained and runs on the order of 10 minutes to obtain a\nnear optimal model. As observing nights pass, the com-\nputational load decreases. After one month, it routinely\nfinds an optimal solution in under 3 minutes.\nThe scheduler produces various plots after each run.\nThe first shows the completion rate of each program as\n8\nFigure 3. Sample paths in the altitude/azimuth frame at\nKeck.\nTargets that would be deemed visible have paths\nshaded in green as opposed to red.\nThe fraction of time\na for which requests must satisfy observing constraints is a\nfree parameter. Here, we show the case where a = 0.5.\na function of time. The current and forecasted progress\nof each program by the scheduler is displayed in Fig-\nure 4 subject to all constraints outlined in Section 3.4\nand randomized weather sampling. In an ideal world,\nall programs would reach 100% at the last day of ob-\nservations.\nHowever, due to mismatches between the\ndistribution of allocated nights determined by the Keck\nObservatory scheduler (see Section 2), and the cadence\nneeds of programs, achieving 100% completion is not\nalways feasible.\nThe Keck Observatory scheduler determines the dis-\ntribution based on limited information provided in the\nKeck coversheets, typically consisting of coordinates for\nthe ten highest priority targets. Consequently, the KPF\nallocations may not align well with the specific cadence\nrequirements of all programs. A summary of the cadence\ndistribution of these requests by program is shown in\nFigure 5.\nFor the entire semester, we also generate target-by-\ntarget schedules. Figure 6 provides an example for two\ntargets from program LW, illustrating the visibility and\nscheduling of each target. These plots show when each\ntarget is visible, how those periods coincide with allo-\ncated time on KPF, and when observations are conse-\nquently scheduled. We note that there is a significant\ndifference between the nights available and the nights\nnecessary to observe all targets to completion, which in-\nhibits the progress of some programs.\nIn 2023B, the\nKPF schedule was heavily front-loaded in the first two\nmonths (see Figure 6), which helped some programs\nFigure 4.\nCumulative progress of each program across\nthe 2023B semester on KPF, as determined by our auto-\nscheduler. The vertical dashed line indicates the most recent\ndate the scheduler was run (one month of progress).\nachieve high forecasted completions, and hindered oth-\ners.\nDespite these challenges, eight of the fifteen programs\nin 2023B are expected to achieve 100% completion by\nthe end of the semester. Four of the remaining programs\nare projected to achieve greater than 80% completion.\nUltimately, only one program sits below 75% completion\ndue to a mismatch in target coordinates and allocated\nKPF time.\nThe two targets in the PR program had limited visibil-\nity, rising primarily in the second half of 2023B. The tar-\nget 26965 was requested for ninter\nr\n= 100 unique nights\nof observations.\nThe other, 22049, was requested for\nninter\nr\n= 50 unique nights of observations. As computed\nin Vrs, both targets were visible for a total of 37 unique\nnights, bounding the completion to a maximum of less\nthan 50%.\nThe simulated schedule respects all requested mini-\nmum cadences, and attempts to schedule each consec-\nutive observation at or near the minimum value. Long\ngaps between observations are sometimes required due\nto the distribution of allocated time, but are relatively\nuncommon. Across all targets, 158 pairs of consecutive\nobservations occurred at exactly the requested cadence,\nand 57% of all pairs of observations occur within three\ndays of the minimum cadence. The proportional devia-\ntions:\nPropDev(r, s, s′) = ts′ − ts − τ inter\nr\nτ inter\nr\n(14)\nare summarized in the top right of Figure 5.\n5.3. Performance on HIRES in 2023A\n9\nFigure 5. Top left: Distribution of cadenced requests in the τ inter\nr\nand ninter\nr\nplane for KPF during the 2023B semester, with 5%\ninduced scatter for visibility. The plot immediately below shows the cumulative number of requests in the respective programs\nat each cadence. Top right: histogram of how far the simulated schedule deviates proportionally from the ideal cadence for\nconsecutive pairs of observations, across all requests and programs. The bottom three plots are the same as the top, but for\nHIRES in 2023A.\nKPF is a newly commissioned instrument and nearly\nall early science programs in 2023B favor nightly ca-\ndence.\nWe wish to demonstrate our algorithm’s suit-\nability toward a wider diversity of cadence needs. We\nfurther simulate our algorithm’s performance on target\nrequests and the allocated time for CPS on Keck/HIRES\nin 2023A. HIRES in 2023A offers a more mature suite\nof programs consisting of a mix of high, medium, and\nlow cadence needs, as shown in Figure 5. This data of-\nfers a more robust opportunity to test our algorithms\nperformance when cadence is the predominant schedul-\ning constraint. Observations of this type are the most\ndifficult for human schedulers to plan. Of the 543 obser-\nvational gaps across all requests r, 111 occurred at the\nminimum allowed τ inter\nr\n, and 324 occur less than 5 days\nabove τ inter\nr\n. The median violation of τ inter\nr\nis 3 days,\nwith the proportional deviation shown in the bottom\nright of Figure 5. Additional target-by-target plots of\nthis simulation are shown in Figure 7 for a subset of the\nprogram DG. Through this simulation, we find that our\nalgorithm is capable of accommodating a mixed portfo-\nlio of programs with different cadence needs.\n6. FUTURE DIRECTIONS\n6.1. Support for Varied Weather Conditions\nIn principle, the auto-scheduler operates at sufficient\nspeeds (on the order of 5 minutes on a standard laptop)\nto support resolving the entire model as weather condi-\ntions at Keck evolve. However, these effects can be pre-\nemptively mitigated within the scheduling environment\nby producing multiple observing strategies based upon\npotential weather conditions for the upcoming night.\n10\nFigure 6. Visualization of the quarter night scheduling problem in 2023B for the two targets K00701 and K00117 (see Table\n1) which are low and high cadence requests, respectively. Four rows correspond to each target, with time (quarter) increasing\nupward until resetting at the next plot. Top plot: visible quarter nights at Keck Observatory (green) throughout each night as\na function of the date for K00701. Overplotted are the queue allocated quarter nights (blue) and the scheduled observations\n(black) for K00701 respecting ninter\nr\n= 5, τ inter\nr\n= 15 as queried from the Yrs variable. Bottom: same as top, but for the target\nK00117, respecting ninter\nr\n= 20, τ inter\nr\n= 1.\nFigure 7. Select targets from our simulation of CPS Doppler observations on the HIRES instrument in 2023A, presented in\nthe same format as Figure 6. Shown are four low cadence requests with ninter\nr\n= 5, τ inter\nr\n= 25, which are traditionally difficult\nto schedule. The last target has severely limited visibility, causing an outlier in the bottom right of Figure 5.\nFurthermore, these environments would benefit substan-\ntially from a more sophisticated weather sampling rou-\ntine than that outlined in Section 3.2.\nWe intend to\nequip future versions with a Monte Carlo sampler that\nweathers out nights based on historical WMKO data.\n6.2. Program Equity\nAn additional objective of queue systems is to promote\nequitable instrument access for programs of varying sizes\nand scientific goals. Some programs may have targets\nthat have limited visibility, causing their scheduling to\nbe disfavored. It may be desirable to equip the frame-\nwork with variables that track the completion of each\n11\nprogram, allowing the objective to homogenize these\nterms.\nThe autoscheduler presented here uses a linear ob-\njective function.\nAn ‘equity’ term may be added by\nadding the Average Absolute Deviation (AAD) of pro-\ngram completion may be added. Let Ntot be the total\nnumber of observations requested across all programs\nand Np be the number requested by each program p,\nwhere the list of all programs is {1, . . . , pmax}. Let Mrp\nbe a pre-computed matrix that maps each request r to\neach program p.\n• Mrp = 1 if the target r is a subset of the program\np, and 0 otherwise\nWe use an additional variable Ap for this formulation,\nand define this variable with the following constraint:\n• Ap is the normalized (percentage) absolute devia-\ntion of each program from completion\nAp =\n\f\f\f\f\f\nPNr\nr=1\nPNs\ns=1 MrpYrs\nNp\n−\nPNr\nr=1\nPNs\ns=1 Yrs\nNtot\n\f\f\f\f\f\n(15)\n∀p = 1, . . . , pmax\nThe objective in section 3.5 can be modified to include\nthe sum of these deviations for all programs times a\nscalar.\nHowever, solving with 3 objective terms re-\nduces the interpretability of the ILP framework, since\nthe scalar terms in the objective function need to be\nfine tuned by hand to find a balance of program equity\nand observational cadence. Setting a maximum accept-\nable deviation using the terms in Ap as a constraint on\nthe model avoids this ambiguity.\n7. CONCLUSION\nIn summary, we have developed an automated sched-\nuler to manage the execution of approximately ∼1000\nDoppler observations during a single semester at the\nKeck Observatory.\nOur on-sky progress with KPF\nin 2023B demonstrates that the system consistently\nachieves high completion rates across various programs\nwhile adhering to inter-night and intra-night cadence\nspecifications. Additionally, our simulations on HIRES\nin 2023A showcase the system’s proficiency in handling\ndiverse programs with varying cadence requirements, en-\nsuring a significant portion of observations occur at the\nrequested frequency.\nOur scheduling system operates efficiently, capable of\nscheduling an entire semester within a few minutes. This\nnot only saves considerable time for human schedulers\nbut also provides a long-range outlook, alleviating CPS\nparticipating scientists from having to manually request\ntargets for specific nights.\nThe subsequent Traveling\nTelescope Problem optimization minimizes instrument\ndowntime during observing runs, offering precise execu-\ntion timing for each observation.\nThis algorithmic framework can be extended for use\nin any survey that involves collecting a large number of\nobservations over numerous distinct observing intervals,\nparticularly when the cadence of observations is a crit-\nical factor. As the coming decades witness an increase\nin such endeavors, scheduling algorithms equipped to\nmanage these challenges will become indispensable in\nachieving scientific objectives.\nSimulations employing\nthis algorithm or variants can enhance our understand-\ning of how allocated time distribution impacts different\nprograms or surveys and how target selection can be\noptimized at ground-based observatories.\nL.H., E.A.P., and J.L. acknowledge support from the\nHeising-Simons Foundation Grant #2022-3832. V.V.M.\nacknowledges support from the UCLA Anderson School\nof Management. Additionally, the authors wish to rec-\nognize and acknowledge the very significant cultural role\nand reverence that the summit of Maunakea has within\nthe indigenous Hawaiian community. We are most for-\ntunate to have the opportunity to conduct observations\nfrom this mountain.\n1\n2\n3\n4\n5\n6\n7\n8\n9\nSoftware:\nastropy (Astropy Collaboration et al.\n2013, 2018), numpy (Harris et al. 2020), pandas (pan-\ndas development team 2020), gurobi (Gurobi Optimiza-\ntion, LLC 2023), matplotlib (Hunter 2007)\nAPPENDIX\nA. VARIABLES\nTable A1 lists the variables used in all preceding sections of this paper, along with their first usage:\nREFERENCES\nAnglada-Escud´e, G., Amado, P. J., Barnes, J., et al. 2016,\nNature, 536, 437, doi: 10.1038/nature19106\nAstropy Collaboration, Robitaille, T. P., Tollerud, E. J.,\net al. 2013, A&A, 558, A33,\ndoi: 10.1051/0004-6361/201322068\n12\nTable A1. Symbols Used\nSymbol\nDefinition\nSection\na\nMinimum portion of an interval for which a request must satisfy visibility constraints to be scheduled\n5.1\nAp\nContinuous variable indicating the absolute deviation of completion percentage of program p from\n6.2\nthe total semester completion percentage\nBrss′\nBinary variable that indicates whether request r is assigned to both slots s, s′ concurrently\n3.3\nC\nSmall constant used in the objective function to ensure the scheduling of additional observations is\n3.5\nalways prioritized\nDrδ\nBinary variable that indicates whether request r has multiple observations separated by an interval\n3.3\nof δ days\nf\nMinimum fraction of time for which the upcoming nights should be filled with exposures\n3.4\nIs\nDuration of the slot s\n5.1\nMrp\nPre-computed program map. Holds 1 if request r is a subset of program p, 0 otherwise\n6\nninter\nr\nMaximum number of unique nights of observation over the semester for request r\n3.1\nnintra\nr\nMaximum number of exposures per scheduled night for request r\n3.1\nNp\nTotal observations requested by the program p\n6.2\nNr\nTotal number of unique requests\n3.1\nNs\nTotal number of allocated slots\n3.1\nNtot\nTotal observations requested in the semester problem across all programs\n6.2\nPrs\nPast observation matrix. Holds 1 if request r has already been observed during the\n4.1\nslot s, 0 otherwise\np\nProgram index\n6.2\npmax\nNumber of unique programs\n6.2\nr\nRequest index\n3.1\ns, s′\nSlot indices\n3.1\nse, sℓ\nEarliest and latest slots indices which exist in the immediately upcoming night, respectively\n3.4\nts\nCalendar date of the slot s relative to the first slot allocated (days)\n3.1\nVrs\nVisibility matrix. Holds 1 if request r is visible during the slot s, 0 otherwise\n5.1\nYrs\nBinary variable that holds the scheduling state of request r to slot s. Holds 1 if request r is\n3.3\nassigned to quarter night s, 0 otherwise\nδ\nTime difference (days)\n3.1\nδmax\nCalendar difference between the final and first slot in the semester (days)\n3.1\nτ exp\nr\nNominal exposure time of request r (seconds)\n3.1\nτ inter\nr\nMinimum inter-night cadence between observations of the same request r (days)\n3.1\nτ intra\nr\nMinimum intra-night cadence between observations of the same request r (hours)\n3.1\nAstropy Collaboration, Price-Whelan, A. M., Sip˝ocz, B. M.,\net al. 2018, AJ, 156, 123, doi: 10.3847/1538-3881/aabc4f\nBellm, E., Ford, E. B., Tohuvavohu, A., et al. 2019a, in\nBulletin of the American Astronomical Society, Vol. 51,\n125, doi: 10.48550/arXiv.1907.07817\nBellm, E. C., Kulkarni, S. R., Barlow, T., et al. 2019b,\nPASP, 131, 068003, doi: 10.1088/1538-3873/ab0c2a\nBlackman, R. T., Fischer, D. A., Jurgenson, C. A., et al.\n2020, AJ, 159, 238, doi: 10.3847/1538-3881/ab811d\nChaplin, W. J., Cegla, H. M., Watson, C. A., Davies, G. R.,\n& Ball, W. H. 2019, AJ, 157, 163,\ndoi: 10.3847/1538-3881/ab0c01\nFulton, B. J., Weiss, L. M., Sinukoff, E., et al. 2015, ApJ,\n805, 175, doi: 10.1088/0004-637X/805/2/175\nFulton, B. J., Rosenthal, L. J., Hirsch, L. A., et al. 2021,\nApJS, 255, 14, doi: 10.3847/1538-4365/abfcc1\nGibson, S. R., Howard, A. W., Rider, K., et al. 2020, in\nSociety of Photo-Optical Instrumentation Engineers\n(SPIE) Conference Series, Vol. 11447, Society of\nPhoto-Optical Instrumentation Engineers (SPIE)\nConference Series, 1144742, doi: 10.1117/12.2561783\nGiuliano, M., & Johnston, M. 2008, 107–115\nGurobi Optimization, LLC. 2023, Gurobi Optimizer\nReference Manual. https://www.gurobi.com\n13\nHandley, L. B., Petigura, E. A., & Misic, V. V. 2023,\nSolving the Traveling Telescope Problem with Mixed\nInteger Linear Programming.\nhttps://arxiv.org/abs/2310.18497\nHarris, C. R., Millman, K. J., van der Walt, S. J., et al.\n2020, Nature, 585, 357, doi: 10.1038/s41586-020-2649-2\nHoward, A. W., Johnson, J. A., Marcy, G. W., et al. 2010a,\nApJ, 721, 1467, doi: 10.1088/0004-637X/721/2/1467\n—. 2010b, ApJ, 721, 1467,\ndoi: 10.1088/0004-637X/721/2/1467\nHoward, A. W., Marcy, G. W., Bryson, S. T., et al. 2012,\nApJS, 201, 15, doi: 10.1088/0067-0049/201/2/15\nHunter, J. D. 2007, Computing in Science & Engineering, 9,\n90, doi: 10.1109/MCSE.2007.55\nJohnston, M. D., & Miller, G. E. 1994\nLampoudi, S., Saunders, E., & Eastman, J. 2015, arXiv\ne-prints, arXiv:1503.07170,\ndoi: 10.48550/arXiv.1503.07170\nLuhn, J. K., Wright, J. T., Howard, A. W., & Isaacson, H.\n2020, AJ, 159, 235, doi: 10.3847/1538-3881/ab855a\nMarcy, G. W., & Butler, R. P. 1996, ApJL, 464, L147,\ndoi: 10.1086/310096\npandas development team, T. 2020, pandas-dev/pandas:\nPandas, latest, Zenodo, doi: 10.5281/zenodo.3509134\nParazin, B., Coughlin, M. W., Singer, L. P., Gupta, V., &\nAnand, S. 2022, ApJ, 935, 87,\ndoi: 10.3847/1538-4357/ac7fa2\nPepe, F., Cristiani, S., Rebolo, R., et al. 2021, A&A, 645,\nA96, doi: 10.1051/0004-6361/202038306\nQuirrenbach, A., Amado, P. J., Caballero, J. A., et al.\n2014, in Society of Photo-Optical Instrumentation\nEngineers (SPIE) Conference Series, Vol. 9147,\nGround-based and Airborne Instrumentation for\nAstronomy V, ed. S. K. Ramsay, I. S. McLean, &\nH. Takami, 91471F, doi: 10.1117/12.2056453\nSchwab, C., Rakich, A., Gong, Q., et al. 2016, in Society of\nPhoto-Optical Instrumentation Engineers (SPIE)\nConference Series, Vol. 9908, Ground-based and Airborne\nInstrumentation for Astronomy VI, ed. C. J. Evans,\nL. Simard, & H. Takami, 99087H,\ndoi: 10.1117/12.2234411\nSeifahrt, A., St¨urmer, J., Bean, J. L., & Schwab, C. 2018,\nin Society of Photo-Optical Instrumentation Engineers\n(SPIE) Conference Series, Vol. 10702, Ground-based and\nAirborne Instrumentation for Astronomy VII, ed. C. J.\nEvans, L. Simard, & H. Takami, 107026D,\ndoi: 10.1117/12.2312936\nSiverd, R. J., Brown, T. M., Barnes, S., et al. 2018, in\nSociety of Photo-Optical Instrumentation Engineers\n(SPIE) Conference Series, Vol. 10702, Ground-based and\nAirborne Instrumentation for Astronomy VII, ed. C. J.\nEvans, L. Simard, & H. Takami, 107026C,\ndoi: 10.1117/12.2312800\nSolar, M., Michelon, P., Avarias, J., & Garces, M. 2016,\nAstronomy and Computing, 15, 90,\ndoi: 10.1016/j.ascom.2016.02.005\nVogt, S. S., Radovan, M., Kibrick, R., et al. 2014, PASP,\n126, 359, doi: 10.1086/676120\n"
}