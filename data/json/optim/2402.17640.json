{
    "optim": "Exergetic Port-Hamiltonian Systems Modeling Language Markus Lohmayera,∗, Owen Lynchb, Sigrid Leyendeckera aInstitute of Applied Dynamics Friedrich-Alexander Universit¨at Erlangen-N¨urnberg, Erlangen, Germany bTopos Institute Berkeley, CA, USA Abstract Mathematical modeling of real-world physical systems requires the consistent combina- tion of a multitude of physical laws and phenomenological models. This challenging task can be greatly simplified by hierarchically decomposing systems. Moreover, the use of diagrams for expressing such decompositions helps make the process more intuitive and facilitates communication, even with non-experts. As an important requirement, models have to respect fundamental physical laws such as the first and the second law of thermodynamics. While some existing modeling frameworks can make such guarantees based on structural properties of their models, they lack a formal graphical syntax. We present a compositional and thermodynamically consistent modeling language with a graphical syntax. As its semantics, port-Hamiltonian systems are endowed with fur- ther structural properties and a fixed physical interpretation such that thermodynamic consistency is ensured in a way that is closely related to the GENERIC framework. While port-Hamiltonian systems are inspired by graphical modeling with bond graphs, neither the link between the two, nor bond graphs themselves, can be easily formalized. In contrast, our syntax is based on a refinement of the well-studied operad of undi- rected wiring diagrams. The language effectively decouples the construction of complex models via the graphical syntax from physical concerns, which are dealt with only at the level of primitive subsystems that represent elementary physical behaviors. As a consequence, reuse of models and substitution of their parts becomes possible. Finally, by construction, systems interact by exchanging exergy, i.e. energy that is available for doing work, so the language is particularly well suited for thermodynamic analysis and optimization. Keywords: applied category theory, bond graphs, classical electromagnetism, classical mechanics, compositionality, exergy, GENERIC, graphical syntax, local thermodynamic equilibrium, multiphysics, nonequilibrium thermodynamics, port-Hamiltonian systems Preprint submitted to arXiv February 28, 2024 arXiv:2402.17640v1  [eess.SY]  27 Feb 2024 1. Introduction In this introduction we want to answer the following questions: 1. What are Exergetic Port-Hamiltonian Systems (EPHS)? 2. How do they enable compositional modeling? 3. Why is this practically relevant? In addition, we briefly summarize key ideas of nonequilibrium thermodynamics and we discuss related work that inspired our developments. The introduction finishes with an outline of the main part of the paper. 1.1. What? EPHS provide a compositional and thermodynamically consistent language for expressing mathematical models of multiphysical systems at macroscopic scales. Such systems may combine (a) classical mechanics (e.g. spring-mass systems, multibody dynamics, fluid mechanics), (b) classical electromagnetism (e.g. LC circuits, electromagnetic wave propagation) (c) and irreversible processes with local thermodynamic equilibrium (e.g. friction/viscosity, electrical resistance/conduction, thermal conduction). The EPHS language is termed compositional since it enables a completely modular and hierarchical specification of models based on its simple graphical syntax, which is discussed in more detail in the next subsection. If one flattens any hierarchical nesting of systems, one finds that every system is determined by a power-preserving interconnection of primitive subsystems. There are three main classes of primitive systems: 1. Systems that represent energy storage are characterized by a function which yields the stored energy for each possible state of the primitive system. 2. Systems that represent reversible energy exchange are characterized by a so-called Dirac structure, as known e.g. from (constrained) mechanical systems [1]. 3. Systems that represent irreversible energy exchange are characterized by another type of structure that we call Onsager structure. Since both classical mechanics and electromagnetism can be expressed using Dirac structures, item 2. corresponds to (a) and (b) above, while item 3. corresponds to (c). Structural properties of the primitive systems guarantee that all models respect the first and the second law of thermodynamics, Onsager’s reciprocal relations, as well as further conservation laws (e.g. for mass). Section 1.4 aims for a very brief introduction to nonequilibrium thermodynamics. 2 sa ke bₖ m p f kin (kinetic energy system) Figure 1: Graphical representation of an interconnection pattern with different syntactic elements shown in a different color. The outer box shown in orange represents the interface of the resulting composite system. The two protruding lines correspond to its ports called f and bk. The two inner boxes shown in red represent (the interface of) the subsystems called ke (storage of kinetic energy) and sa (self-advection of kinetic energy). Both have ports called p (momentum) and m (mass), while sa has another port called bk (advection of kinetic energy across the boundary of the spatial domain). The port combinator shown in purple combines the ports p (fluid momentum) and m (fluid mass) into the multiport f (fluid). The black dots represent junctions where power is exchanged among the connected ports. The dashed line indicates that port m of the port combinator does not partake in power exchange, but merely shares information about the state (fluid mass). 1.2. How? Expressions in the graphical syntax are called interconnection patterns because a pattern specifies how a composite system can be formed through a power-preserving interconnection of subsystems. Figure 1 shows an example from fluid dynamics. The syntax deals with systems only in terms of their interfaces, i.e. their exposed ports. Each port has two attributes: The first attribute gives the physical quantity that can be exchanged via the port together with the corresponding state space. To rule out ill-defined connections, only ports with the same quantity can be connected. The second attribute is of Boolean type and indicates whether power can be exchanged over the port or merely information about system state, as indicated graphically by a solid or a dashed line, respectively. An interconnection pattern should be thought of as a function which, for every round inner box, takes as input a system with matching interface and returns a system whose interface matches the outer box. For instance, the pattern shown in Figure 1 represents a function which takes two subsystems whose interfaces are determined by the ports of the boxes ke and sa, and it returns a composite system whose interface is determined by the ports of the outer box. In the graphical representation, we often draw inner boxes filled with a color that indicates the nature of the subsystems that we consider as inputs. In Figure 1, ke has a blue filling as it represents energy storage, i.e. the fluid’s kinetic energy, while sa has a green filling as it represents reversible energy exchange, i.e. the advection of momentum and mass by the fluid flow. Written on top of the outer box, kin is an identifier akin to a function name and the text in parenthesis is just a short ∗Corresponding author Email address: markus.lohmayer@fau.de (Markus Lohmayer) 3 description. The port combinator and the corresponding multiport f are syntactic sugar that allows the composite system to be connected to other systems without drawing parallel connections. sa ke m p f kin (kinetic energy system) (a) Kinetic energy system int kin th vol shr f f (fluid) (b) Fluid system f el ek em f em emhd (c) EMHD System Figure 2: Hierarchical specification of an electro-magneto-hydrodynamics model: The fluid model f shown in (b) comprises the kinetic energy system kin shown in (a) and four further models which are not shown, namely an internal energy system int, a thermal conduction model th, and volume / shear viscosity models vol / shr. The electro-magneto-hydrodynamics model emhd shown in (c) comprises the fluid model f and three further models which are not shown, namely an electro-magnetic system em, an electric conduction model el, and a model for the electro-kinetic coupling ek. Figure 2 demonstrates the hierarchical specification of a model for electro-magneto- hydrodynamics. For simplicity, a spatial domain with empty or isolated boundary is assumed such that only the in-domain interconnection of the different models needs to be dealt with. The yellow filling of the inner boxes in Figures 2b and 2c indicates that another composite system, which in turn is specified with its own interconnection pattern, is supplied as input. Recursively substituting into all yellow inner boxes the respective interconnection patterns would yield an equivalent model specification with- out hierarchical decomposition. The composition of interconnection patterns through substitution is uniquely defined as long as interfaces match. Similarly, one can add a level of nesting by refactoring a number of subsystems into a reusable composite subsystem. In the fluid model, one could for instance factor out the kinetic energy system filling the box kin and the internal energy subsystem filling the box int into a reusable ideal compressible fluid model. 1.3. Why? EPHS provide a formal and intuitive modeling language suited for humans and software tools alike. As shown above, increasingly complex models can be assembled from simpler and ultimately primitive parts. This fosters the reusability of models and encourages the conceptual separation of different levels of detail. Beyond the modeling 4 process, this provides value in interdisciplinary communication and education. Some modeling errors can be completely avoided due to typed interfaces (given by ports with fixed physical quantities) and the built-in thermodynamic consistency. Since inter- connection patterns can be used as exergy flow diagrams, EPHS models are particularly useful for thermodynamic analysis and optimization. The compositional nature of EPHS could enable a scalable approach to model transformations, such as discretizations, and also to the integration of scientific machine learning techniques in first-principles-based physical modeling. 1.4. Nonequilibrium thermodynamics in a tiny nutshell Most physical systems are characterized by a huge number of degrees of freedom but keeping track of them is usually neither possible nor useful. Nonequilibrium thermodynamics aims to provide a framework for coarse-grained modeling, meaning that fast dynamics at small scales are not resolved and a quantity called entropy is introduced to account for the missing information, see e.g. [2]. Coarse-graining is possible because, despite of fluctuations at the microscopic scale, one can eventually observe non-fluctuating properties at a more macroscopic scale; at least this is the case for isolated systems. For instance, temperature is a property that does not appear at the microscopic scale. Thermodynamic properties are classified as extensive when they are proportional to the size of the system (e.g. entropy, volume, mass) or as intensive when they do not depend on the size of the system (e.g. temperature, pressure, chemical potential), see e.g. [3] A system is said to be in local thermodynamic equilibrium if for every material point there exists a neighborhood large enough to observe thermodynamic properties, yet small enough for the properties to be non-varying inside the neighborhood, see e.g. [4]. The size of these neighborhoods presents a macroscopic scale at which the dynamics of the thermodynamic properties can be observed and also modeled. The first law of thermodynamics just restates a well-known fact from mechanics, namely that energy is a conserved quantity. However, instead of considering directly the mechanical and electromagnetic energy associated to microscopic degrees of freedom, a thermodynamic model with local equilibrium resorts to a phenomenological description called internal energy, which is considered to depend on a number of extensive properties, including entropy, and possibly further mechanical or electromagnetic state variables which are observable on the considered macroscopic scale. These quantities then serve as the state variables of a coarse-grained description. Moreover, temperature is the derivative of the internal energy with respect to entropy. Similarly, pressure is given by the derivative with respect to volume and the chemical potential is the derivative with respect to mass, see e.g. [3]. Classical mechanics and electromagnetism exhibit reversible dynamics, meaning that one could in principle arrive again at the initial condition by reversing the direction of time (although for many systems this would be impossible due to chaos). Incomplete knowledge about the microscopic state immediately leads to irreversible dynamics and an irreversible dynamics in turn leads to a growth of entropy, as information (e.g. about the initial state of the system) is lost in the process. This is reflected by the second law of thermodynamics which states that the entropy of an isolated system never decreases 5 and that the system evolves towards a state of maximum entropy, see e.g. [4]. In other words, the uncertainty about the microscopic state can only grow, not decrease. For models with local equilibrium, the irreversible dynamics can be expressed in terms of so-called thermodynamic fluxes that determine instantaneous changes of coarse- grained state variables. The fluxes are expressed as a function of thermodynamic forces, which are given by differences in intensive quantities, see e.g. [4, 5]. For instance, temperature differences cause heat flux, according to Fourier’s law, and differences in chemical potential cause a diffusive mass flux, according to Fick’s law. Further, one may observe cross effects such as a diffusive mass flux caused by temperature differences (Soret effect) and likewise a heat flux caused by differences in chemical potential (Dufour effect). Onsager’s reciprocal relations state that the relation between fluxes and forces must possess a certain symmetry [6]. For instance, the ratio of the mass flux caused by the Soret effect and the respective temperature difference is equal to the ratio of the heat flux caused by the Dufour effect and the respective difference in chemical potential. 1.5. Related work Figure 3 gives a high-level view of this subsection. bond graphs GENERIC PHS ACT dissipative systems theory nonequilibrium thermodynamics framework formalization and compositionality graphical energy-based modeling Figure 3: Informal Venn diagram illustrating that EPHS integrates ideas from graphical and energy-based mod- eling of physical systems with bond graphs, the GENERIC framework for nonequilibrium thermodynamics, the port-Hamiltonian theory of open dissipative systems (PHS), and applied category theory (ACT) research on the formalization of graphical languages and compositional dynamical systems. 1.5.1. Port-Hamiltonian systems Apparent from their name, EPHS have a lot in common with Port-Hamiltonian Systems (PHS). PHS were originally inspired by relating the dynamical systems defined by generalized bond graphs [7] (i.e. bond graphs using a single kind of energy storage elements together with gyrator elements) to Hamiltonian mechanics [8]. While many 6 authors make use of explicit input-output port-Hamiltonian systems, PHS constitute an acausal systems theory, inspired also by the behavioral approach of Willems [9, 10]. The dynamics of networks comprising energy storing elements and reversible coupling elements between them (such as generalized transformers and gyrators) can be formalized, from a geometric viewpoint, as a Hamiltonian system whose Poisson structure reflects the network topology [11]. The generalization to networks with algebraic constraints and externally controlled ports is achieved by using Dirac structures, which unify Poisson structures and presymplectic structures [12]. By specifying a resistive relation on external port variables, the implicit Hamiltonian dynamics can be combined with a dissipative gradient dynamics, allowing for network elements that represent e.g. dampers and resistors. The key properties of PHS are firstly a power- balance equation which states that the sum of the stored power and the dissipated power is equal to the supplied power (passivity) and secondly the possibility to combine port- Hamiltonian systems by composition of their Dirac structures with an interconnecting Dirac structure, see for instance [13]. While the dynamical systems defined by EPHS models are essentially PHS, they have further structural properties and a fixed physical interpretation. PHS in general have no uniform thermodynamic interpretation and they lack a formal graphical syntax to express their interconnection. In contrast to EPHS, PHS also lack a built-in mechanism for referring to subsystems and ports. 1.5.2. GENERIC framework The general equation for reversible-irreversible coupling (GENERIC) provides a framework for combining reversible and irreversible dynamics in a way that respects fundamental thermodynamic principles, namely the first law, the second law and the reciprocal relations discovered by Onsager [14]. The reversible part is defined by an entropy-conserving Hamiltonian dynamics, while the irreversible part is given by an energy-conserving gradient flow, see e.g. [4]. We note that the same holds for closely-related earlier developments in this direction, including metriplectic systems, see [15, 16, 17, 18]. While a large class of well-known dynamical systems from physics can be identified as instances of the GENERIC, see e.g. [2], the framework is especially helpful for the development of new thermodynamic models. The combination of Hamiltonian and gradient dynamics in both PHS and GENERIC systems led to the initial observation of a relationship between the two frameworks in [19]. GENERIC systems with local thermodynamic equilibrium can be seen as port- Hamiltonian systems, where the storage function corresponds to the system’s exergy. This function yields the maximum amount of work that can be extracted by an ideal (i.e. purely reversible) process which may arbitrarily interact with the system’s storage components and a given reference environment [20]. The dynamical systems defined by (isolated) EPHS models are basically GENERIC systems, since their built-in thermodynamic consistency and associated physical inter- pretation follow from the same ideas. Beyond the aspect of compositionality, there are two main differences: 1. GENERIC systems are more general in the sense of including systems beyond local thermodynamics equilibrium (where the concept of temperature does not apply). 2. The reversible part of EPHS is defined using Dirac structures, rather 7 than less general Poisson structures (which cannot express kinematic constraints). This is crucial e.g. for modeling multibody systems and electrical circuits. 1.5.3. Bond graph modeling Bond graph modeling is based on a graphical notation for representing dynamical systems and in particular multi-domain models involving mechanical and electrical elements [21, 22]. The main idea is that elements interact via bonds that represent links for energy exchange. Associated to each bond, there are two dynamic variables called flow and effort, whose product (or duality pairing) gives the exchanged power. Bonds can be connected via two types of junctions, namely 0-junctions, where the flow variables of all connected ports balance, with all effort variables being equal, and dually defined 1-junctions, where the effort variables balance, with all flow variables being equal. In both cases, the net power at a junction is zero. While PHS can be seen as a geometric formalization of the dynamical systems defined by generalized bond graphs, the algebraic formalization of the bond graph notation itself is not straightforward, when compared to e.g. standard multigraphs, see [23, 24]. The inherent complexity of the notation is evident also in practice, since the direction in which exchange of power is counted positive and sometimes also the question which variable is flow and which is effort have to be decided arbitrarily, bond by bond. While bond graphs are frequently used in the literature to illustrate PHS, their use as a formal syntax for model specification is not established. Previous work has focused on algorithms for converting certain classes of bond graphs to port-Hamiltonian systems, see e.g. [25]. In contrast to bond graph notation, the EPHS syntax only has 0-junctions and every interconnection pattern has an outer box. As demonstrated by various applications, a single type of junctions is sufficient and moreover the simplification entails crucial advantages: Interconnection patterns are easier to interpret, in particular due to the direct correspondence between junctions and energy domains. This correspondence arises from the inherent distinction between the roles of flows and efforts, a feature that is lacking in bond graphs. Further, the direction in which exchange of power is counted positive is predetermined in accordance with the convention used in thermodynamics, i.e. energy supplied to a system has a positive sign. Last but not least, interconnection patterns can be hierarchically composed and decomposed in a natural way. 1.5.4. Applied category theory The compositional nature of EPHS can be made precise using category theory. Category theory was first applied in algebraic geometry and topology and now is used to organize many branches of mathematics [26]. In recent decades, category theory has also grown beyond pure math to organize scientific and engineering disciplines as well, giving birth to ‘applied category theory’ [27]. A specific approach to categorical systems theory [28] that has inspired this work is based on the following principles, which can essentially also be found in the work of Willems [10]. 1. A shift of focus from individual systems to how systems relate to each other. 2. An isolated system is a system with empty interface. 8 3. The description of systems involves syntax and semantics. Syntax typically consists of combinatorial data that can be manipulated computationally, while semantics are given by geometric objects that exist only platonically. Additionally, the syntax can be displayed and manipulated diagrammatically as well as in text. An explicit understanding of the translation from syntax to semantics serves as a guide for computer implementation. For instance, there is a line of research which formalizes graphical languages for systems and process such as block diagrams [29], Petri nets [30], junctions of bond graphs [24], and passive linear circuits [31]. These works consider a graphical syntax as some sort of string diagrams, established via a generators and relations approach. More closely related to our work, another line of research uses the theory of operads to define a graphical syntax which supports hierarchical (de-)composition, see [32, 33]. Operads organize formal operations with finitely many inputs (subsystems) and one output (composite system), see [34, 35]. As proposed in [36], the EPHS syntax, is based on the operad of undirected wiring diagrams, which initially appeared in [37], together with its relational semantics used to express database queries, see also [38, 39, 40]. In a similar lane, directed wiring diagrams are used to formalize nested systems of Moore machines and ODEs with outputs, see [41, 42]. A combination of dynamical systems based on directed and undirected wiring diagrams is presented in [43, 44]. The composition of lossless port-Hamiltonian systems was recently studied from a categorical perspective in [45]. 1.6. Outline Section 2 defines system interfaces. Based on this, Section 3 defines interconnection patterns. Section 4 shows how every interconnection pattern implies a relation between the port variables of its interfaces. Section 5 discusses how exergy quantifies the energy stored in a system that is available for doing work. Based on this, Section 6 introduces the primitive systems. Section 7 defines composite systems and how they are formed using the graphical syntax. Section 8 shows that EPHS models are thermodynamically consistent. Section 9 presents an example of a motor model, together with a comparison to a classical bond graph. Section 10 concludes with a discussion. 2. Interfaces While the narrative of discovery, usually proceeds from systems to interfaces, logically speaking, the syntax needs to be introduced before the semantics and hence we start with interfaces. Graphically, the interface of a system is a box with a set of ports drawn around it. While we could treat such sets abstractly, as is often done in applied category theory, for practical reasons we instead treat them as sets of names called namespaces. 2.1. Namespaces Definition 2.1. A string is a non-empty list of characters and a name is a list of strings. △ 9 We write names using a monospace font and with strings separated by dots. For instance, the name consisting of the list of strings “oscillator”, “spring”, “q” is written as oscillator.spring.q. Further, we use [] to denote the empty name, i.e. the empty list of strings. Given two names n and n′, we denote their concatenation by n ∗ n′. For example, a.b ∗ c = a.b.c. Definition 2.2. Given two names p and n, we say that p is a prefix of n, and write p ≤ n if there exists any name s such that n = p ∗ s. In case s , [], we say that p is a strict prefix of n and write p < n. △ Example 2.3. It holds that a.b < a.b.c and a.b ≤ a.b. Also [] < a. It does not hold that a.a ≤ a. ⋄ Definition 2.4. A set of names N is prefix-free if for all n, n′ ∈ N, n is not a strict prefix of n′. A namespace is a finite, prefix-free set of names. Let Namespace refer to the set of all namespaces. △ Example 2.5. The set of names {a, b} is a namespace and so is {a.a, a.b}. Since a < a.b, the set of names {a, a.b} is not prefix-free and hence not a namespace. ⋄ Sets of names are equivalent to prefix trees, called tries in computer science [46]. Example 2.6. The namespace {a.b.b, a.b.c, b.a, b.y, c} corresponds to the following trie: a b c b b a y c ⋄ Note that for a namespace N, the leaf nodes of its trie correspond to the names in N, while for a set of names, which is not prefix-free, at least one name corresponds to an internal node. In the following, we think of namespaces both as sets of names and as tries. Given several namespaces, we could take their union as sets. However, this runs the risk of name conflicts, as it is possible for a given name in the union to have come from either of the original sets. It is for this reason that we introduce the concept of a named sum, which can be thought of as a practical implementation of disjoint union. Definition 2.7. Given a namespace N, and a function f : N → Namespace, the named sum of f is X f = n n ∗ a | n ∈ N, a ∈ f(n) o . △ 10 We also sometimes write expressions like P [a 7→ I1, b 7→ I2], which refers to the named sum of the anonymous function defined by x 7→  I1 if x = a I2 if x = b . Example 2.8. Given N = {q, p.1, p.2}, we have X [l 7→ N, s.t 7→ N] = \bl.q, l.p.1, l.p.2, s.t.q, s.t.p.1, s.t.p.2\t . ⋄ Proposition 2.9. Given a namespace N and a function f : N → Namespace, the named sum P f is again a namespace, that is to say it is prefix-free. △ Proof. The trie P f is simply the trie N with, for each leaf node n ∈ N, the trie f(n) grafted on top. Namespaces and named sums provide a simple and effective formalism for working with large hierarchically-structured systems. 2.2. Packages An interface has a namespace, where we interpret each name as referring to a port. However, this is not the only ingredient to an interface, as each port has two associated attributes. This motivates the definition of packages: Definition 2.10. Given a set A, we define Pkg(A) = n (N, τ) | N ∈ Namespace, τ: N → A o . An element (N, τ) ∈ Pkg(A) is called a package of elements of A. We also just write τ ∈ Pkg(A) with N = dom(τ). △ The name ‘package’ is drawn from software engineering; one might consider a software package to be a ‘package of types and procedures’. A package (N, τ) ∈ Pkg(A) can be seen as a trie N with an element τ(n) ∈ A associated to each leaf node n ∈ N. Hence, the concept of named sum carries over from Namespace to Pkg(A), for a fixed set A. Named sum can then be seen as a flattening operation, analogous to flattening a list of lists. Specifically, for the set of all lists of elements of A List(A) = \b(n, f) | n ∈ N, f : {1, . . . , n} → A\t , flattening is a map List(List(A)) → List(A), which for instance sends [[1, 2], [3, 4]] to [1, 2, 3, 4]. Similarly, named sum is a map Pkg(Pkg(A)) to Pkg(A). An input to this is a trie N, which has associated to each leaf node n ∈ N another trie Nn, whose leaves carry elements of A. The named sum operation then simply grafts onto each node n ∈ N its associated trie Nn, carrying along the elements of A at the leaves. In terms of category theory, the flattening operation makes List and Pkg examples of monads. 11 2.3. Bundle of quantities The first attribute associated to any port represents the physical quantity that can be exchanged via the port, e.g. entropy or momentum, along with a state space in which values of the quantity live. For instance a momentum variable can take values in R if motion along a single axis is considered or it can take values in the vector space se∗(3) if rigid body motions in 3-dimensional Euclidian space are considered, etc. Definition 2.11. Let S be a finite set of state spaces (i.e. smooth manifolds) and for each space X ∈ S, let QX be a finite set of physical quantities taking values in X. Further, let Q be the disjoint union of all quantities, i.e. Q = G X∈S QX . This forms a bundle of quantities (in the category of finite sets), whose projection space : Q ↠ S returns the underlying space of a quantity. △ Example 2.12. The bundle of quantities given by S = {R, SE(3), se∗(3)} QR = {displacement, momentum, entropy, volume} QSE(3) = {pose} Qse∗(3) = {momentum}, would be sufficient for some spatially-lumped models from mechanics and thermo- dynamics. A port with associated quantity q = (R, entropy) ∈ Q can exchange entropy and its associated state space is space(q) = R ∈ S. ⋄ To distinguish reversible and irreversible dynamics later on in Sections 6.3 and 6.4, we make use of the concept of parity, see [47, 20] for details. Definition 2.13. Let the parity of each quantity with respect to time-reversal transformation be given by a function P : Q → {−1, +1}. △ Example 2.14. For the bundle of quantities from Example 2.12, we have P(R, displacement) = +1 P(R, momentum) = −1 P(R, entropy) = +1 P(R, volume) = +1 because displacement, entropy, and volume do not change instantaneously when a recording is suddenly played backwards (positive parity), whereas momentum changes its sign (negative parity). ⋄ A comprehensive collection of physical quantities with their associated parities would be a built-in feature of a software implementation. 12 2.4. Interfaces as packages Each port has two attributes, namely the already discussed quantity and further a Boolean attribute that indicates whether the port is a power port or a state port. Only power ports allow for exchange of energy associated with the attributed quantity. A state port is required whenever the behavior of a system depends on the state of another system, although no energy is exchanged between the two. Definition 2.15. An interface is a package of elements of Q × {p, s}, i.e. let Interface = Pkg\u0000Q × {p, s}\u0001 . △ Example 2.16. Let I = (N, τ) be an interface with namespace N = {p1, p2, q} and attributes given by τ(p1) = τ(p2) = ((R, momentum), p) and τ(q) = ((R, displacement), s). Ports p1 and p2 are power ports that can exchange kinetic energy, along with information about the current momentum. Port q is a state port that can only exchange information about the current displacement. ⋄ We note that the named sum of interfaces is a function Pkg(Interface) → Interface. 2.5. Bundles of port variables A state port has one port variable called state. A power port has two further port variables called flow and effort. Given an interface, the port variables of all its ports combined together take values in a vector bundle, called the bundle of port variables associated to the interface. Definition 2.17. Let I = (N, τ) be an interface and let p ∈ I be a port, i.e. p ∈ N. The state space associated to port p is Xp = (space ◦ pr1 ◦ τ)(p) , where pr1 projects onto the first attribute, i.e. the quantity. The state space associated to interface I is the Cartesian product XI = Y p ∈ I Xp . △ Example 2.18. Let Igas = (Ngas, τgas) be an interface with namespace Ngas = {s, v} and attributes given by τgas(s) = ((R, entropy), p), τgas(v) = ((R, volume), p). Then, its associated state space is XIgas = Xs × Xv = R × R. Let Imass = (Nmass, τmass) be another interface with Nmass = {p} and τmass(p) = ((R, momentum), p). Then, the named sum I = (N, τ) = X [gas 7→ Igas, mass 7→ Imass] 13 has the namespace N = {gas.s, gas.v, mass.p} with attributes given by τ(gas.s) = ((R, entropy), p), τ(gas.v) = ((R, volume), p), τ(mass.p)) = ((R, momentum), p). We note that XI = XIgas × XImass . ⋄ Given any interface I, each port p ∈ I has an associated state variable p.x ∈ Xp. If p is a power port, it additionally has a flow variable p.f and an effort variable p.e. All port variables implicitly depend on time. As detailed in Section 6.1, the flow variable is the instantaneous rate of change of the state variable and the effort variable is the differential of a function of the state variable. Hence, we have (p.x, p.f, p.e) ∈ TXp, where TXp = TXp ⊕ T∗Xp denotes the direct sum (or Whitney sum) of the respective tangent and cotangent bundles (see e.g. [48]). The flow and effort variables are called power variables because their duality pairing ⟨p.e | p.f⟩ ∈ R yields the instantaneous power that is exchanged through port p. Now we can define the bundle of port variables associated to an interface: Definition 2.19. Let I be an interface. Based on the Boolean attribute of its ports, we can write its associated state space as the Cartesian product XI \u001b XI,p × XI,s, where XI,p is the state space of all power ports and XI,s is the state space of all state ports. Accordingly, we let x = (xp, xs) ∈ XI,p × XI,s denote all state variables and we let (f, e) ∈ TxpXI,p denote all flow and effort variables. The bundle of port variables prI : PI ↠ XI associated to interface I is defined as the pullback bundle of TXI,p along the projection prp : XI,p × XI,s ↠ XI,p. Hence, PI \u001b TXI,p × XI,s. TXI,p ∋ (xp, f, e) PI ∋ (x, f, e) XI,p ∋ xp XI ∋ x XI,s ∋ xs prp prs prI ⌟ △ Example 2.20. Consider again the interface from Example 2.16. Its bundle of port variables PI ↠ XI has total space (or port space) PI = TR × TR × R ∋ \u0000(p1.x, p1.f, p1.e), (p2.x, p2.f, p2.e), q.x\u0001 and base space (or state space) XI = R × R × R ∋ (p1.x, p2.x, q.x) . ⋄ 3. Interconnection patterns As introduced in Section 1.2, an interconnection pattern expresses how a composite system can be formed from a finite number of subsystems. The syntax defines the entirety of such expressions and their composition, i.e. their hierarchical nesting. 14 3.1. Interconnection patterns spring pkc mass damping env p p q q p s s p isothermal_osc Figure 4: Interconnection pattern of an isothermal oscillator model. The box pkc represents the coupling of the potential energy domain represented by the junction on its left and the kinetic energy domain represented by the junction on its right. The box env represents the isothermal environment which absorbs the heat that is generated by the damping. The port p of the outer box exposes the kinetic energy domain, allowing for an external forcing of the oscillator model. Figure 4 shows an interconnection pattern. The mathematical content of such a diagram is captured by the following definition: Definition 3.1. An interconnection pattern (β, I, J) is defined by the following data: 1. A package of interfaces β ∈ Pkg(Interface). Names in dom(β) refer to inner boxes, P β is called inner interface and names in dom(P β) refer to inner ports. 2. An interface I called outer interface with ports called outer ports. 3. A partition J of the combined interface P = P \u0002inner 7→ P β, outer 7→ I\u0003 such that each subset or junction j ∈ J contains • at least one inner port, • at most one outer port, • and all ports have the same associated quantity. △ Although the names of inner ports and outer ports are distinguished by a prefix, usually the namespaces of P β and I are already disjoint. We then abuse notation and simply write for instance p rather than outer.p. We graphically depict interconnection patterns as follows. Each element b ∈ dom(β) is the name of an inner box, which we draw as a circle. The ports of its interface β(b) are drawn as lines emanating from the box. The ports of the outer interface I are drawn as lines to the surrounding outer box. Each subset j ∈ J corresponds to a junction drawn as a black dot. The elements of j ⊆ P are precisely the connected ports. To avoid confusion, we recall that the identifier isothermal osc written on the top left of the outer box refers to the entire pattern (akin to a function name), rather than just to the outer box (which similar to the return value of a function does not need a name). The pattern from Figure 4 is redrawn in Figure 5, firstly to emphasize that the color of the inner boxes is merely an annotation hinting at the nature of the considered subsystems and secondly to introduce an abbreviated way of writing port names. 15 spring pkc mass damping env p q s isothermal_osc Figure 5: Interconnection pattern of an isothermal oscillator model. Whenever all ports connected to a certain junction have the same name we write the name only once at the junction. Example 3.2. For the pattern (β, I, J) depicted in Figure 5, the namespace of inner boxes is dom(β) = {spring, pkc, mass, damping, env} . The function β : dom(β) → Interface is given by spring 7→ ({q}, τspring) pkc 7→ ({q, p}, τpkc) mass 7→ ({p}, τmass) damping 7→ ({p, s}, τdamping) env 7→ ({s}, τenv) with τspring(q) = ((R, displacement), p), etc. Hence, the namespace of the inner interface P β is dom(P β) = {spring.q, pkc.q, pkc.p, mass.p, damping.p, damping.s, env.s} . The namespace of the outer interface I is {p}. The partition J is given by \b{spring.q, pkc.q}, {mass.p, pkc.p, damping.p, p}, {env.s, damping.s}\t . ⋄ We may also denote an interconnection pattern using the condensed notation P [I1 7→ I1, . . . , In 7→ In] J I. In this we implicitly let dom(β) = {I1, . . . , In} and β(Ii) = Ii. The left arrow is a surjection because each junction has at least one connected inner port and the right arrow is an injection because each junction has at most one connected outer port. Interconnection patterns are a special case of undirected wiring diagrams [37], which do not have the injectivity and surjectivity conditions. As shown in Figure 1, interconnection patterns may have another feature that is not formalized by Definition 3.1, namely port combinators for combining ports into 16 multiports. Although namespaces seem to provide an adequate basis to formalize multiports and port combinators, we defer this to later work. At this point, we simply regard them as ad-hoc syntactic sugar for expressing parallel connections in a tidy and efficient manner. 3.2. Composition of interconnection patterns Whenever the outer interface of one pattern and the interface corresponding to an inner box of another pattern are equivalent up to renaming of the ports, the former pattern can be substituted into the latter, with no further data required. This is called composition. Having a compositional syntax facilitates dealing with complex systems, as it allows to encapsulate subsystems, which can be easily reused and replaced, as long as interfaces match. As an example, the isothermal oscillator model can be refined into a nonisothermal oscillator model by substituting a more detailed damper model. mf tc ht p s s s s₁ s₂ nonisothermal_damper Figure 6: Interconnection pattern of a nonisothermal damper model. The box mf represents a mechanical friction model connected to the kinetic energy domain represented by the outer port p. The box tc represents a thermal capacity, which can store the heat generated by friction. The box ht represents a heat transfer model, which allows the thermal capacity to reach equilibrium with the thermal energy domain represented by the outer port s. Substituting the pattern in Figure 6 into the pattern in Figure 5, yields the pattern in Figure 7. Graphically, the former pattern is inserted into the inner box called damping of the latter pattern. In this step, the named sum for interfaces is used. Then, the common interface is deleted and for each of its ports, the two assigned junctions are identified. Category theory provides a language to talk about composition and it includes well- behavedness conditions, which ensure that composition works in the way we expect, just as we need not worry about the difference between (1 + 2) + 1 and 1 + (2 + 1). In a following paper, we will formalize this using the language of operads. 4. Semantics of interconnection patterns In this section, we discuss how to interpret an interconnection pattern as imposing a relation between the port variables of its inner and outer interface. We do this in two 17 spring pkc mass damping. mf damping. tc damping. tc env p q s s s s₁ s₂ nonisothermal_osc Figure 7: Interconnection pattern of a nonisothermal oscillator model. parts. In the first part, we talk about the relation as a collection of equations and discuss its physical interpretation. In the second part, we reify it as a geometric object, namely as a relation between bundles of port variables. 4.1. Interconnection patterns as equations Informally, the semantics of an interconnection pattern (β, I, J) can be seen as a collection of equations. Specifically, for each junction j ∈ J, we have the following: Let jp ⊆ j be the subset of connected power ports. • Equality of state. For all ports p, p′ ∈ j, p.x = p′.x • Equality of effort. For all power ports p, p′ ∈ jp, p.e = p′.e • Equality of net flow. X p ∈ jp∩P β p.f = X p ∈ jp∩I p.f As detailed in Section 7, combining these equations with equations that determine the semantics of each of the subsystems filling the inner boxes yields a collection of equations that determines the semantics of the resulting composite system. 18 Since all ports connected to a junction have the same quantity, their associated state variables take values in the same space, making equality of state a well-typed equation. As a consequence of equality of state, all effort variables take values in the same fiber of the same cotangent bundle, making equality of effort also well-typed. Similarly, all flow variables take values in the same fiber of the same tangent bundle, making equality of net flow well-typed. Also note that in the equality of net flow, the inner ports are on the left hand side and the outer ports are on the right hand side. As a consequence, at every junction j ∈ J the following power balance equation is satisfied: X p ∈ jp∩P β ⟨p.e | p.f⟩ = X p ∈ jp∩I ⟨p.e | p.f⟩ Summing over all junctions on both sides, we get that the net power supplied to all subsystems is equal to the net power supplied to the composite system. Taking into account also the choice of a sign made in Sections 6.1 and 6.2, we see that this agrees with the sign convention used in thermodynamics, stating that power supplied to any system, be it a subsystem or the composite system, is counted with a positive sign. Junctions correspond to energy domains. Hence, an outer port exposes an energy domain of the respective composite system. Since this interpretation also applies to the primitive systems discussed in Section 6, we can say that ports also represent energy domains and whenever two ports are connected to the same junction the energy domains are identified. In other words, interconnection means that systems share common energy domains. The state of a shared energy domain is given by the shared state variable, according to the equality of state. The connected systems may exchange the respective physical quantity according to the equality of net flow. Moreover, such an exchange also implies an exchange of energy, according to the equality of effort. Example 4.1. Let’s again consider the pattern in Figure 7. At the junction representing the kinetic energy domain, the momentum variable (state) is shared and forces (flows) balance at equal velocity (effort): pkc.p.x = mf.p.x = mass.p.x = p.x pkc.p.f + mf.p.f + mass.p.f = p.f pkc.p.e = mf.p.e = mass.p.e = p.e ⋄ Table 1 summarizes the physical interpretation of junctions representing a number of different energy domains. We can now briefly reconsider the surjectivity and injectivity conditions which distinguish interconnection patterns form undirected wiring diagrams. The surjectivity condition says that each junction must have at least one connected inner port. In other words, an energy domain of the composite system must belong to at least one of its subsystems. Of course, an energy domain that is not part of the system cannot be exposed. The injectivity condition says that each junction may have at most one connected outer port. In other words, an energy domain can be exposed at most once. Exposing an energy domain twice and identifying it again at a higher level of nesting by connecting the two respective ports would lead to ill-defined flow variables. 19 energy domain state variable flows balance at equal efforts kinetic momentum forces balance at equal velocity magnetic flux linkage voltages balance at equal current potential displacement velocities balance at equal force hydraulic volume volume rates balance at equal pressure electric charge currents balance at equal voltage thermal entropy entropy rates balance at equal temperature Table 1: Physical interpretation of junctions as energy domains. 4.2. Interconnection patterns as relations Recall that a relation R : A ↛ B between two sets A and B is given by a subset of their Cartesian product, i.e. R ⊆ A × B. Note that we are slightly abusing notation by reusing the symbol, here R, for the relation and the subobject by which it is defined. The arrow symbol ↛ should suggest that relations have no inherent direction, however the formal direction is relevant to denote their composition and hence to think about relations as forming a category. Similarly to this prototypical example, the relation assigned to an interconnection pattern is given by a subbundle of the Cartesian product of the two bundles of port variables associated to the inner and the outer interface. Definition 4.2. Let P = (β, I, J) be an interconnection pattern and let Iin = P β denote its inner interface. Further, let PIin ↠ XIin be the bundle of port variables associated to the inner interface and let PI ↠ XI be the bundle of port variables associated to the outer interface. Based on the partition J, let PP ⊂ PIin × PI be the subspace where equality of state, equality of effort, and equality of net flow are satisfied. Similarly, let XP ⊂ XIi ×XI be the subspace where equality of state is satisfied. Then, the semantics assigned to interconnection pattern P is the relation PP : PIin ↛ PI between the port variables of the inner interface and the port variables of the outer interface that is given by the vector subbundle PP ↠ XP. △ It can be shown that this assignment of semantics is functorial, which means that it makes no difference whether one first composes some interconnection patterns and then asks for the relation assigned to the composite or one first asks for the relations assigned to the original patterns and then composes these relations. Example 4.3. Consider the interconnection pattern P = (β, I, J) depicted in Figure 8 with names of inner boxes given by dom(β) = {stator, rotor} and interfaces given by β(stator) = ({q, bs}, τs) β(rotor) = ({q, p, bs}, τr) I = ({q, p}, τ) , 20 shunt_motor stator rotor bₛ q p Figure 8: Interconnection pattern of a DC shunt motor model. The stator and rotor are connected to a common electric energy domain that is exposed via the outer port q. The kinetic energy domain of the rotor is exposed via the outer port p. The conversion between electric and kinetic energy in the rotor depends on the magnetic energy domain of the stator, which is represented by the junction with connected state ports named bk. The full model is discussed in Section 9. where τs(q) = τr(q) = τ(q) = ((R, charge), p) τs(bs) = τr(bs) = ((R, flux linkage), s) τr(p) = τ(p) = ((R, angular momentum), p) . Furthermore, the interconnection is determined by J = \b{stator.q, rotor.q, q}, {stator.bs, rotor.bs}, {rotor.p, p}\t . The port space of the inner interface Iin = P β is PIin = TR × R × TR × TR × R ∋ \u0000(stator.q.x, stator.q.f, stator.q.e), stator.bs.x, (rotor.q.x, rotor.q.f, rotor.q.e), (rotor.p.x, rotor.p.f, rotor.p.e), rotor.bs.x\u0001 and the port space of the outer interface I is PI = TR × TR ∋ \u0000(q.x, q.f, q.e), (p.x, p.f, p.e)\u0001 . 21 Finally, the subspace PP ⊂ PIin × PI defining the relation is PP = \b\u0000(stator.q.x, stator.q.f, stator.q.e) , stator.bs.x , (rotor.q.x, rotor.q.f, rotor.q.e) , (rotor.p.x, rotor.p.f, rotor.p.e) , rotor.bs.x , (q.x, q.f, q.e) , (p.x, p.f, p.e)\u0001 ∈ PIi × PI | stator.q.x = rotor.q.x = q.x , stator.q.e = rotor.q.e = q.e , stator.q.f + rotor.q.f = q.f , stator.bs.x = rotor.bs.x , rotor.p.x = p.x , rotor.p.e = p.e , rotor.p.f = p.f \t . ⋄ 5. Exergy Every system is ultimately determined by a power-preserving interconnection of primitive subsystems, also called components, which represent elementary physical behaviors such as storage and reversible as well as irreversible exchange of energy. To achieve a thermodynamically consistent combination of reversible and irreversible dynamics, components are defined with respect to a fixed exergy reference environment that is discussed in this section. 5.1. Intuition As briefly discussed in Section 1.4, thermodynamic models do not have all their physically-relevant degrees of freedom determined by their state variables, which leads to irreversibility. According to the first and second law of thermodynamics, internal energy, which is given by an imprecise phenomenological description, cannot be fully converted into mechanical or electromagnetic energy, which is precise, in the sense that the relevant degrees of freedom are determined by the state variables. The irreversible degradation of ‘mechanically precise’ forms of energy into ‘thermo- dynamically imprecise’ forms of energy can be quantified using the concept of exergy. A hypothetical conversion device, whose mode of operation is only restricted by the first and second law of thermodynamics is used to determine how much mechanical (or electromagnetic) energy can be extracted from a system before it reaches thermo- dynamic equilibrium with a reference environment, whose intensive variables, such as temperature and pressure, are constant (in time and space), see Figure 9. Crucially, the ideal conversion device is not restricted to interacting with the system through its interface. Instead, the device operates in a counterfactual where all energy domains of both the system and the environment can be accessed. This means that the exergy content of a (hierarchically flattened) composite system can be obtained by summing the exergy stored in each of its storage components. So, in particular, the 22 combined system reference environment system of interest ideal  conversion  device work Figure 9: To assess the exergy content of a system, it is combined with a reference environment. The exergy content is then defined as the maximum amount of work that can be extracted from the combined system via a hypothetical conversion device that operates completely reversibly. exergy content of a system does not depend on how its subsystems are interconnected. The exergy content of a component storing internal energy is assessed based on an ideal conversion device and the reference environment, while the exergy content of a component storing only mechanical or electromagnetic forms of energy is equal to its energy content. As also remark that a similar concept of available energy could be defined intrinsi- cally, meaning without relying on a reference environment. The reversible conversion device would then interact only with the system of interest until it reaches equilibrium with itself. However, the use of a reference environment with fixed intensive quantities has the important advantage that the exergy content of a system is given explicitly by its exergy storage function, which follows systematically from its energy storage function and the definition of the reference environment, as detailed in Section 6.1. In contrast, the intrinsic concept in general would lead to an optimization problem without a simple closed-form solution. More information and references about exergy, its history, and its links to port- Hamiltonian as well as GENERIC systems can be found in [20]. 5.2. Reference environment Definition 5.1. A reference environment (IR, λR) is given by an interface IR = (NR, τR) such that each port p ∈ IR is a power port with an unique extensive quantity in QR and an associated value λR(p) ∈ R∗ of the energy-conjugate intensive quantity. △ Uniqueness of quantities, i.e. injectivity of τR : NR → QR × {p}, is required to determine the exergy storage function of a system from its energy storage function. Regarding the physical interpretation, each port corresponds to an energy domain that is present in the environment. Allowing multiple energy domains of the same kind would conflict with the environment always being in equilibrium with itself. Example 5.2. The minimal definition of a reference environment represents an isothermal heat bath. This amounts to an interface with a single entropy port and an associated reference 23 temperature, henceforth denoted by θ0: NR = {s} τR(s) = ((R, entropy), p) λR(s) = θ0 = 298.15 K . To determine the exergy content of pressurized fluids with respect to an isobaric atmo- sphere, the definition of the environment can be extended to NR = {s, v} with τR(v) = ((R, volume), p) λR(v) = −π0 = −1013.25 hPa . The minus sign in front of the reference pressure π0 stems from the fact that more volume means less energy. To model for instance a mass diffusion process, a port m representing the mass of a chemical species with a fixed chemical potential µ0 should be included, i.e. let NR = {s, v, m} with τR(m) = ((R, mass), p) λR(m) = µ0 . ⋄ A software implementation should include a comprehensive definition of a reference environment and allow the user to redefine the values of the intensive quantities. 6. Primitive systems The lowest level of any hierarchical model specification is defined by primitive systems, also called components. There are four classes of components: • Storage components represent energy storage. • Reversible components represent reversible energy exchange (or a transformation between different forms of describing an energy domain). • Irreversible components represent irreversible energy exchange. • Environment components are used to model energy exchange with the reference environment. Components are in general defined with respect to a reference environment (IR, λR). Further, every component has an interface I = (N, τ) with port variables (x, f, e) ∈ PI. To define the exergy storage function of storage components and to state fundamental thermodynamic properties of reversible as well as irreversible components, we define the following notation: For any port p ∈ I, let λ(p) =  λR(pR) ∃ pR ∈ IR : τR(pR) = τ(p) 0 ∈ T∗Xp else. For instance, if p represents a thermal energy domain then λ(p) = θ0, whereas if p represents a kinetic energy domain then λ(p) = 0, since the environment does not 24 have a kinetic energy domain. This can also be applied to the entire interface. E.g. for N = {p1, . . . , pn}, let λ(I) = \u0000λ(p1), . . . , λ(pn)\u0001 . We also define a similar notation that references a specific environment port: For any port p ∈ I and pR ∈ IR, let λ(p, pR) =  λR(pR) τR(pR) = τ(p) 0 ∈ T∗Xp else. Again, given e.g. N = {p1, . . . , pn}, let λ(I, pR) = \u0000λ(p1, pR), . . . , λ(pn, pR)\u0001 . 6.1. Storage components Storage components are primitive systems representing energy storage. Examples include elastic springs, movable masses, capacitors, inductors, and thermal capacities. Definition 6.1. A storage component (I, E) is defined by an interface I containing only power ports and an energy storage function E : XI → R. △ The function E simply yields the stored energy for any state x ∈ XI. Based on the reference environment IR, the exergy content is determined as follows. Definition 6.2. Let (I, E) be a storage component. Its exergy storage function H : XI → R is given by H(x) = E(x) − X p ∈ I X pR ∈ IR τR(pR) = τ(p) ⟨λR(pR) | p.x⟩ . △ Note that in the natural pairing, R is implicitly identified with its tangent space, i.e. R \u001b Tp.xR. While the exergy content of a system is supposed to be zero when it reaches equilibrium with itself and the environment, the component-wise definition for EPHS may yield another minimum value for the total exergy. In this case, a constant may be added to remedy this. Regarding the dynamics of the system, this is however irrelevant, as it depends only on the differential dH. Specifically, the effort variables are given by the differential of the exergy function evaluated at the current state x ∈ XI: ∀ p ∈ I : p.e = ∂H ∂(p.x) \f\f\f\f\f x In case the constant offset should matter for thermodynamic analysis, it can be added to the total exergy function once the equilibrium state of the system under study has been determined. Finally, the trajectory of the state variables is obtained by integrating the flow variables: ∀ p ∈ I : d(p.x) dt = p.f 25 Example 6.3. Consider a storage component (Igas, Egas) representing a gas-filled compartment whose entropy and volume can change. Its interface Igas is defined as in Example 2.18 and we assume knowledge of its energy storage function Egas : R × R → R. Writing x = (s, v), the exergy storage function is then given by Hgas(s, v) = Egas(s, v) − θ0 s + π0 v . With the temperature being defined as θ = ∂Egas ∂s and the negative pressure being defined as −π = ∂Egas ∂v , the effort variables are given by s.e = θ − θ0 v.e = −(π − π0) . Since the entropy rate ˙s = s.f is related to the heat flow rate Φ via ˙s = 1 θ Φ, the exergetic power at the entropy port is ⟨s.e | s.f⟩ = θ−θ0 θ Φ = ηCarnot Φ, where ηCarnot is the efficiency of an ideal heat engine operating between a hot source with temperature θ and a cold sink with temperature θ0. Considering a piston with the pressurized gas on one side and the atmosphere on the other, ⟨v.e | v.f⟩ = −(π − π0) ˙v is the power that can be extracted from the pressurized gas when its volume grows at rate ˙v. ⋄ Next, we define the semantics of a storage component with interface I in terms of a relation S : TXI ↛ PI. This is used in Section 7, where we define the semantics of a composite system in terms of the semantics of its primitive subsystems and the semantics of its (hierarchy of nested) interconnection pattern(s). Definition 6.4. The semantics assigned to storage component (I, E) is the relation S : TXI ↛ PI that is given by the subbundle S = \b\u0000(˜x, ˜f), (x, f, e)\u0001 ∈ TXI × PI | ˜x = x, ˜f = f, e = dH(x)\t , where H is induced from E according to Definition 6.2. △ 6.2. Environment components While the primary role of the reference environment is to enable the thermody- namically consistent combination of reversible and irreversible dynamics, it may also be represented by a component to model energy exchange with the environment. For instance, an environment component can represent an isothermal heat bath, which may absorb heat generated by irreversible components, or an isobaric atmosphere, which may exchange pressure-volume work with other components. Definition 6.5. An environment component is defined by a subinterface I ⊆ IR containing the exposed energy domains of the reference environment. △ 26 The state variables keep track of the exchanged entropy, volume, etc. As for storage components, their rate of change is given by the flow variables: ∀ p ∈ I : d(p.x) dt = p.f Since the exergy content of the environment is zero by definition, the effort variables are also zero: ∀ p ∈ I : p.e = 0 Consequently, the semantics of an environment component is assigned as follows: Definition 6.6. The semantics assigned to environment component I ⊆ IR is the relation E : TXI ↛ PI that is given by the subbundle E = \b\u0000(˜x, ˜f), (x, f, e)\u0001 ∈ TXI × PI | ˜x = x, ˜f = f, e = 0\t . △ 6.3. Reversible components In a generalized sense, reversible components represent gyrators, transformers, and/or kinematic constraints. Generalized gyrators describe the reversible coupling of different kinds of energy domains, such as a coupling of kinetic and potential energy domains in mechanics or an electro-magnetic coupling. Examples where one domain reversibly interacts with itself are gyroscopic forces in rigid body dynamics and self- advection of kinetic energy in fluid dynamics. The Lorentz force is another example where a kinetic energy domain interacts with itself in a way that depends on the state of a magnetic energy domain. Generalized transformers couple energy domains of the same kind. They may for instance represent mechanical levers or ideal electrical transformers. Frame transformations in multibody systems present an example where a transformation between different representations of the same energy domain is realized. Examples of kinematic constraints include joint constraints in multibody dynamics and the incompressibility constraint in fluid dynamics. Further, the parallel connection of capacitors, the series connection of inductors or springs, as well as rigid links between point masses are described by constraints. The geometric structure behind reversible components is called Dirac structure. For our purposes, an (almost) Dirac structure D is a power-preserving, locally linear relation of port variables. More precisely, we could define D ⊂ PI as a maximally isotropic vector subbundle of the bundle of port variables PI ↠ XI, see [1, 49, 13]. However, to state fundamental properties of reversible components, we give a more practical definition of Dirac structures in terms of a particular representation, which may be called constrained hybrid input-output representation (cf. [13]): Definition 6.7. Let I be an interface and let XI,p \u001b X1 × X2 ∋ xp = (x1, x2) be a factorization of the state space of its power ports with flow and effort variables correspondingly denoted 27 by f = ( f1, f2) and e = (e1, e2). A Dirac structure D ⊂ PI admits the following representation: D = (x, f, e) ∈ PI | ∃ λc ∈ V∗ :  f1 e2 0  =  L(x) −g(x) C∗(x) g∗(x) 0 0 −C(x) 0 0   e1 f2 λc   Here, L : T∗X1 → TX1, g : TX2 → TX1, its linear dual g∗ : T∗X1 → T∗X2, C : T∗X1 → XI × V, and its dual C∗ : XI × V∗ → TX1 are vector bundle maps over the identity on XI. Further, V is a vector space and L(x) is skew-symmetric for all x ∈ XI. △ The maps L, g and C define a gyrator, a transformer and a constraint, respectively. The constraint is enforced via the Lagrange multiplier λc. Due to the skew-symmetry of the matrix in Definition 6.7, exergetic power is conserved, i.e. ⟨e1 | f1⟩ + ⟨e2 | f2⟩ = 0 . Example 6.8. Let the interface Ihk = (Nhk, τhk) be given by Nhk = {v1, v2, p} τhk(v1) = τhk(v2) = ((R, volume), p) τhk(p) = ((R, momentum), p) and let a ∈ R be a constant surface area of a piston. Then, the following equation defines a Dirac structure Dhk ⊂ PIhk:  v1.f v2.f p.f  =  0 0 a 0 0 −a −a a 0   v1.e v2.e p.e  This describes a generalized gyrator that couples the two hydraulic energy domains at the front and the back side of a piston with a kinetic energy domain corresponding to the piston’s moving mass. ⋄ A reversible component is defined by a Dirac structure which satisfies two extra properties ensuring thermodynamic consistency. Definition 6.9. A reversible component (I, D) is given by an interface I and a Dirac structure D ⊂ PI such that all quantities of the reference environment are conserved and the time-reversal invariance property holds. The first condition requires that ∀ pR ∈ IR : ∀ x ∈ XI : \u0010 0 = L(x) λ(I1, pR) and 0 = g∗(x) λ(I1, pR) \u0011 . The time-reversal invariance property holds if ∀ x ∈ XI : (L(x))ij , 0 =⇒ −P(xi 1) = P((L(x))i j) P(x j 1) (g(x))ik , 0 =⇒ P(xi 1) = P((g(x))ik) P(xk 2) . 28 Here, we use abstract index notation without implied summation. Indices i and j range over the power ports associated with X1 and k ranges over the power ports associated with X2. The state variable is accordingly split as x = (xp, xs) = ((x1, x2), xs) and P yields the parity of the respective quantity with P(const.) = +1. △ Example 6.10. The reversible component (Ihk, Dhk), as already defined in Example 6.8, describes the coupling between the kinetic energy domain of a piston with surface area a and the two hydraulic energy domains on either side of the piston. The first condition here ensures that volume is conserved. This is satisfied since  0 0 0  =  0 0 a 0 0 −a −a a 0   −π0 −π0 0  . The time-reversal invariance property holds since −P((R, volume)) = P(a) P((R, momentum)) −P((R, volume)) = P(−a) P((R, momentum)) . Checks for the other two non-zero entries of L must pass due to its skew-symmetry. ⋄ The semantics of a reversible component is simply given by its Dirac structure interpreted as a relation: Definition 6.11. The semantics assigned to reversible component (I, D) is the relation D : 1 ↛ PI that is given by its Dirac structure D. △ The symbol 1 in 1 ↛ PI refers to the Cartesian unit for vector bundles, i.e. the vector bundle with a single point as its base space and the zero-dimensional vector space above it. 6.4. Irreversible components Irreversible components are phenomenological models of irreversible processes with local thermodynamic equilibrium. Examples include mechanical friction, fluid viscosity, electrical conduction / resistance, thermal conduction, and mass diffusion. Such models can be defined in terms of a function that maps thermodynamic forces, which drive the relaxation process, to thermodynamic fluxes, which seek to restore equilibrium. Based on the assumption that the microscopic dynamics are reversible, Onsager found that such maps must satisfy a symmetry property [6]. This motivates our definition of an Onsager structure: Definition 6.12. Let I be an interface. An Onsager structure O ⊂ PI is a fiber subbundle that admits the following representation: O = ( (x, f, e) ∈ PI | f = 1 θ0 M(e) e ) , where M is a smooth function that yields a symmetric non-negative definite linear operator M(e): T∗XI,p → TXI,p for all effort variables e ∈ T∗XI,p. △ 29 In contrast to a Dirac structure, an Onsager structure is neither power-preserving, nor is it a locally linear relation of the port variables, since destruction of exergy, or equivalently production of entropy, is described in general by a non-linear relation. Hence, O ⊂ PI is not a vector subbundle of PI, but merely a fiber subbundle. The symmetry of M(e) corresponds to Onsager’s reciprocal relations and its non-negative definiteness implies a non-negative exergy destruction rate. Example 6.13. Let the interface Imf = (Nmf, τmf) be given by Nmf = {p, s} τmf(p) = ((R, momentum), p) τmf(s) = ((R, entropy), p) and let d ∈ R>0 be a friction coefficient. Then, the following defines an Onsager structure Omf ⊂ PImf representing mechanical friction: \"p.f s.f # = 1 θ0 d \" θ −υ −υ υ2 θ # \"p.e s.e # Here, υ = p.e is the velocity and θ = θ0 + s.e is the absolute temperature at which kinetic energy is dissipated into the thermal energy domain. The phenomenological parameter d could also be a function of the effort variables e, i.e. it could depend on the velocity and the temperature, or theoretically also the base point x. The above can be simplified to p.f = d υ and s.f = − 1 θ d υ2. Hence, the environment temperature θ0 cancels out in the flow variables, which here are the friction force and the entropy production rate (with a minus sign since thermal energy is leaving the component). ⋄ An irreversible component is defined by an Onsager structure which satisfies two extra properties ensuring thermodynamic consistency: Definition 6.14. An irreversible component (I, O) is given by an interface I and an Onsager structure O ⊂ PI such that energy and all quantities of the reference environment, except for entropy, are conserved and the time-reversal invariance property does strictly not hold. The condition for conservation of energy requires that ∀ e ∈ T∗XI,p : 0 = M(e) \u0000λ(I) + e\u0001 . The condition that all quantities of the reference environment, except for entropy, are conserved requires that ∀ pR ∈ IR : \u0010 τR(pR) , ((R, entropy), p) =⇒ \u0000∀ e ∈ T∗XI,p : 0 = M(e) λ(I, pR)\u0001\u0011 . The time-reversal invariance property does strictly not hold if ∀ x ∈ XI : (M(x))ij , 0 =⇒ P(xi) = P((M(x))i j) P(x j) . Here, we use the same notation as in Definition 6.9 with indices i and j ranging over all power ports of I. △ 30 Example 6.15. The irreversible component (Imf, Omf), as already defined in Example 6.13, models mechanical friction. The condition for conservation of energy is satisfied since \"0 0 # = d \" θ −υ −υ υ2 θ # \"υ θ # . The condition that all quantities of the reference environment, except for entropy, are conserved is trivially satisfied. The time-reversal invariance property does strictly not hold since P((R, momentum)) = P(d) P(θ) P((R, momentum)) P((R, momentum)) = P(d) P(−υ) P((R, entropy)) P((R, entropy)) = P(d) P(−υ) P((R, momentum)) P((R, entropy)) = P(d) (P(υ))2 / P(θ) P((R, entropy)) , where we used that temperature has positive parity and velocity has negative parity. ⋄ Example 6.16. Let the interface Iht = (Nht, τht) be given by Nht = {s1, s2} τht(s1) = τht(s2) = ((R, entropy), p) , let α ∈ R>0 be a heat transfer coefficient, and let the Onsager structure Oht ⊂ PIht be given by \"s1.f s2.f # = 1 θ0 α  θ2 θ1 −1 −1 θ1 θ2  \"s1.e s2.e # , where θ1 = θ0 + s1.e and θ2 = θ0 + s2.e are the absolute temperatures of the two thermal domains. Then, we can check that (Imf, Omf), defines an irreversible component. Again, the phenomenological parameter α could for instance be a function of the temperatures. The above can be simplified to s1.f = − 1 θ1 α (θ2 − θ1) and s2.f = − 1 θ2 α (θ1 − θ2). Hence, the environment temperature θ0 cancels out in the flow variables, which are rates of entropy change due to heat transfer. ⋄ The semantics of an irreversible component is simply given by its Onsager structure interpreted as a relation: Definition 6.17. The semantics assigned to irreversible component (I, O) is the relation O : 1 ↛ PI that is given by its Onsager structure O. △ 7. Composite systems A composite system is formed by interconnecting finitely many systems, be they primitive systems or other composite systems, according to an interconnection pattern. The data defining a composite system is therefore given by an interconnection pattern and for each of its inner boxes a system with the corresponding interface. 31 Definition 7.1. Let System refer to the set of all systems defined with respect to a fixed reference environment. A composite system (I, γ, J) is defined by the following data: 1. An interface I of the composite system. 2. A package of systems γ ∈ Pkg(System), which can be reduced to a package of interfaces β ∈ Pkg(Interface) by forgetting further data. 3. A partition J of the combined interface P = P \u0002inner 7→ P β, outer 7→ I\u0003 such that (β, I, J) defines an interconnection pattern. △ class of system interface relation definition storage component Is S : TXIs × 1 ↛ PIs 6.4 environment component Ie E : 1 × TXIe ↛ PIe 6.6 reversible component Ir D : 1 × 1 ↛ PIr 6.11 irreversible component Ii O : 1 × 1 ↛ PIi 6.17 composite system I C : TXIs × TXIe ↛ PI 7.2 Table 2: Overview of systems and their semantics given by a relation. Table 2 recalls the different classes of components defined in Section 6. In order to write the relations that determine their semantics in a consistent form, the Cartesian unit is inserted a few times. As already shown in the last row of the table, we can state the semantics of a composite system in the same form. The idea is that we just need to compose the relation assigned to the interconnection pattern with the Cartesian product of the relations assigned to the subsystems filling its inner boxes. Definition 7.2. Let (I, γ, J) be a composite system and let P = (β, I, J) be its underlying inter- connection pattern. Further, let PP be the relation assigned to pattern P according to Definition 4.2. For any inner box b ∈ dom(γ), let JsK denote the relation assigned to the subsystem s = γ(b). In case system s is itself a composite system, this definition applies recursively. Then, the semantics assigned to composite system (I, γ, J) is the relation C : TXIs × TXIe ↛ PI given by C = PP ◦  Y b ∈ dom(γ) Jγ(b)K  . Here, XIs denotes the state space of all storage components and XIe denotes the state space of all environment components, which are subsystems of the composite system in a recursive sense. △ Example 7.3. Consider the composite system given by filling the inner boxes of the interconnection pattern for the nonisothermal damper shown in Figure 6 with three suitable systems. The system filling the box tc represents a thermal capacity and it is defined analogous to Example 6.3, but without a port for volume exchange. It gives a relation Stc : TXtc × 1 ↛ TXtc 32 with Xtc = R. The system filling the box mf is a mechanical friction model as defined in Example 6.15 and it gives a relation Omf : 1 × 1 ↛ TXmf with Xmf = R × R. The system filling the box ht is a heat transfer model as defined in Example 6.16 and it gives a relation Oht : 1 × 1 ↛ TXht with Xht = R × R. Let the Cartesian product of the three relations be denoted by Stc × Omf × Oht : TXtc × 1 ↛ TXtc × TXmf × TXht . Further, let the semantics of the interconnection pattern be given by the relation PP : TXtc × TXmf × TXht ↛ PI , where PI = TXp ×TXs = TR×TR is the bundle of port variables of the outer interface. Then, the semantics of the composite system is given by the relation C = PP ◦ (Stc × Omf × Oht) from TXtc × 1 to PI. ⋄ For an isolated composite system the assigned relation C: TXIs × TXIe ↛ 1 simply amounts to a subbundle of TXIs × TXIe, which should implicitly define a vector field on XIs × XIe. Given an initial condition, one can integrate this vector field to determine the evolution of the system. We simply say that (x, ˙x) ∈ C, where x = (xs, xe), gives the dynamics of the isolated system. This is generalized by the following definition: Definition 7.4. Let s ∈ System be a system with interface I and let the relation R: TXIs × TXIe ↛ PI define its semantics, according to one of the definitions mentioned in Table 2. Further, let (xs, xe) ∈ XIs × XIe denote the state variables associated to all (nested) storage and environment components. If s is a primitive system this may be vacuous. Moreover, let (x, f, e) ∈ PI denote the port variables of its (outer) interface. Again, if the system is isolated this is vacuous. Then, the dynamics of system s is determined by the implicit differential-algebraic equation \u0000(xs, ˙xs), (xe, ˙xe), (x, f, e)\u0001 ∈ R . △ Example 7.5. The dynamics of the composite system described in Example 7.3 is given by \u0000(s, ˙s), (p.x, p.f, p.e), (s.x, s.f, s.e)\u0001 ∈ C . This boils down to the following equations: ˙s = 1 θ1 \u0010 d υ2 + α (θ2 − θ1) \u0011 p.f = d υ s.f = − 1 θ2 α (θ1 − θ2) 33 Here, υ = p.e is the velocity of the kinetic energy domain represented by the outer port p, θ1 = dU(s) is the absolute temperature of the thermal capacity with internal energy function U : R → R and θ2 = θ0 + s.e is the absolute temperature of the thermal energy domain represented by the outer port s. Further, d ∈ R>0 is the damping coefficient and α ∈ R>0 is the heat transfer coefficient. ⋄ For programming languages it usually holds that not everything that is syntactically correct is also semantically meaningful. There are also cases where a compiler for the EPHS language should throw an error, despite of syntactic correctness. Every junction must have either zero or one connected port belonging to a storage or environment component. Also, one cannot connect more than two power ports with a quantity such as (R, displacement) to the same junction, since velocities don’t balance. As of now, we don’t have a comprehensive set of restrictions that should be imposed on the interconnection of systems in order to get something meaningful, but we hope that this can be worked out in the future. 8. Thermodynamic consistency As already touched upon in the introduction, the GENERIC establishes a general structure, also called metriplectic structure, for combining reversible and irreversible dynamics in a way that respects fundamental principles from thermodynamics, namely the first law, the second law, and Onsager reciprocal relations. The vector field which determines the dynamics of a metriplectic system is given as the sum of a reversible Hamiltonian vector field that conserves energy due to the skew-symmetry of the Poisson bivector and a vector field of an irreversible gradient flow that has non-negative entropy production due to the non-negative definiteness of the metric tensor. Further, so-called non-interacting or degeneracy conditions ensure that the reversible dynamics conserves entropy and the irreversible dynamics conserves energy. The first law then holds since both parts conserve energy and the second law holds because the irreversible part has non-negative entropy production, while the reversible part conserves entropy, see e.g. [18, 14]. Onsager reciprocal relations hold, as the symmetry of the metric tensor implies equal cross-effect coefficients, see e.g. [50]. Usually, the reversible part and the irreversible part both satisfy further degeneracy conditions that ensure the conservation of further quantities such as volume or mass. Given that (some of) these quantities, together with entropy, are present in an exergy reference environment that is adjoined to the metriplectic system, it follows that the reversible dynamics conserve exergy and the irreversible dynamics are characterized by a non-negative exergy destruction. This immediately follows from the definition of the exergy storage function analogous to Definition 6.2. The argument for EPHS is very similar in nature, although it is in a sense reversed. To keep it short and simple, we focus on isolated systems. Proposition 8.1. The dynamics of any isolated EPHS respects the first law, the second law, and Onsager reciprocal relations. △ Proof. We argue in terms of components and their interconnection. 34 1. According to Definition 6.9, all reversible components conserve exergy as well as all quantities of the reference environment. Considering the definition of exergy in Definition 6.2, it follows immediately that all reversible components also conserve energy. 2. According to Definition 6.14, all irreversible components are defined by a non- negative exergy destruction rate and they conserve energy as well as all quantities of the reference environment, except for entropy. Considering the definition of exergy, it follows that all irreversible components also have a non-negative entropy production rate. 3. According to Definition 4.2, any interconnection of the components conserves exergy and all quantities (of the reference environment), since flows balance at equal efforts. Considering the definition of exergy, it follows that any interconnection of the components also conserves energy. The first law holds since all three aspects conserve energy. The second law holds because the irreversible components have a non-negative entropy production rate, while the reversible components and the interconnection conserve entropy. The reciprocal relations hold because, according to Definition 6.12, thermodynamic fluxes (flows) depend on thermodynamic forces (efforts) via a symmetric locally-linear operator. We note that the argument is reversed because, according to Definitions 6.4 and 7.2, the semantics of EPHS is defined in terms of a storage function that is interpreted as the exergy of the system, as opposed to two separate functions representing the energy and entropy of a system. The concept of a storage function originates in Willems’ theory of dissipative systems [51]. In this context, reversible components as well as all EPHS without any irreversible components are said to be lossless, while (all systems with) irreversible components are said to be dissipative. 9. Example This section compares a bond graph and an EPHS model of a DC shunt motor. A direct current (DC) motor has a fixed outer part, called stator, and a rotating inner part, called rotor. Both parts contain a coil of wire through which current flows. In the case of a shunt motor, these two inductors are connected in parallel (aka in shunt) to a source of electric energy. The working principle of such motors is based on a coupling of the electro-magnetic and the kinetic energy domains via the Lorentz force and the commutation of the rotor coil after every half turn. However, both aspects are not directly taken into account by the two models, which instead consider the coupling as being lumped into a gyrator element. We start with the bond graph model that is taken from [22] and redrawn in Figure 10. The half arrows are called bonds and each bond has two associated variables, called flow and effort. The name of the flow variable is written on the side of the arrow head, while the name of the effort variable is written on the opposite side. However, not all variables are explicitly named in the example. At any 0-junction the effort variables of all connected bonds are equal, while the flow variables balance, with their sign 35 electical part mechanical part <latexit sha1_base64=\"etQASNT2drMAw9KsXcxB/bPxTw=\">ABoHicZY+7TwJBEMZn8YX4Qi1tDQWhtwZXyXGhk6I8ohwIX vrABt29zY3eybkQm9jq3+b/40nXgN8zfwy38zkm9AqSc7zflhY3Nre6e4W9rbPzg8Kh+fdChKYoFtEako7oWcUEmDbSedwp6NketQYTecPv753XeMSUbmxc0sBpqPjRxJwV3Weg6HNCxXvZq30Pk6+DlUIVdzWP4YvEUi0WicUJyo73vWBSmPnRQK56VBQmi5mPIx9jM0X CMF6SLqkplyTZq7yWVWabDZdNOZiQFrZxzo/sglcYmDo2YZ9H91aDr0Lmq+be1m9Z1tf6QP1GEM6jABfhwB3VoQBPaIGAMn/AF36zCGuyJtf5HCyzfOYUlsdfFQhxvQ=</latexit>bs <latexit sha1_base64=\"U0ZkwP0z8+4wvMEp0WQirNbq6qM=\">ABoHicZY+7TwJBEMZn8YX4Qi1tDQWhtwZXyXGhsJEiPKIcC F76wAbdvc2N3sm5EJvY6t/m/+Np14DfM38Mt/M5JvQKknO875ZYW19Y3OruF3a2d3bPygfHnUoSmKBbRGpKO6FnFBJg20ncKejZHrUGE3nN7/+t03jElG5tnNLAaj40cScFd1np6GNKwXPVq3p9OV8HPoQq5msPy+A1EolG4TiRH3fsy5IeykUDgvDRJCy8WUj7Gfo eEaKUj/oi6YKdekuZucZ5VmOlw07WRGUtDSOTe6DVJpbOLQiHkW3V8Ougqdi5p/XbtqXVbrd/kTRTiBCpyBDzdQhwY0oQ0CxvABn/DFKqzBHlnrf7TA8p1jWB7+QH50XGn</latexit>Ls <latexit sha1_base64=\"F1jz4YIzLzFDKcrHhG42cVuscSE=\" >ABr3icZY9NT8JAEIZn8Qvxq+rRC5GLB0Na41c8Ybx4RCIfCdS6XQfYsLvdLckTcPdH+FV/5P/xoK9AO9lnsw7M3kn1Ib67q/p LSxubW9U96t7O0fHB45xycdEyUxwzaLRBT3QmpQcIVty63Ano6RylBgN5w8zf3uFGPDI/VqU42+pCPFh5xRm7cCxlIasexzFqz6k O1FcSBU3Pr7kLVdfAKqEGhZuB8Dj4ilkhUlglqTN9ztfUzGlvOBM4qg8SgpmxCR9jPUVGJxs8WyZfMjEoz3KZV5PKcNnU49RwZlb O2eG9n3GlE4uKzfLo3mrQdehc1b3b+s3Lda3xWDxRhjM4hwvw4A4a8AxNaAODKXzBN/wQj3TJG3n/Hy2RYucUlkT4HzC0dwg=</lat exit>R : Rr <latexit sha1_base64=\"epY6WemAxDWc2ar4f7LTWw7TbhU=\">ABr3icZY9NT8JAEIan+IX4VfXohcjFgyGt8SueMF48opGPBG rdLgNs2N1udrckTcPdH+FV/5P/xoK9AO9lnsw7M3knUpwZ63m/Tmljc2t7p7xb2ds/ODxyj0/aJk40xRaNeay7ETHImcSWZjV2kIuLYiSZPc78zRW1YLN9sqjAQZCTZkFi81boun1B7FiL7HVWfagOQh26Na/uLVRdB7+AGhRqhu5nfxDTRKC0lBNjer6nbJARbRnlO Kv0E4OK0AkZYS9HSQSaIFskXzIzIsw8y2VeTSqiZVONU8OoWTlnh/dBxqRKLEo6y6P7q0HXoX1V92/rNy/XtcZj8UQZzuAcLsCHO2jAMzShBRSm8AXf8OP4Tsd5dz7+R0tOsXMKS3LYH0bsdxo=</latexit>R : dr <latexit sha1_base64=\"8LgHyi1dEqK5OH/LvezrcNHCtPM=\">ABr3icZY9NT8JAEIZn8Qvxq+rRC5GLB0Na41c8Ybx4RCIfCd S6XQfYsLvdLckTcPdH+FV/5P/xoK9AO9lnsw7M3kn1Ib67q/pLSxubW9U96t7O0fHB45xycdEyUxwzaLRBT3QmpQcIVty63Ano6RylBgN5w8zf3uFGPDI/VqU42+pCPFh5xRm7cCxlIasexzFqz6kO1FZjAqbl1d6HqOngF1KBQM3A+Bx8RSyQqywQ1pu+52voZjS1nA meVQWJQUzahI+znqKhE42eL5EtmRqWZ7nMq0luGzqcWo4Myvn7PDez7jSiUXFZnl0bzXoOnSu6t5t/eblutZ4LJ4owxmcwV4cAcNeIYmtIHBFL7gG36IR7rkjbz/j5ZIsXMKSyL8DzHudwk=</latexit>R : Rs <latexit sha1_base64=\"p/50F7HtNM5ZbMqT+Tf6jpvL1g=\" >ABr3icZY+7TsNAEVnwyuEl4GSJiINBYpsxEtUQTQgUQSJPKTEmPUySVbZXa+860iWlZ6PoIV/4m9wgpskt5mjuTOjO6EW3FjX/ SWltfWNza3ydmVnd2/wDk8apsoiRm2WCSiuBtSg4IrbFluBXZ1jFSGAjvh+GHmdyYGx6pV5tq9CUdKj7gjNq8FThOX1I7imX2NK 3eVZ+DOHBqbt2dq7oKXgE1KNQMnM/+R8QSicoyQY3pea62fkZjy5nAaWfGNSUjekQezkqKtH42Tz5gplRaWZzvNqUhkumnqUGs7 M0jk7uPUzrnRiUbFpHt1bDroK7Yu6d12/ermsNe6LJ8pwAqdwBh7cQAMeoQktYDCBL/iGH+KRDnkj7/+jJVLsHMOCP8DHgN2+Q=< /latexit>I : Lr <latexit sha1_base64=\"/ObKXdrRexbW3J8+/z38xzr/yRc=\">ABr3icZY+7TsNAEVnwyuEl4GSJiINBYpsxEtUQTRAFSTykB Jj1skWV3vfKuI1lWej6CFv6Jv8EJbpLcZo7mzozuhFpwY13l5TW1jc2t8rblZ3dvf0D5/CobaIkZthikYjibkgNCq6wZbkV2NUxUhkK7ITjh5nfmWBseKRebarRl3So+IAzavNW4Dh9Se0oltnTtHpXfQ7iwKm5dXeu6ip4BdSgUDNwPvsfEUskKsENabnudr6GY0tZ wKnlX5iUFM2pkPs5aioRONn8+QLZkalmWU5z6tJZbho6lFqODNL5+zg1s+40olFxaZ5dG856Cq0L+redf3q5bLWuC+eKMJnMIZeHADXiEJrSAwQS+4Bt+iEc65I28/4+WSLFzDAsi/A8bi3b3</latexit>I : Jr <latexit sha1_base64=\"uLzGklz9lSWOgOxXM+AVfrvsXEk=\">ABnicZY9NTwIxEIan+IX4hXr0QuTiwZCtEfWIMTFejJAIbA Ib0q0DNLTdZts1IRvuJl71x/lvXHEvC+9lnsw7M3knNFJY53k/pLSxubW9U96t7O0fHB5Vj096Nkpijl0eySj2Q2ZRCo1dJ5xE38TIVCixH84e/vz+O8ZWRPrVzQ0Gik20GAvOXNbq0FG17jW8pWrQHOoQ672qPoxfIt4olA7Lpm1A+oZF6QsdoJLXFSGiUXD+IxNcJChZ gptkC6DFsyUKauYm15m1c5VWDTNdG4Ftyvn3PguSIU2iUPNF1l0uhp0HXpXDXrTaHau637/IkynME5XACFW2jBE7ShCxwQPuELvkmNPJn8vI/WiL5zikURPxfjONwpg=</latexit>1 <latexit sha1_base64=\"uLzGklz9lSWOgOxXM+AVfrvsXEk=\" >ABnicZY9NTwIxEIan+IX4hXr0QuTiwZCtEfWIMTFejJAIbAIb0q0DNLTdZts1IRvuJl71x/lvXHEvC+9lnsw7M3knNFJY53k/p LSxubW9U96t7O0fHB5Vj096Nkpijl0eySj2Q2ZRCo1dJ5xE38TIVCixH84e/vz+O8ZWRPrVzQ0Gik20GAvOXNbq0FG17jW8pWrQH OoQ672qPoxfIt4olA7Lpm1A+oZF6QsdoJLXFSGiUXD+IxNcJChZgptkC6DFsyUKauYm15m1c5VWDTNdG4Ftyvn3PguSIU2iUPNF1l 0uhp0HXpXDXrTaHau637/IkynME5XACFW2jBE7ShCxwQPuELvkmNPJn8vI/WiL5zikURPxfjONwpg=</latexit>1 <latexit sha1_base64=\"uLzGklz9lSWOgOxXM+AVfrvsXEk=\">ABnicZY9NTwIxEIan+IX4hXr0QuTiwZCtEfWIMTFejJAIbA Ib0q0DNLTdZts1IRvuJl71x/lvXHEvC+9lnsw7M3knNFJY53k/pLSxubW9U96t7O0fHB5Vj096Nkpijl0eySj2Q2ZRCo1dJ5xE38TIVCixH84e/vz+O8ZWRPrVzQ0Gik20GAvOXNbq0FG17jW8pWrQHOoQ672qPoxfIt4olA7Lpm1A+oZF6QsdoJLXFSGiUXD+IxNcJChZ gptkC6DFsyUKauYm15m1c5VWDTNdG4Ftyvn3PguSIU2iUPNF1l0uhp0HXpXDXrTaHau637/IkynME5XACFW2jBE7ShCxwQPuELvkmNPJn8vI/WiL5zikURPxfjONwpg=</latexit>1 <latexit sha1_base64=\"whsImLJ+Dr6W7f8ejS65o4QKxQA=\" >ABnicZY9NTwIxEIan+IX4hXr0QuTiwZCuEfWIMTFejJAIbAIb0q0DNLTdZts1IRvuJl71x/lvXHEvC+9lnsw7M3knNFJYR+kPK W1sbm3vlHcre/sHh0fV45OejZKY5dHMor9kFmUQmPXCSfRNzEyFUrsh7OHP7/jrEVkX51c4OBYhMtxoIzl7U6dFSt0wZdqrYOXg 51yNUeVT+GbxFPFGrHJbN24FHjgpTFTnCJi8owsWgYn7EJDjLUTKEN0mXQgpkyZRVz08us2rkKi6aZzq3gduWcG98FqdAmcaj5Iov urQZdh95Vw7tpNDvX9dZ9/kQZzuAcLsCDW2jBE7ShCxwQPuELvkmNPJn8vI/WiL5zikURPxfi6lwpQ=</latexit>0 <latexit sha1_base64=\"YwvTPNHRPei2pKZ+MWjb595M0Os=\">ABqXicZY9NT8JAEIZn8Qvxq+rRi7EXEw1pDX4cMR70YgKJfC htyHYdYMPudtPdmpCGu7/Aq/4t/40FewHeyzyZd2byTqQFN9bzfklpbX1jc6u8XdnZ3ds/cA6P2iZOE4YtFos46UbUoOAKW5ZbgV2dIJWRwE40fpj5nQ9MDI/Vi51oDCUdKj7gjNq8FQS2lEis+fH12nfcb2qN9fpKvgFuFCo0Xc+g/eYpRKVZYIa0/M9bcOMJpYzgdNKk BrUlI3pEHs5KirRhNk84KZUWlmOS7zaiYyWjT1aGI4M0vn7OAuzLjSqUXFZtH95aCr0L6q+jfV62bNrd8XT5ThBM7gHy4hTo8QNawEDF3zD7kgTdIlb/+jJVLsHMOCPsD3qB1rQ=</latexit>MGY <latexit sha1_base64=\"L+Oo2HMJf14to5G2FwlZf/gN8=\" >ABrnicZY9NT8JAEIZn8Qvxg6pHL0QuHgxpjV/xhDEmHjHaQgJNs10H2LC73XS3JqTh7n/wqj/Kf2PBXoD3Mk/mnZm8E2vBjXdX 1LZ2Nza3qnu1vb2Dw7rztFxYJIsZeizRCRpL6YGBVfoW24F9nSKVMYCu/Hkce53PzA1PFvdqoxlHSk+JAzaotW5NQHktpxKvNXnD XuG0+R03Rb7kKNdfBKaEKpTuR8Dt4TlklUlglqTN9ztQ1zmlrOBM5qg8ygpmxCR9gvUFGJswXwZfMnEozj3JRVDOV8bKpx1PDmVk 5Z4d3Yc6VziwqNiuie6tB1yG4bHk3reuXq2b7oXyiCqdwBufgwS204Rk64AODL7gG36ISwISkuh/tELKnRNYEhn/AXP8doY=</lat exit>Se : E <latexit sha1_base64=\"9RmwVIS4KsiETvAZzAE/YXtwKU=\">ABunicZY89TwJBEIZn8Qvx69ShkhjYcid8SvGAmNjY4JRPh LuctlbBtiwu7e53TOSC4Wd/8RWf47/RsBrgLeZJ/POTN6JtODGu4vKaytb2xuFbdLO7t7+wfO4VHLxGnCsMliESediBoUXGHTciuwoxOkMhLYjkYPM7/9honhsXq1Y42BpAPF+5xRO2FTtmX1A4Tmb3gpHJbeQp9i+82EzHtTUKn6tbcuSqr4OVQhVyN0Pn0ezFLJSrLB DWm67naBhlNLGcCJyU/NagpG9EBdqeoqEQTZPMnFsyMSjOLdTatZiyjRVMPx4Yzs3TO9m+CjCudWlRsFt1bDroKrfOad1W7fL6o1u/zJ4pQhM4BQ+uoQ6P0IAmMPiAL/iGH3JHIsLJ6H+0QPKdY1gQsX/T93we</latexit>Se : Mload <latexit sha1_base64=\"Q6BfGYLdLt+NU91G+JZPw/xHPI=\">ABoHicZY+7TwJBEMZn8YX4Qi1tDQWhtwZXyXGhk6I8ohwIX vrABt29zY3eybkQm9jq3+b/40nXgN8zfwy38zkm9AqSc7zflhY3Nre6e4W9rbPzg8Kh+fdChKYoFtEako7oWcUEmDbSedwp6NketQYTecPv753XeMSUbmxc0sBpqPjRxJwV3WepZDGparXs1b6Hwd/ByqkKs5LH8M3iKRaDROKE7U9z3rgpTHTgqF89IgIbRcTPkY+xkar pGCdBF1yUy5Js3d5DKrNPhsmknM5KCVs650X2QSmMTh0bMs+j+atB16FzV/NvaTeu6Wn/InyjCGVTgAny4gzo0oAltEDCGT/iCb1ZhDfbEWv+jBZbvnMKS2OsvHaxA=</latexit>is <latexit sha1_base64=\"CYNQt8+sSXVAwB2EeZjmMLDcXEk=\">ABoHicZY85T8NAEIVnwxXCZaCkQUlDgSIbcZVBNOlIBDlEYl nrZKsrtedIlpWehZ+G/8GE9w4ec18mjczehNqwY13R9S2djc2t6p7tb29g8Oj5zjk76Jkphj0UiochNSi4wp7lVuBQx0hlKHAQzh/ME7xoZH6sWmGn1Jp4pPOKM2bz0nQRw4DbfpLnW+Dl4BDSjUCZyP8VvEonKMkGNGXmutn5GY8uZwEVtnBjUlM3pFEc5K irR+NkyasnMqDS2tlXk0qw7KpZ6nhzKycs5N7P+NKJxYVW+TRvdWg69C/anq3zZvudaP1UDxRhTOowV4cActaEMHesBgCp/wBd+kTtrkiXT/Ryuk2DmFksjrLytCc8=</latexit>ur <latexit sha1_base64=\"ORDbKo0gsaYjX6kINPqIoUKYLaU=\">ABo3icZY/LS8NAEMZn6vWV9SjF7EIHiQkUh/HihfBS5W+oA ls07btbubJbsRQujdo1f9z/xvjDWXt9lfsw3M3wTacGN9bwfUlb39jcqm7Xdnb39g+cw6OuidOEYfFIk76ETUouMKO5VZgXydIZSwF0f/vzeOyaGx6ptM42hpGPFR5xRW7S6QSxTIdO3XO9uU5XwS+hDqVaQ+cjeI1ZKlFZJqgxA9/TNsxpYjkTOKsFqUFN2ZSOc VCgohJNmM/TLpg5lUZSO7ksqslktGjqSWY4M0vn7OguzLnSqUXFZkV0fznoKnSvXP/GvX5u1Jv35RNVOIEzuAfbqEJj9CDjB4g0/4gm9yTp7IC2n/j1ZIuXMCyLhL/3ucw=</latexit>! <latexit sha1_base64=\"5MiVcDpJ1Llovkp7pkD/itKvXIE=\">ABnicZY9NS8NAEIZn61etX1WPXoq5eJCSiF/HiBei2YNt CGslmn7dLdzZLdCX0LnjVH+e/MdZc0r6XeZh3Zngn0oIb67o/pLKxubW9U92t7e0fHB7Vj096Jk4Thj6LRZwETUouELfcisw0AlSGQnsR7PHP7/jonhsXq1c42hpBPFx5xRm7e67VHdcZvuUo18ApwoFBnVP8YvsUslagsE9SYgedqG2Y0sZwJXNSGqUFN2YxOcJCjo hJNmC2DlsyMSiOpnV7m1cxlVDb1dG4Myvn7Pg+zLjSqUXFnl0bzXoOvSumt5t86Z7bQeieqcAbncAEe3ELnqEDPjBA+IQv+CYN8kTa5OV/tEKnVMoiQS/rztwg=</latexit>M <latexit sha1_base64=\"7cR6Dm+VkLVgFMjg+80isLPls=\">ABoHicZY85T8NAEIVnwxXCZaCkQXFDgSIbcZVBNGkQCZBDJF a0XibJKrvrlXeNFnpaWjht/FvMGNk9fMp3kzozehFtxYz/shpbX1jc2t8nZlZ3dv/8A5POqYKIkZtlkorgXUoOCK2xbgX2dIxUhgK74fT+z+Y2x4pF7sTGMg6VjxEWfUZq3nh+HT0HG9mrfQ6Sr4ObiQqzl0PgZvEUskKsENabve9oGKY0tZwLnlUFiUFM2pWPsZ 6ioRBOki6gFM6XSGon51k1MxkWT2ZGc7M0jk7ug1SrnRiUbF5Ft1fDroKnYuaf127al269bv8iTKcQBXOwIcbqEMDmtAGBmP4hC/4JlXSI+k9T9aIvnOMREXn8B0pNxhw=</latexit>MR <latexit sha1_base64=\"CwulivhE9uTIKguITQk6mJVEoQw=\" >ABnicZY9NS8NAEIZn61etX1WPXoq5eJCSiF/HihexBZMG2hD2azTdunuZsluhBJ6F7zqj/PfGsuad/LPMw7M7wTacGNd0fU lb39jcqm7Xdnb39g/qh0dE6cJQ5/FIk6CiBoUXKFvuRUY6ASpjAT2oun9n97x8TwWL3amcZQ0rHiI86ozVudh2HdcZvuQo1V8A pwoFB7WP8YvMUslagsE9SYvudqG2Y0sZwJnNcGqUFN2ZSOsZ+johJNmC2ClsyMSiOpnZzn1cxkVDb1ZGY4M0vn7Og2zLjSqUXF5nl 0bznoKnQvmt5186pz6bTuieqcAKncAYe3EALnqANPjBA+IQv+CYN8kieycv/aIUO8dQEgl+AaVrcLo=</latexit>E <latexit sha1_base64=\"FiAjeN0PWd5dIqt72gVUk4pXl+M=\" >ABoHicZY9NT8JAEIZn8QvxC/XoxdCLB0NaI+oR4WboBaI0JDtOsCG3e2muzVpGu5evOpv89YsRfgvcyTeWcm74RacGNd94eUN ja3tnfKu5W9/YPDo+rxSdESczQZ5GI4n5IDQqu0LfcCuzrGKkMBfbC2cOf3vH2PBIvdhUYyDpRPExZ9Tmredk9DSqOm7dXeh8Hb wCHCjUHlU/hm8RSyQqywQ1ZuC52gYZjS1nAueVYWJQUzajExzkqKhE2SLqEtmRqWR1E4v82pSGS6bepoazszKOTu+CzKudGJRsXk e3VsNug7dq7p3U290rp3mfFEGc6gBhfgwS0oQVt8IHBD7hC75JjbTI+n8j5ZIsXMKSyKvwQCca8=</latexit>uR <latexit sha1_base64=\"JIvZO1BvTvCPr49O07KtiMs/6V4=\">ABqnicZY/LTgJBEWr8YX4Ql26MbJxQciM8bXEuHFjgkYeBi akpymgQ3dPO1jJBP2/oFb/Sz/RsDZAHdTJ3WrKrdCq6Qjz/tlubX1jc2t/HZhZ3dv/6B4eNRwURILrItIRXEr5A6VNFgnSQpbNkauQ4XNcHQ/85vGDsZmRcaWw0HxjZl4LTtBU8djuEH5SqiPcm3WLJq3hzna6Cn0EJMtW6xc9OLxKJRkNCcefavmcpSHlMUicFDqJQ 8vFiA+wPUXDNbognYdeMFOuneY0LE+rG+tw0bTDsZPCLZ2j/m2QSmMTQiNm0f3loKvQuKj415Wrp8tS9S57Ig8ncAbn4MNVOEBalAHAW/wBd/w8rsmb2y9v9ojmU7x7Ag1vsDxe52Ug=</latexit>Mload <latexit sha1_base64=\"unyrS9cgVK3/5hWKXl26KOtKM2A=\">ABoHicZY9NT8JAEIZn8QvxC/XoxdCLB9O0xq8jxgs3IVogQk O261A27G43a0Jabh78aq/zX9jxV6A9zJP5p2ZvBNpwY31vB9S2djc2t6p7tb29g8Oj+rHJ12TZCnDgCUiSfsRNSi4wsByK7CvU6QyEtiLpo9/fu8dU8MT9WJnGkNJY8XHnFbtJ75KB3VHc/1FjpfB78EB0q1R/WP4VvCMonKMkGNGfietmFOU8uZwHltmBnUlE1pjIMCF ZVownwRdcnMqTS2slUc1MRsumnswMZ2blnB3fhzlXOrOo2LyI7q8GXYfulevfujeda6f5UD5RhTNowAX4cAdNaEbAmAQwyd8wTdpkBZ5Ip3/0Qopd05hSeT1FxycM=</latexit>ir Figure 10: Bond graph model of a DC shunt motor. given by the bond direction. Dually, at 1-junctions flows are equal and efforts balance. Specifically, at the 0-junction on the left the current from the Se-element (effort source) with effort/voltage E splits into the current is through the stator coil and the current ir through the rotor coil. The inductance of the rotor coil is represented by the I-element (generalized inductor) with inductance Lr, while an I-element representing the stator coil inductance is omitted. The (steady-state) stator coil current is is instead entirely determined by the R-element (generalized resistor) at the top representing the coil’s electrical resistance Rs. The magnetic flux of the stator coil bs is instead obtained as the signal that results from multiplying the signal is, which is the shared effort variable at the upper 1-junction, with the constant gain Ls. The bond graph hence combines energy-based modeling with signal-based modeling known from block diagrams. At the 1-junction on the left, the source voltage E is equal to the sum of the voltage over the rotor coil inductance Lr, the voltage uR over the rotor coil resistance Rr, and the induced (back EMF) voltage ur. The latter is determined by the MGY-element (modulated gyrator), which describes the coupling of the electrical and the mechanical parts. The gyrator ratio is the signal bs coming from the gain block. At the gyrator, the effort variable of one port is equal to the product of the gyrator ratio and the flow variable of the other port. On the mechanical side, the load torque Mload ≤ 0 is modeled by the effort source on the right, while the rotor’s angular mass Jr is represented by an I-element. At the 1-junction the sum of the generated torque M and the load torque Mload is equal to the sum of the torque accelerating the angular mass and the friction torque MR. The latter is the product of the friction coefficient dr and the angular velocity ω. Putting all this together, the bond graph gives the system of ordinary differential 36 equations Lr dir dt = E − ur − uR Jr dω dt = M − MR + Mload , where is = 1 Rs E bs = Ls is ur = bs ω M = bs ir MR = dr ω uR = Rr ir . As already shown in Example 4.3, the EPHS model is specified as an interconnection of two subsystems named stator and rotor. The two systems share an electric energy domain represented by the junction with connected ports named q. The kinetic energy domain of the rotor is represented by the junction with connected ports named p. Both energy domains are exposed such that the motor model can be integrated into another system. The conversion between electric and kinetic energy in the rotor depends on the state of the magnetic energy domain of the stator, which is represented by the junction with connected state ports named bs. stator em coil emloss env s q bₛ Figure 11: Interconnection pattern of the stator model. The interconnection pattern of the stator model is shown in Figure 11. The box em is filled by a reversible component that represents the coupling of the electric energy domain with port q and the magnetic energy domain with port bs. The box coil is filled by a storage component that represents the inductance of the stator coil, while the box emloss is filled by an irreversible component that represents its electric resistance. The box env is filled by an environment component whose thermal energy domain with port s absorbs the dissipated electromagnetic energy. 37 The reversible component (Iem, Dem) is defined by its interface Iem = ({q, bs}, τem) with τem(q) = ((R, charge), p), τem(bs) = ((R, flux linkage), p) and its Dirac structure Dem ⊂ PIem given by \" q.f bs.f # = \" 0 1 −1 0 # \" q.e bs.e # . The storage component (Icoil, Ecoil) is defined by its interface Icoil = ({bs}, τcoil) with τcoil(bs) = ((R, flux linkage), p) and its energy function Ecoil : XIcoil → R with XIcoil = R ∋ bs.x = bs given by Ecoil(bs) = 1 2 Ls b2 s , where the parameter Ls is the inductance. Since Hcoil = Ecoil, the effort variable bs.e = bs Ls is the current through the coil. The irreversible component (Iemloss, Oemloss) is defined by Iemloss = ({bs, s}, τemloss) with τemloss(bs) = ((R, flux linkage), p), τemloss(s) = ((R, entropy), p) and its Onsager structure Oemloss ⊂ Pemloss given by \"bs.f s.f # = 1 θ0 Rs  θ0+s.e −bs.e −bs.e (bs.e)2 θ0+s.e  \"bs.e s.e # =  Rs bs.e − Rs (bs.e)2 θ0+s.e  , where the parameter Rs is the electric resistance of the coil. The environment component is defined by the subinterface Ienv = {s} ⊆ IR. rotor em coil mk emloss mass mloss env bₛ s q b p Figure 12: Interconnection pattern of the rotor model. 38 The interconnection pattern of the rotor model is shown in Figure 12. The compo- nents filling the boxes coil, em, emloss, and env are defined as for the stator model, except for a different port name, namely b instead of bs, and different parameters, namely Lr instead of Ls and Rr instead of Rs. The box mk is filled by a reversible component that describes the coupling of the magnetic energy domain with port b and the (rotational) kinetic energy domain with port p. This coupling depends on the magnetic flux bs.x that is generated by the stator coil. The box mass is filled by a storage component that represents the rotor’s angular mass and the box mloss is filled by an irreversible component that represents its mechanical friction. The reversible component (Imk, Dmk) is defined by Imk = ({b, p, bs}, τmk) with τmk(b) = ((R, flux linkage), p), τmk(p) = ((R, angular momentum), p), τmk(bs) = ((R, flux linkage), s) and its Dirac structure Dmk ⊂ PImk given by \"b.f p.f # = \" 0 bs.x −bs.x 0 # \"b.e p.e # . The storage component (Imass, Emass) is defined by Imass = ({p}, τmass) with τmass(p) = ((R, angular momentum), p) and Emass : XImass → R with XImass = R ∋ p.x = p given by Emass(p) = 1 2 Jr p2 , where the parameter Jr is the angular mass. The irreversible component (Imloss, Omloss) is defined by Imloss = ({p, s}, τmloss) with τmloss(p) = ((R, angular momentum), p), τmloss(s) = ((R, entropy), p) and its Onsager structure Omloss ⊂ PImloss given by \"p.f s.f # = 1 θ0 dr  θ0+s.e −p.e −p.e (p.e)2 θ0+s.e  \"p.e s.e # =  dr p.e − dr (p.e)2 θ0+s.e  , where the parameter dr is the mechanical friction coefficient. We write (bs, b, p, s) ∈ R4 for the state of the interconnected motor model, where we identify the entropy state variables s of both environment components. In future work, the identification of environment components can be formalized by composing with a suitable relation. The EPHS model then yields the equations ˙bs = q.e − Rs is ˙b = q.e − bs ω − Rr ir ˙p = bs ir − dr ω + p.f ˙s = 1 θ0 \u0010 Rs i2 s + Rr i2 r + dr ω2\u0011 q.f = is + ir , 39 where is = 1 Ls bs ir = 1 Lr b ω = 1 Jr p . 10. Discussion While it still seems reasonable to package a motor model as a single bond graph, integrating the model as part of a more complex system is not supported by the bond graph notation. Hence, bond graph users have to reproduce models as parts of more complex models. EPHS improves upon this, making it nearly trivial to encapsulate, reuse, and swap out submodels. Another main feature of EPHS is their built-in thermodynamic consistency. Restricting the space of models in this way not only provides important guarantees, it also makes models compatible with each other, as a close link between their mathematical structure and physical interpretation is established. This is reflected by the correspondence of junctions and energy domains, which in our opinion contributes substantially to the improved readability of the EPHS syntax. The reason why EPHS users can easily integrate existing models without first needing to adapt them to fit into the larger system is that EPHS simply compose by sharing energy domains. In this way, we hope to improve upon port-Hamiltonian systems, which lack an intuitive graphical syntax and require that users define the ports of a system in a somewhat arbitrary manner. Author contribution statement Markus Lohmayer: Conceptualization, Investigation, Writing – Original Draft, Writing – Review & Editing, Visualization; Owen Lynch: Investigation, Writing – Original Draft; Sigrid Leyendecker: Supervision Acknowledgements We thank David Spivak for help when working out the concept of namespaces. References [1] T. J. Courant, Dirac manifolds, Transactions of the American Mathematical Society 319 (1990) 631–661. [2] M. Pavelka, V. Klika, M. Grmela, Multiscale Thermo-Dynamics, De Gruyter, Berlin, 2018. doi:10.1515/9783110350951. 40 [3] H. Callen, Thermodynamics and an Introduction to Thermostatistics, second ed., John Wiley & Sons Inc, New York, 1985. [4] H. C. ¨Ottinger, Beyond Equilibrium Thermodynamics, John Wiley & Sons Inc, Hoboken, New Jersey, 2005. [5] S. de Groot, P. Mazur, Non-equilibrium Thermodynamics, Dover Books on Physics, Dover Publications, New York, 1984. [6] L. Onsager, Reciprocal relations in irreversible processes. i., Physical Review 37 (1931) 405–426. [7] P. C. Breedveld, Thermodynamic bond graphs and the problem of thermal iner- tance, Journal of the Franklin Institute 314 (1982) 15 – 40. [8] B. Maschke, Geometrical formulation of bond graph dynamics with application to mechanisms, Journal of the Franklin Institute 328 (1991) 723–740. [9] J. C. Willems, Qualitative behavior of interconnected systems, in: An- nals of Systems Research, Springer US, 1974, pp. 61–80. doi:10.1007/ 978-1-4613-4555-8_4. [10] J. C. Willems, The behavioral approach to open and interconnected systems, IEEE Control Systems 27 (2007) 46–99. [11] B. Maschke, A. van der Schaft, P. Breedveld, An Intrinsic Hamiltonian Formulation of Network Dynamics: Non-standard Poisson Structures and Gyrators, Journal of the Franklin Institute 329 (1992) 923–966. [12] A. van der Schaft, B. Maschke, The Hamiltonian formulation of energy con- serving physical systems with external ports, AEU - Archiv f¨ur Elektronik und ¨Ubertragungstechnik 49 (1995) 362–371. [13] A. van der Schaft, D. Jeltsema, Port-Hamiltonian systems theory: An introductory overview, Foundations and Trends in Systems and Control 1 (2014) 173–378. [14] M. Grmela, H. C. ¨Ottinger, Dynamics and thermodynamics of complex fluids. I. Development of a general formalism, Phys. Rev. E 56 (1997) 6620–6632. [15] A. N. Kaufman, Dissipative Hamiltonian systems: A unifying principle, Physics Letters A 100 (1984) 419–422. [16] M. Grmela, Particle and bracket formulations of kinetic equations, in: Fluids and plasmas: geometry and dynamics (Boulder, Colo., 1983), volume 28 of Contemp. Math., Amer. Math. Soc., Providence, RI, 1984, pp. 125–132. doi:10.1090/conm/ 028/751978. [17] M. Grmela, Bracket formulation of dissipative fluid mechanics equations, Physics Letters A 102 (1984) 355–358. 41 [18] P. J. Morrison, Bracket formulation for irreversible classical fields, Physics Letters A 100 (1984) 423–427. [19] A. M. Badlyan, B. Maschke, C. Beattie, V. Mehrmann, Open physical systems: from GENERIC to port-Hamiltonian systems, in: Proceedings of the 23rd Inter- national Symposium on Mathematical Theory of Systems and Networks, Hong Kong, China, 2018, pp. 204–211. [20] M. Lohmayer, P. Kotyczka, S. Leyendecker, Exergetic port-Hamiltonian systems: modelling basics, Mathematical and Computer Modelling of Dynamical Systems 27 (2021) 489–521. [21] H. Paynter, Analysis and Design of Engineering Systems, MIT Press, Cambridge, 1961. [22] W. Borutzky, Bond Graph Methodology, Springer London, 2010. doi:10.1007/ 978-1-84882-882-7. [23] S. Birkett, P. Roe, The mathematical foundations of bond graphs—i. algebraic theory, Journal of the Franklin Institute 326 (1989) 329–350. [24] B. Coya, A compositional framework for bond graphs, 2017. doi:10.48550/ ARXIV.1710.00098. [25] M. Pfeifer, S. Caspart, S. Hampel, C. Muller, S. Krebs, S. Hohmann, Explicit port- Hamiltonian formulation of multi-bond graphs for an automated model generation, Automatica 120 (2020) 109121. [26] S. Mac Lane, Categories for the Working Mathematician, Graduate Texts in Mathematics, second ed., Springer, 1998. [27] B. Fong, D. I. Spivak, An Invitation to Applied Category Theory, Cambridge University Press, 2019. doi:10.1017/9781108668804. [28] D. J. Myers, Categorical systems theory, http://davidjaz.com/Papers/ DynamicalBook.pdf, 2022. [29] J. Baez, J. Erberle, Categories in control, Theory and Applications of Categories 30 (2015) 836–881. [30] J. C. Baez, B. S. Pollard, A compositional framework for reaction networks, Reviews in Mathematical Physics 29 (2017) 1750028. [31] J. C. Baez, B. Fong, A compositional framework for passive linear networks, 2018. doi:10.48550/ARXIV.1504.05625. [32] J. C. Baez, J. Foley, J. Moeller, B. S. Pollard, Network models, 2020. [33] J. D. Foley, S. Breiner, E. Subrahmanian, J. M. Dusel, Operads for complex system design specification, analysis and synthesis, Proceedings of the Royal Society A: Mathematical, Physical and Engineering Sciences 477 (2021) 20210099. 42 [34] T. Leinster, Higher Operads, Higher Categories, London Mathematical So- ciety Lecture Note Series, Cambridge University Press, 2004. doi:10.1017/ CBO9780511525896. [35] D. Yau, Colored Operads, American Mathematical Society (AMS), Providence, Rhode Island, 2016. [36] M. Lohmayer, S. Leyendecker, EPHS: A Port-Hamiltonian Modelling Lan- guage, in: 25th IFAC Symposium on Mathematical Theory of Networks and Systems MTNS 2022, volume 55, Elsevier BV, 2022, pp. 347–352. doi:10.1016/ j.ifacol.2022.11.077. [37] D. I. Spivak, The operad of wiring diagrams: formalizing a graphical language for databases, recursion, and plug-and-play circuits, 2013. doi:10.48550/ARXIV. 1305.0297. [38] D. Spivak, Category Theory for the Sciences, MIT Press, 2014. [39] D. Yau, Operads of Wiring Diagrams, Springer International Publishing, 2018. doi:10.1007/978-3-319-95001-3. [40] S. Breiner, B. Pollard, E. Subrahmanian, O. Marie-Rose, Modeling hierarchical system with operads, Electronic Proceedings in Theoretical Computer Science 323 (2020) 72–83. [41] D. Vagner, D. Spivak, E. Lerman, Algebras of open dynamical systems on the operad of wiring diagrams, Theory and Applications of Categories 30 (2015) 1793–1822. [42] P. Schultz, D. I. Spivak, C. Vasilakopoulou, Dynamical systems and sheaves, Applied Categorical Structures 28 (2019) 1–57. [43] S. Libkind, An algebra of resource sharing machines, 2020. doi:10.48550/ARXIV. 2007.14442. [44] S. Libkind, A. Baas, E. Patterson, J. Fairbanks, Operadic modeling of dynami- cal systems: Mathematics and computation, 2021. doi:10.48550/ARXIV.2105. 12282. [45] O. Lynch, Relational composition of physical systems: A categorical approach, 2022. doi:10.48550/arXiv.2310.06088. [46] E. Fredkin, Trie memory, Communications of the ACM 3 (1960) 490–499. [47] M. Pavelka, V. Klika, M. Grmela, Time reversal in nonequilibrium thermo- dynamics, Phys. Rev. E 90 (2014) 062131. [48] J. M. Lee, Introduction to Smooth Manifolds, second ed., Springer New York, 2012. doi:10.1007/978-1-4419-9982-5. 43 [49] H. Bursztyn, A brief introduction to Dirac manifolds, in: A. Cardona, I. Contreras, A. F. Reyes-Lega (Eds.), Geometric and Topological Methods for Quantum Field Theory: Proceedings of the 2009 Villa de Leyva Summer School, Cambridge University Press, Cambridge, 2013, p. 4–38. doi:10.1017/CBO9781139208642. 002. [50] A. Mielke, D. R. M. Renger, M. A. Peletier, A generalization of Onsager’s reciprocity relations to gradient flows with nonlinear mobility, Journal of Non- Equilibrium Thermodynamics 41 (2016). [51] J. C. Willems, Dissipative dynamical systems part I: General theory, Archive for Rational Mechanics and Analysis 45 (1972) 321–351. 44 "
}