{
    "optim": "Exergetic Port-Hamiltonian Systems\nModeling Language\nMarkus Lohmayera,∗, Owen Lynchb, Sigrid Leyendeckera\naInstitute of Applied Dynamics\nFriedrich-Alexander Universit¨at Erlangen-N¨urnberg, Erlangen, Germany\nbTopos Institute\nBerkeley, CA, USA\nAbstract\nMathematical modeling of real-world physical systems requires the consistent combina-\ntion of a multitude of physical laws and phenomenological models. This challenging\ntask can be greatly simplified by hierarchically decomposing systems. Moreover, the use\nof diagrams for expressing such decompositions helps make the process more intuitive\nand facilitates communication, even with non-experts. As an important requirement,\nmodels have to respect fundamental physical laws such as the first and the second law of\nthermodynamics. While some existing modeling frameworks can make such guarantees\nbased on structural properties of their models, they lack a formal graphical syntax. We\npresent a compositional and thermodynamically consistent modeling language with a\ngraphical syntax. As its semantics, port-Hamiltonian systems are endowed with fur-\nther structural properties and a fixed physical interpretation such that thermodynamic\nconsistency is ensured in a way that is closely related to the GENERIC framework.\nWhile port-Hamiltonian systems are inspired by graphical modeling with bond graphs,\nneither the link between the two, nor bond graphs themselves, can be easily formalized.\nIn contrast, our syntax is based on a refinement of the well-studied operad of undi-\nrected wiring diagrams. The language effectively decouples the construction of complex\nmodels via the graphical syntax from physical concerns, which are dealt with only at\nthe level of primitive subsystems that represent elementary physical behaviors. As a\nconsequence, reuse of models and substitution of their parts becomes possible. Finally,\nby construction, systems interact by exchanging exergy, i.e. energy that is available for\ndoing work, so the language is particularly well suited for thermodynamic analysis and\noptimization.\nKeywords: applied category theory, bond graphs, classical electromagnetism,\nclassical mechanics, compositionality, exergy, GENERIC, graphical syntax, local\nthermodynamic equilibrium, multiphysics, nonequilibrium thermodynamics,\nport-Hamiltonian systems\nPreprint submitted to arXiv\nFebruary 28, 2024\narXiv:2402.17640v1  [eess.SY]  27 Feb 2024\n1. Introduction\nIn this introduction we want to answer the following questions:\n1. What are Exergetic Port-Hamiltonian Systems (EPHS)?\n2. How do they enable compositional modeling?\n3. Why is this practically relevant?\nIn addition, we briefly summarize key ideas of nonequilibrium thermodynamics and we\ndiscuss related work that inspired our developments. The introduction finishes with an\noutline of the main part of the paper.\n1.1. What?\nEPHS provide a compositional and thermodynamically consistent language for\nexpressing mathematical models of multiphysical systems at macroscopic scales. Such\nsystems may combine\n(a) classical mechanics\n(e.g. spring-mass systems, multibody dynamics, fluid mechanics),\n(b) classical electromagnetism\n(e.g. LC circuits, electromagnetic wave propagation)\n(c) and irreversible processes with local thermodynamic equilibrium\n(e.g. friction/viscosity, electrical resistance/conduction, thermal conduction).\nThe EPHS language is termed compositional since it enables a completely modular\nand hierarchical specification of models based on its simple graphical syntax, which is\ndiscussed in more detail in the next subsection.\nIf one flattens any hierarchical nesting of systems, one finds that every system is\ndetermined by a power-preserving interconnection of primitive subsystems. There are\nthree main classes of primitive systems:\n1. Systems that represent energy storage are characterized by a function which yields\nthe stored energy for each possible state of the primitive system.\n2. Systems that represent reversible energy exchange are characterized by a so-called\nDirac structure, as known e.g. from (constrained) mechanical systems [1].\n3. Systems that represent irreversible energy exchange are characterized by another\ntype of structure that we call Onsager structure.\nSince both classical mechanics and electromagnetism can be expressed using Dirac\nstructures, item 2. corresponds to (a) and (b) above, while item 3. corresponds to (c).\nStructural properties of the primitive systems guarantee that all models respect the first\nand the second law of thermodynamics, Onsager’s reciprocal relations, as well as further\nconservation laws (e.g. for mass). Section 1.4 aims for a very brief introduction to\nnonequilibrium thermodynamics.\n2\nsa\nke\nbₖ\nm\np\nf\nkin (kinetic energy system)\nFigure 1: Graphical representation of an interconnection pattern with different syntactic elements shown in a\ndifferent color. The outer box shown in orange represents the interface of the resulting composite system. The\ntwo protruding lines correspond to its ports called f and bk. The two inner boxes shown in red represent (the\ninterface of) the subsystems called ke (storage of kinetic energy) and sa (self-advection of kinetic energy).\nBoth have ports called p (momentum) and m (mass), while sa has another port called bk (advection of kinetic\nenergy across the boundary of the spatial domain). The port combinator shown in purple combines the ports p\n(fluid momentum) and m (fluid mass) into the multiport f (fluid). The black dots represent junctions where\npower is exchanged among the connected ports. The dashed line indicates that port m of the port combinator\ndoes not partake in power exchange, but merely shares information about the state (fluid mass).\n1.2. How?\nExpressions in the graphical syntax are called interconnection patterns because a\npattern specifies how a composite system can be formed through a power-preserving\ninterconnection of subsystems. Figure 1 shows an example from fluid dynamics.\nThe syntax deals with systems only in terms of their interfaces, i.e. their exposed\nports. Each port has two attributes: The first attribute gives the physical quantity that\ncan be exchanged via the port together with the corresponding state space. To rule out\nill-defined connections, only ports with the same quantity can be connected. The second\nattribute is of Boolean type and indicates whether power can be exchanged over the port\nor merely information about system state, as indicated graphically by a solid or a dashed\nline, respectively.\nAn interconnection pattern should be thought of as a function which, for every round\ninner box, takes as input a system with matching interface and returns a system whose\ninterface matches the outer box. For instance, the pattern shown in Figure 1 represents a\nfunction which takes two subsystems whose interfaces are determined by the ports of\nthe boxes ke and sa, and it returns a composite system whose interface is determined\nby the ports of the outer box. In the graphical representation, we often draw inner boxes\nfilled with a color that indicates the nature of the subsystems that we consider as inputs.\nIn Figure 1, ke has a blue filling as it represents energy storage, i.e. the fluid’s kinetic\nenergy, while sa has a green filling as it represents reversible energy exchange, i.e. the\nadvection of momentum and mass by the fluid flow. Written on top of the outer box,\nkin is an identifier akin to a function name and the text in parenthesis is just a short\n∗Corresponding author\nEmail address: markus.lohmayer@fau.de (Markus Lohmayer)\n3\ndescription. The port combinator and the corresponding multiport f are syntactic sugar\nthat allows the composite system to be connected to other systems without drawing\nparallel connections.\nsa\nke\nm\np\nf\nkin (kinetic energy system)\n(a) Kinetic energy system\nint\nkin\nth\nvol\nshr\nf\nf (fluid)\n(b) Fluid system\nf\nel\nek\nem\nf\nem\nemhd\n(c) EMHD System\nFigure 2: Hierarchical specification of an electro-magneto-hydrodynamics model: The fluid model f shown\nin (b) comprises the kinetic energy system kin shown in (a) and four further models which are not shown,\nnamely an internal energy system int, a thermal conduction model th, and volume / shear viscosity models\nvol / shr. The electro-magneto-hydrodynamics model emhd shown in (c) comprises the fluid model f and\nthree further models which are not shown, namely an electro-magnetic system em, an electric conduction\nmodel el, and a model for the electro-kinetic coupling ek.\nFigure 2 demonstrates the hierarchical specification of a model for electro-magneto-\nhydrodynamics. For simplicity, a spatial domain with empty or isolated boundary is\nassumed such that only the in-domain interconnection of the different models needs\nto be dealt with. The yellow filling of the inner boxes in Figures 2b and 2c indicates\nthat another composite system, which in turn is specified with its own interconnection\npattern, is supplied as input. Recursively substituting into all yellow inner boxes the\nrespective interconnection patterns would yield an equivalent model specification with-\nout hierarchical decomposition. The composition of interconnection patterns through\nsubstitution is uniquely defined as long as interfaces match. Similarly, one can add\na level of nesting by refactoring a number of subsystems into a reusable composite\nsubsystem. In the fluid model, one could for instance factor out the kinetic energy\nsystem filling the box kin and the internal energy subsystem filling the box int into a\nreusable ideal compressible fluid model.\n1.3. Why?\nEPHS provide a formal and intuitive modeling language suited for humans and\nsoftware tools alike. As shown above, increasingly complex models can be assembled\nfrom simpler and ultimately primitive parts. This fosters the reusability of models and\nencourages the conceptual separation of different levels of detail. Beyond the modeling\n4\nprocess, this provides value in interdisciplinary communication and education. Some\nmodeling errors can be completely avoided due to typed interfaces (given by ports\nwith fixed physical quantities) and the built-in thermodynamic consistency. Since inter-\nconnection patterns can be used as exergy flow diagrams, EPHS models are particularly\nuseful for thermodynamic analysis and optimization. The compositional nature of EPHS\ncould enable a scalable approach to model transformations, such as discretizations, and\nalso to the integration of scientific machine learning techniques in first-principles-based\nphysical modeling.\n1.4. Nonequilibrium thermodynamics in a tiny nutshell\nMost physical systems are characterized by a huge number of degrees of freedom\nbut keeping track of them is usually neither possible nor useful. Nonequilibrium\nthermodynamics aims to provide a framework for coarse-grained modeling, meaning\nthat fast dynamics at small scales are not resolved and a quantity called entropy is\nintroduced to account for the missing information, see e.g. [2]. Coarse-graining is\npossible because, despite of fluctuations at the microscopic scale, one can eventually\nobserve non-fluctuating properties at a more macroscopic scale; at least this is the case\nfor isolated systems. For instance, temperature is a property that does not appear at the\nmicroscopic scale. Thermodynamic properties are classified as extensive when they\nare proportional to the size of the system (e.g. entropy, volume, mass) or as intensive\nwhen they do not depend on the size of the system (e.g. temperature, pressure, chemical\npotential), see e.g. [3]\nA system is said to be in local thermodynamic equilibrium if for every material point\nthere exists a neighborhood large enough to observe thermodynamic properties, yet\nsmall enough for the properties to be non-varying inside the neighborhood, see e.g. [4].\nThe size of these neighborhoods presents a macroscopic scale at which the dynamics of\nthe thermodynamic properties can be observed and also modeled.\nThe first law of thermodynamics just restates a well-known fact from mechanics,\nnamely that energy is a conserved quantity. However, instead of considering directly the\nmechanical and electromagnetic energy associated to microscopic degrees of freedom, a\nthermodynamic model with local equilibrium resorts to a phenomenological description\ncalled internal energy, which is considered to depend on a number of extensive properties,\nincluding entropy, and possibly further mechanical or electromagnetic state variables\nwhich are observable on the considered macroscopic scale. These quantities then serve\nas the state variables of a coarse-grained description. Moreover, temperature is the\nderivative of the internal energy with respect to entropy. Similarly, pressure is given by\nthe derivative with respect to volume and the chemical potential is the derivative with\nrespect to mass, see e.g. [3].\nClassical mechanics and electromagnetism exhibit reversible dynamics, meaning\nthat one could in principle arrive again at the initial condition by reversing the direction\nof time (although for many systems this would be impossible due to chaos). Incomplete\nknowledge about the microscopic state immediately leads to irreversible dynamics and\nan irreversible dynamics in turn leads to a growth of entropy, as information (e.g. about\nthe initial state of the system) is lost in the process. This is reflected by the second law\nof thermodynamics which states that the entropy of an isolated system never decreases\n5\nand that the system evolves towards a state of maximum entropy, see e.g. [4]. In other\nwords, the uncertainty about the microscopic state can only grow, not decrease.\nFor models with local equilibrium, the irreversible dynamics can be expressed in\nterms of so-called thermodynamic fluxes that determine instantaneous changes of coarse-\ngrained state variables. The fluxes are expressed as a function of thermodynamic forces,\nwhich are given by differences in intensive quantities, see e.g. [4, 5]. For instance,\ntemperature differences cause heat flux, according to Fourier’s law, and differences\nin chemical potential cause a diffusive mass flux, according to Fick’s law. Further,\none may observe cross effects such as a diffusive mass flux caused by temperature\ndifferences (Soret effect) and likewise a heat flux caused by differences in chemical\npotential (Dufour effect). Onsager’s reciprocal relations state that the relation between\nfluxes and forces must possess a certain symmetry [6]. For instance, the ratio of the\nmass flux caused by the Soret effect and the respective temperature difference is equal\nto the ratio of the heat flux caused by the Dufour effect and the respective difference in\nchemical potential.\n1.5. Related work\nFigure 3 gives a high-level view of this subsection.\nbond graphs\nGENERIC\nPHS\nACT\ndissipative systems theory\nnonequilibrium\nthermodynamics\nframework\nformalization\nand\ncompositionality\ngraphical energy-based modeling\nFigure 3: Informal Venn diagram illustrating that EPHS integrates ideas from graphical and energy-based mod-\neling of physical systems with bond graphs, the GENERIC framework for nonequilibrium thermodynamics,\nthe port-Hamiltonian theory of open dissipative systems (PHS), and applied category theory (ACT) research\non the formalization of graphical languages and compositional dynamical systems.\n1.5.1. Port-Hamiltonian systems\nApparent from their name, EPHS have a lot in common with Port-Hamiltonian\nSystems (PHS). PHS were originally inspired by relating the dynamical systems defined\nby generalized bond graphs [7] (i.e. bond graphs using a single kind of energy storage\nelements together with gyrator elements) to Hamiltonian mechanics [8]. While many\n6\nauthors make use of explicit input-output port-Hamiltonian systems, PHS constitute\nan acausal systems theory, inspired also by the behavioral approach of Willems [9,\n10]. The dynamics of networks comprising energy storing elements and reversible\ncoupling elements between them (such as generalized transformers and gyrators) can\nbe formalized, from a geometric viewpoint, as a Hamiltonian system whose Poisson\nstructure reflects the network topology [11]. The generalization to networks with\nalgebraic constraints and externally controlled ports is achieved by using Dirac structures,\nwhich unify Poisson structures and presymplectic structures [12]. By specifying a\nresistive relation on external port variables, the implicit Hamiltonian dynamics can be\ncombined with a dissipative gradient dynamics, allowing for network elements that\nrepresent e.g. dampers and resistors. The key properties of PHS are firstly a power-\nbalance equation which states that the sum of the stored power and the dissipated power\nis equal to the supplied power (passivity) and secondly the possibility to combine port-\nHamiltonian systems by composition of their Dirac structures with an interconnecting\nDirac structure, see for instance [13].\nWhile the dynamical systems defined by EPHS models are essentially PHS, they\nhave further structural properties and a fixed physical interpretation. PHS in general have\nno uniform thermodynamic interpretation and they lack a formal graphical syntax to\nexpress their interconnection. In contrast to EPHS, PHS also lack a built-in mechanism\nfor referring to subsystems and ports.\n1.5.2. GENERIC framework\nThe general equation for reversible-irreversible coupling (GENERIC) provides a\nframework for combining reversible and irreversible dynamics in a way that respects\nfundamental thermodynamic principles, namely the first law, the second law and the\nreciprocal relations discovered by Onsager [14]. The reversible part is defined by\nan entropy-conserving Hamiltonian dynamics, while the irreversible part is given by\nan energy-conserving gradient flow, see e.g. [4]. We note that the same holds for\nclosely-related earlier developments in this direction, including metriplectic systems,\nsee [15, 16, 17, 18]. While a large class of well-known dynamical systems from physics\ncan be identified as instances of the GENERIC, see e.g. [2], the framework is especially\nhelpful for the development of new thermodynamic models.\nThe combination of Hamiltonian and gradient dynamics in both PHS and GENERIC\nsystems led to the initial observation of a relationship between the two frameworks\nin [19]. GENERIC systems with local thermodynamic equilibrium can be seen as port-\nHamiltonian systems, where the storage function corresponds to the system’s exergy.\nThis function yields the maximum amount of work that can be extracted by an ideal\n(i.e. purely reversible) process which may arbitrarily interact with the system’s storage\ncomponents and a given reference environment [20].\nThe dynamical systems defined by (isolated) EPHS models are basically GENERIC\nsystems, since their built-in thermodynamic consistency and associated physical inter-\npretation follow from the same ideas. Beyond the aspect of compositionality, there are\ntwo main differences: 1. GENERIC systems are more general in the sense of including\nsystems beyond local thermodynamics equilibrium (where the concept of temperature\ndoes not apply). 2. The reversible part of EPHS is defined using Dirac structures, rather\n7\nthan less general Poisson structures (which cannot express kinematic constraints). This\nis crucial e.g. for modeling multibody systems and electrical circuits.\n1.5.3. Bond graph modeling\nBond graph modeling is based on a graphical notation for representing dynamical\nsystems and in particular multi-domain models involving mechanical and electrical\nelements [21, 22]. The main idea is that elements interact via bonds that represent\nlinks for energy exchange. Associated to each bond, there are two dynamic variables\ncalled flow and effort, whose product (or duality pairing) gives the exchanged power.\nBonds can be connected via two types of junctions, namely 0-junctions, where the flow\nvariables of all connected ports balance, with all effort variables being equal, and dually\ndefined 1-junctions, where the effort variables balance, with all flow variables being\nequal. In both cases, the net power at a junction is zero.\nWhile PHS can be seen as a geometric formalization of the dynamical systems\ndefined by generalized bond graphs, the algebraic formalization of the bond graph\nnotation itself is not straightforward, when compared to e.g. standard multigraphs,\nsee [23, 24]. The inherent complexity of the notation is evident also in practice, since\nthe direction in which exchange of power is counted positive and sometimes also the\nquestion which variable is flow and which is effort have to be decided arbitrarily, bond\nby bond. While bond graphs are frequently used in the literature to illustrate PHS, their\nuse as a formal syntax for model specification is not established. Previous work has\nfocused on algorithms for converting certain classes of bond graphs to port-Hamiltonian\nsystems, see e.g. [25].\nIn contrast to bond graph notation, the EPHS syntax only has 0-junctions and every\ninterconnection pattern has an outer box. As demonstrated by various applications,\na single type of junctions is sufficient and moreover the simplification entails crucial\nadvantages: Interconnection patterns are easier to interpret, in particular due to the\ndirect correspondence between junctions and energy domains. This correspondence\narises from the inherent distinction between the roles of flows and efforts, a feature that\nis lacking in bond graphs. Further, the direction in which exchange of power is counted\npositive is predetermined in accordance with the convention used in thermodynamics,\ni.e. energy supplied to a system has a positive sign. Last but not least, interconnection\npatterns can be hierarchically composed and decomposed in a natural way.\n1.5.4. Applied category theory\nThe compositional nature of EPHS can be made precise using category theory.\nCategory theory was first applied in algebraic geometry and topology and now is used\nto organize many branches of mathematics [26]. In recent decades, category theory\nhas also grown beyond pure math to organize scientific and engineering disciplines as\nwell, giving birth to ‘applied category theory’ [27]. A specific approach to categorical\nsystems theory [28] that has inspired this work is based on the following principles,\nwhich can essentially also be found in the work of Willems [10].\n1. A shift of focus from individual systems to how systems relate to each other.\n2. An isolated system is a system with empty interface.\n8\n3. The description of systems involves syntax and semantics. Syntax typically\nconsists of combinatorial data that can be manipulated computationally, while\nsemantics are given by geometric objects that exist only platonically. Additionally,\nthe syntax can be displayed and manipulated diagrammatically as well as in text.\nAn explicit understanding of the translation from syntax to semantics serves as a\nguide for computer implementation.\nFor instance, there is a line of research which formalizes graphical languages for\nsystems and process such as block diagrams [29], Petri nets [30], junctions of bond\ngraphs [24], and passive linear circuits [31]. These works consider a graphical syntax as\nsome sort of string diagrams, established via a generators and relations approach.\nMore closely related to our work, another line of research uses the theory of operads\nto define a graphical syntax which supports hierarchical (de-)composition, see [32, 33].\nOperads organize formal operations with finitely many inputs (subsystems) and one\noutput (composite system), see [34, 35]. As proposed in [36], the EPHS syntax, is based\non the operad of undirected wiring diagrams, which initially appeared in [37], together\nwith its relational semantics used to express database queries, see also [38, 39, 40].\nIn a similar lane, directed wiring diagrams are used to formalize nested systems of\nMoore machines and ODEs with outputs, see [41, 42]. A combination of dynamical\nsystems based on directed and undirected wiring diagrams is presented in [43, 44].\nThe composition of lossless port-Hamiltonian systems was recently studied from a\ncategorical perspective in [45].\n1.6. Outline\nSection 2 defines system interfaces. Based on this, Section 3 defines interconnection\npatterns. Section 4 shows how every interconnection pattern implies a relation between\nthe port variables of its interfaces. Section 5 discusses how exergy quantifies the energy\nstored in a system that is available for doing work. Based on this, Section 6 introduces\nthe primitive systems. Section 7 defines composite systems and how they are formed\nusing the graphical syntax. Section 8 shows that EPHS models are thermodynamically\nconsistent. Section 9 presents an example of a motor model, together with a comparison\nto a classical bond graph. Section 10 concludes with a discussion.\n2. Interfaces\nWhile the narrative of discovery, usually proceeds from systems to interfaces,\nlogically speaking, the syntax needs to be introduced before the semantics and hence\nwe start with interfaces. Graphically, the interface of a system is a box with a set of\nports drawn around it. While we could treat such sets abstractly, as is often done in\napplied category theory, for practical reasons we instead treat them as sets of names\ncalled namespaces.\n2.1. Namespaces\nDefinition 2.1.\nA string is a non-empty list of characters and a name is a list of strings.\n△\n9\nWe write names using a monospace font and with strings separated by dots. For\ninstance, the name consisting of the list of strings “oscillator”, “spring”, “q” is written\nas oscillator.spring.q. Further, we use [] to denote the empty name, i.e. the empty\nlist of strings. Given two names n and n′, we denote their concatenation by n ∗ n′. For\nexample, a.b ∗ c = a.b.c.\nDefinition 2.2.\nGiven two names p and n, we say that p is a prefix of n, and write p ≤ n if there exists\nany name s such that n = p ∗ s. In case s , [], we say that p is a strict prefix of n and\nwrite p < n.\n△\nExample 2.3.\nIt holds that a.b < a.b.c and a.b ≤ a.b. Also [] < a. It does not hold that a.a ≤ a.\n⋄\nDefinition 2.4.\nA set of names N is prefix-free if for all n, n′ ∈ N, n is not a strict prefix of n′. A\nnamespace is a finite, prefix-free set of names. Let Namespace refer to the set of all\nnamespaces.\n△\nExample 2.5.\nThe set of names {a, b} is a namespace and so is {a.a, a.b}. Since a < a.b, the set of\nnames {a, a.b} is not prefix-free and hence not a namespace.\n⋄\nSets of names are equivalent to prefix trees, called tries in computer science [46].\nExample 2.6.\nThe namespace {a.b.b, a.b.c, b.a, b.y, c} corresponds to the following trie:\na\nb\nc\nb\nb\na\ny\nc\n⋄\nNote that for a namespace N, the leaf nodes of its trie correspond to the names in N,\nwhile for a set of names, which is not prefix-free, at least one name corresponds to an\ninternal node. In the following, we think of namespaces both as sets of names and as\ntries.\nGiven several namespaces, we could take their union as sets. However, this runs the\nrisk of name conflicts, as it is possible for a given name in the union to have come from\neither of the original sets. It is for this reason that we introduce the concept of a named\nsum, which can be thought of as a practical implementation of disjoint union.\nDefinition 2.7.\nGiven a namespace N, and a function f : N → Namespace, the named sum of f is\nX\nf =\nn\nn ∗ a | n ∈ N, a ∈ f(n)\no\n.\n△\n10\nWe also sometimes write expressions like P [a 7→ I1, b 7→ I2], which refers to the\nnamed sum of the anonymous function defined by\nx 7→\n\nI1\nif x = a\nI2\nif x = b .\nExample 2.8.\nGiven N = {q, p.1, p.2}, we have\nX\n[l 7→ N, s.t 7→ N] = \bl.q, l.p.1, l.p.2, s.t.q, s.t.p.1, s.t.p.2\t .\n⋄\nProposition 2.9.\nGiven a namespace N and a function f : N → Namespace, the named sum P f is again\na namespace, that is to say it is prefix-free.\n△\nProof. The trie P f is simply the trie N with, for each leaf node n ∈ N, the trie f(n)\ngrafted on top.\nNamespaces and named sums provide a simple and effective formalism for working\nwith large hierarchically-structured systems.\n2.2. Packages\nAn interface has a namespace, where we interpret each name as referring to a port.\nHowever, this is not the only ingredient to an interface, as each port has two associated\nattributes. This motivates the definition of packages:\nDefinition 2.10.\nGiven a set A, we define\nPkg(A) =\nn\n(N, τ) | N ∈ Namespace, τ: N → A\no\n.\nAn element (N, τ) ∈ Pkg(A) is called a package of elements of A. We also just write\nτ ∈ Pkg(A) with N = dom(τ).\n△\nThe name ‘package’ is drawn from software engineering; one might consider a\nsoftware package to be a ‘package of types and procedures’.\nA package (N, τ) ∈ Pkg(A) can be seen as a trie N with an element τ(n) ∈ A\nassociated to each leaf node n ∈ N. Hence, the concept of named sum carries over from\nNamespace to Pkg(A), for a fixed set A. Named sum can then be seen as a flattening\noperation, analogous to flattening a list of lists. Specifically, for the set of all lists of\nelements of A\nList(A) = \b(n, f) | n ∈ N, f : {1, . . . , n} → A\t ,\nflattening is a map List(List(A)) → List(A), which for instance sends [[1, 2], [3, 4]]\nto [1, 2, 3, 4]. Similarly, named sum is a map Pkg(Pkg(A)) to Pkg(A). An input to\nthis is a trie N, which has associated to each leaf node n ∈ N another trie Nn, whose\nleaves carry elements of A. The named sum operation then simply grafts onto each node\nn ∈ N its associated trie Nn, carrying along the elements of A at the leaves. In terms of\ncategory theory, the flattening operation makes List and Pkg examples of monads.\n11\n2.3. Bundle of quantities\nThe first attribute associated to any port represents the physical quantity that can be\nexchanged via the port, e.g. entropy or momentum, along with a state space in which\nvalues of the quantity live. For instance a momentum variable can take values in R if\nmotion along a single axis is considered or it can take values in the vector space se∗(3)\nif rigid body motions in 3-dimensional Euclidian space are considered, etc.\nDefinition 2.11.\nLet S be a finite set of state spaces (i.e. smooth manifolds) and for each space X ∈ S, let\nQX be a finite set of physical quantities taking values in X. Further, let Q be the disjoint\nunion of all quantities, i.e.\nQ =\nG\nX∈S\nQX .\nThis forms a bundle of quantities (in the category of finite sets), whose projection\nspace : Q ↠ S\nreturns the underlying space of a quantity.\n△\nExample 2.12.\nThe bundle of quantities given by\nS = {R, SE(3), se∗(3)}\nQR = {displacement, momentum, entropy, volume}\nQSE(3) = {pose}\nQse∗(3) = {momentum},\nwould be sufficient for some spatially-lumped models from mechanics and thermo-\ndynamics. A port with associated quantity q = (R, entropy) ∈ Q can exchange entropy\nand its associated state space is space(q) = R ∈ S.\n⋄\nTo distinguish reversible and irreversible dynamics later on in Sections 6.3 and 6.4,\nwe make use of the concept of parity, see [47, 20] for details.\nDefinition 2.13.\nLet the parity of each quantity with respect to time-reversal transformation be given by\na function P : Q → {−1, +1}.\n△\nExample 2.14.\nFor the bundle of quantities from Example 2.12, we have\nP(R, displacement) = +1\nP(R, momentum) = −1\nP(R, entropy) = +1\nP(R, volume) = +1\nbecause displacement, entropy, and volume do not change instantaneously when a\nrecording is suddenly played backwards (positive parity), whereas momentum changes\nits sign (negative parity).\n⋄\nA comprehensive collection of physical quantities with their associated parities\nwould be a built-in feature of a software implementation.\n12\n2.4. Interfaces as packages\nEach port has two attributes, namely the already discussed quantity and further a\nBoolean attribute that indicates whether the port is a power port or a state port. Only\npower ports allow for exchange of energy associated with the attributed quantity. A\nstate port is required whenever the behavior of a system depends on the state of another\nsystem, although no energy is exchanged between the two.\nDefinition 2.15.\nAn interface is a package of elements of Q × {p, s}, i.e. let\nInterface = Pkg\u0000Q × {p, s}\u0001 .\n△\nExample 2.16.\nLet I = (N, τ) be an interface with namespace N = {p1, p2, q} and attributes given\nby τ(p1) = τ(p2) = ((R, momentum), p) and τ(q) = ((R, displacement), s). Ports p1\nand p2 are power ports that can exchange kinetic energy, along with information about\nthe current momentum. Port q is a state port that can only exchange information about\nthe current displacement.\n⋄\nWe note that the named sum of interfaces is a function Pkg(Interface) → Interface.\n2.5. Bundles of port variables\nA state port has one port variable called state. A power port has two further port\nvariables called flow and effort. Given an interface, the port variables of all its ports\ncombined together take values in a vector bundle, called the bundle of port variables\nassociated to the interface.\nDefinition 2.17.\nLet I = (N, τ) be an interface and let p ∈ I be a port, i.e. p ∈ N.\nThe state space associated to port p is\nXp = (space ◦ pr1 ◦ τ)(p) ,\nwhere pr1 projects onto the first attribute, i.e. the quantity.\nThe state space associated to interface I is the Cartesian product\nXI =\nY\np ∈ I\nXp .\n△\nExample 2.18.\nLet Igas = (Ngas, τgas) be an interface with namespace Ngas = {s, v} and attributes given\nby τgas(s) = ((R, entropy), p), τgas(v) = ((R, volume), p). Then, its associated state\nspace is XIgas = Xs × Xv = R × R. Let Imass = (Nmass, τmass) be another interface with\nNmass = {p} and τmass(p) = ((R, momentum), p). Then, the named sum\nI = (N, τ) =\nX\n[gas 7→ Igas, mass 7→ Imass]\n13\nhas the namespace N = {gas.s, gas.v, mass.p} with attributes given by τ(gas.s) =\n((R, entropy), p), τ(gas.v) = ((R, volume), p), τ(mass.p)) = ((R, momentum), p).\nWe note that\nXI = XIgas × XImass .\n⋄\nGiven any interface I, each port p ∈ I has an associated state variable p.x ∈ Xp. If p\nis a power port, it additionally has a flow variable p.f and an effort variable p.e. All\nport variables implicitly depend on time. As detailed in Section 6.1, the flow variable\nis the instantaneous rate of change of the state variable and the effort variable is the\ndifferential of a function of the state variable. Hence, we have (p.x, p.f, p.e) ∈ TXp,\nwhere TXp = TXp ⊕ T∗Xp denotes the direct sum (or Whitney sum) of the respective\ntangent and cotangent bundles (see e.g. [48]). The flow and effort variables are called\npower variables because their duality pairing ⟨p.e | p.f⟩ ∈ R yields the instantaneous\npower that is exchanged through port p.\nNow we can define the bundle of port variables associated to an interface:\nDefinition 2.19.\nLet I be an interface. Based on the Boolean attribute of its ports, we can write its\nassociated state space as the Cartesian product XI \u001b XI,p × XI,s, where XI,p is the state\nspace of all power ports and XI,s is the state space of all state ports. Accordingly,\nwe let x = (xp, xs) ∈ XI,p × XI,s denote all state variables and we let (f, e) ∈ TxpXI,p\ndenote all flow and effort variables. The bundle of port variables prI : PI ↠ XI\nassociated to interface I is defined as the pullback bundle of TXI,p along the projection\nprp : XI,p × XI,s ↠ XI,p. Hence, PI \u001b TXI,p × XI,s.\nTXI,p\n∋ (xp, f, e)\nPI\n∋ (x, f, e)\nXI,p\n∋ xp\nXI\n∋ x\nXI,s\n∋ xs\nprp\nprs\nprI\n⌟\n△\nExample 2.20.\nConsider again the interface from Example 2.16. Its bundle of port variables PI ↠ XI\nhas total space (or port space)\nPI = TR × TR × R ∋ \u0000(p1.x, p1.f, p1.e), (p2.x, p2.f, p2.e), q.x\u0001\nand base space (or state space)\nXI = R × R × R ∋ (p1.x, p2.x, q.x) .\n⋄\n3. Interconnection patterns\nAs introduced in Section 1.2, an interconnection pattern expresses how a composite\nsystem can be formed from a finite number of subsystems. The syntax defines the\nentirety of such expressions and their composition, i.e. their hierarchical nesting.\n14\n3.1. Interconnection patterns\nspring\npkc\nmass\ndamping\nenv\np\np\nq\nq\np\ns\ns\np\nisothermal_osc\nFigure 4: Interconnection pattern of an isothermal oscillator model. The box pkc represents the coupling of\nthe potential energy domain represented by the junction on its left and the kinetic energy domain represented\nby the junction on its right. The box env represents the isothermal environment which absorbs the heat that is\ngenerated by the damping. The port p of the outer box exposes the kinetic energy domain, allowing for an\nexternal forcing of the oscillator model.\nFigure 4 shows an interconnection pattern. The mathematical content of such a\ndiagram is captured by the following definition:\nDefinition 3.1.\nAn interconnection pattern (β, I, J) is defined by the following data:\n1. A package of interfaces β ∈ Pkg(Interface). Names in dom(β) refer to inner\nboxes, P β is called inner interface and names in dom(P β) refer to inner ports.\n2. An interface I called outer interface with ports called outer ports.\n3. A partition J of the combined interface P = P \u0002inner 7→ P β, outer 7→ I\u0003 such\nthat each subset or junction j ∈ J contains\n• at least one inner port,\n• at most one outer port,\n• and all ports have the same associated quantity.\n△\nAlthough the names of inner ports and outer ports are distinguished by a prefix,\nusually the namespaces of P β and I are already disjoint. We then abuse notation and\nsimply write for instance p rather than outer.p.\nWe graphically depict interconnection patterns as follows. Each element b ∈ dom(β)\nis the name of an inner box, which we draw as a circle. The ports of its interface β(b)\nare drawn as lines emanating from the box. The ports of the outer interface I are drawn\nas lines to the surrounding outer box. Each subset j ∈ J corresponds to a junction\ndrawn as a black dot. The elements of j ⊆ P are precisely the connected ports. To avoid\nconfusion, we recall that the identifier isothermal osc written on the top left of the\nouter box refers to the entire pattern (akin to a function name), rather than just to the\nouter box (which similar to the return value of a function does not need a name).\nThe pattern from Figure 4 is redrawn in Figure 5, firstly to emphasize that the\ncolor of the inner boxes is merely an annotation hinting at the nature of the considered\nsubsystems and secondly to introduce an abbreviated way of writing port names.\n15\nspring\npkc\nmass\ndamping\nenv\np\nq\ns\nisothermal_osc\nFigure 5: Interconnection pattern of an isothermal oscillator model. Whenever all ports connected to a certain\njunction have the same name we write the name only once at the junction.\nExample 3.2.\nFor the pattern (β, I, J) depicted in Figure 5, the namespace of inner boxes is\ndom(β) = {spring, pkc, mass, damping, env} .\nThe function β : dom(β) → Interface is given by\nspring 7→ ({q}, τspring)\npkc 7→ ({q, p}, τpkc)\nmass 7→ ({p}, τmass)\ndamping 7→ ({p, s}, τdamping)\nenv 7→ ({s}, τenv)\nwith τspring(q) = ((R, displacement), p), etc. Hence, the namespace of the inner\ninterface P β is\ndom(P β) = {spring.q, pkc.q, pkc.p, mass.p, damping.p, damping.s, env.s} .\nThe namespace of the outer interface I is {p}. The partition J is given by\n\b{spring.q, pkc.q}, {mass.p, pkc.p, damping.p, p}, {env.s, damping.s}\t .\n⋄\nWe may also denote an interconnection pattern using the condensed notation\nP [I1 7→ I1, . . . , In 7→ In]\nJ\nI.\nIn this we implicitly let dom(β) = {I1, . . . , In} and β(Ii) = Ii. The left arrow is a\nsurjection because each junction has at least one connected inner port and the right\narrow is an injection because each junction has at most one connected outer port.\nInterconnection patterns are a special case of undirected wiring diagrams [37], which\ndo not have the injectivity and surjectivity conditions.\nAs shown in Figure 1, interconnection patterns may have another feature that is\nnot formalized by Definition 3.1, namely port combinators for combining ports into\n16\nmultiports. Although namespaces seem to provide an adequate basis to formalize\nmultiports and port combinators, we defer this to later work. At this point, we simply\nregard them as ad-hoc syntactic sugar for expressing parallel connections in a tidy and\nefficient manner.\n3.2. Composition of interconnection patterns\nWhenever the outer interface of one pattern and the interface corresponding to an\ninner box of another pattern are equivalent up to renaming of the ports, the former\npattern can be substituted into the latter, with no further data required. This is called\ncomposition. Having a compositional syntax facilitates dealing with complex systems,\nas it allows to encapsulate subsystems, which can be easily reused and replaced, as long\nas interfaces match. As an example, the isothermal oscillator model can be refined into\na nonisothermal oscillator model by substituting a more detailed damper model.\nmf\ntc\nht\np\ns\ns\ns\ns₁\ns₂\nnonisothermal_damper\nFigure 6: Interconnection pattern of a nonisothermal damper model. The box mf represents a mechanical\nfriction model connected to the kinetic energy domain represented by the outer port p. The box tc represents\na thermal capacity, which can store the heat generated by friction. The box ht represents a heat transfer\nmodel, which allows the thermal capacity to reach equilibrium with the thermal energy domain represented by\nthe outer port s.\nSubstituting the pattern in Figure 6 into the pattern in Figure 5, yields the pattern\nin Figure 7. Graphically, the former pattern is inserted into the inner box called damping\nof the latter pattern. In this step, the named sum for interfaces is used. Then, the common\ninterface is deleted and for each of its ports, the two assigned junctions are identified.\nCategory theory provides a language to talk about composition and it includes well-\nbehavedness conditions, which ensure that composition works in the way we expect,\njust as we need not worry about the difference between (1 + 2) + 1 and 1 + (2 + 1). In a\nfollowing paper, we will formalize this using the language of operads.\n4. Semantics of interconnection patterns\nIn this section, we discuss how to interpret an interconnection pattern as imposing a\nrelation between the port variables of its inner and outer interface. We do this in two\n17\nspring\npkc\nmass\ndamping.\nmf\ndamping.\ntc\ndamping.\ntc\nenv\np\nq\ns\ns\ns\ns₁\ns₂\nnonisothermal_osc\nFigure 7: Interconnection pattern of a nonisothermal oscillator model.\nparts. In the first part, we talk about the relation as a collection of equations and discuss\nits physical interpretation. In the second part, we reify it as a geometric object, namely\nas a relation between bundles of port variables.\n4.1. Interconnection patterns as equations\nInformally, the semantics of an interconnection pattern (β, I, J) can be seen as a\ncollection of equations. Specifically, for each junction j ∈ J, we have the following:\nLet jp ⊆ j be the subset of connected power ports.\n• Equality of state. For all ports p, p′ ∈ j,\np.x = p′.x\n• Equality of effort. For all power ports p, p′ ∈ jp,\np.e = p′.e\n• Equality of net flow.\nX\np ∈ jp∩P β\np.f =\nX\np ∈ jp∩I\np.f\nAs detailed in Section 7, combining these equations with equations that determine\nthe semantics of each of the subsystems filling the inner boxes yields a collection of\nequations that determines the semantics of the resulting composite system.\n18\nSince all ports connected to a junction have the same quantity, their associated state\nvariables take values in the same space, making equality of state a well-typed equation.\nAs a consequence of equality of state, all effort variables take values in the same fiber of\nthe same cotangent bundle, making equality of effort also well-typed. Similarly, all flow\nvariables take values in the same fiber of the same tangent bundle, making equality of\nnet flow well-typed.\nAlso note that in the equality of net flow, the inner ports are on the left hand side\nand the outer ports are on the right hand side. As a consequence, at every junction j ∈ J\nthe following power balance equation is satisfied:\nX\np ∈ jp∩P β\n⟨p.e | p.f⟩ =\nX\np ∈ jp∩I\n⟨p.e | p.f⟩\nSumming over all junctions on both sides, we get that the net power supplied to all\nsubsystems is equal to the net power supplied to the composite system. Taking into\naccount also the choice of a sign made in Sections 6.1 and 6.2, we see that this agrees\nwith the sign convention used in thermodynamics, stating that power supplied to any\nsystem, be it a subsystem or the composite system, is counted with a positive sign.\nJunctions correspond to energy domains. Hence, an outer port exposes an energy\ndomain of the respective composite system. Since this interpretation also applies to the\nprimitive systems discussed in Section 6, we can say that ports also represent energy\ndomains and whenever two ports are connected to the same junction the energy domains\nare identified. In other words, interconnection means that systems share common energy\ndomains. The state of a shared energy domain is given by the shared state variable,\naccording to the equality of state. The connected systems may exchange the respective\nphysical quantity according to the equality of net flow. Moreover, such an exchange also\nimplies an exchange of energy, according to the equality of effort.\nExample 4.1.\nLet’s again consider the pattern in Figure 7. At the junction representing the kinetic\nenergy domain, the momentum variable (state) is shared and forces (flows) balance at\nequal velocity (effort):\npkc.p.x = mf.p.x = mass.p.x = p.x\npkc.p.f + mf.p.f + mass.p.f = p.f\npkc.p.e = mf.p.e = mass.p.e = p.e\n⋄\nTable 1 summarizes the physical interpretation of junctions representing a number\nof different energy domains.\nWe can now briefly reconsider the surjectivity and injectivity conditions which\ndistinguish interconnection patterns form undirected wiring diagrams. The surjectivity\ncondition says that each junction must have at least one connected inner port. In\nother words, an energy domain of the composite system must belong to at least one\nof its subsystems. Of course, an energy domain that is not part of the system cannot\nbe exposed. The injectivity condition says that each junction may have at most one\nconnected outer port. In other words, an energy domain can be exposed at most once.\nExposing an energy domain twice and identifying it again at a higher level of nesting by\nconnecting the two respective ports would lead to ill-defined flow variables.\n19\nenergy domain\nstate variable\nflows balance at equal efforts\nkinetic\nmomentum\nforces balance at equal velocity\nmagnetic\nflux linkage\nvoltages balance at equal current\npotential\ndisplacement\nvelocities balance at equal force\nhydraulic\nvolume\nvolume rates balance at equal pressure\nelectric\ncharge\ncurrents balance at equal voltage\nthermal\nentropy\nentropy rates balance at equal temperature\nTable 1: Physical interpretation of junctions as energy domains.\n4.2. Interconnection patterns as relations\nRecall that a relation R : A ↛ B between two sets A and B is given by a subset of\ntheir Cartesian product, i.e. R ⊆ A × B. Note that we are slightly abusing notation by\nreusing the symbol, here R, for the relation and the subobject by which it is defined.\nThe arrow symbol ↛ should suggest that relations have no inherent direction, however\nthe formal direction is relevant to denote their composition and hence to think about\nrelations as forming a category.\nSimilarly to this prototypical example, the relation assigned to an interconnection\npattern is given by a subbundle of the Cartesian product of the two bundles of port\nvariables associated to the inner and the outer interface.\nDefinition 4.2.\nLet P = (β, I, J) be an interconnection pattern and let Iin = P β denote its inner\ninterface. Further, let PIin ↠ XIin be the bundle of port variables associated to the\ninner interface and let PI ↠ XI be the bundle of port variables associated to the outer\ninterface. Based on the partition J, let PP ⊂ PIin × PI be the subspace where equality of\nstate, equality of effort, and equality of net flow are satisfied. Similarly, let XP ⊂ XIi ×XI\nbe the subspace where equality of state is satisfied. Then, the semantics assigned to\ninterconnection pattern P is the relation PP : PIin ↛ PI between the port variables of\nthe inner interface and the port variables of the outer interface that is given by the vector\nsubbundle PP ↠ XP.\n△\nIt can be shown that this assignment of semantics is functorial, which means that\nit makes no difference whether one first composes some interconnection patterns and\nthen asks for the relation assigned to the composite or one first asks for the relations\nassigned to the original patterns and then composes these relations.\nExample 4.3.\nConsider the interconnection pattern P = (β, I, J) depicted in Figure 8 with names of\ninner boxes given by dom(β) = {stator, rotor} and interfaces given by\nβ(stator) = ({q, bs}, τs)\nβ(rotor) = ({q, p, bs}, τr)\nI = ({q, p}, τ) ,\n20\nshunt_motor\nstator\nrotor\nbₛ\nq\np\nFigure 8: Interconnection pattern of a DC shunt motor model. The stator and rotor are connected to a common\nelectric energy domain that is exposed via the outer port q. The kinetic energy domain of the rotor is exposed\nvia the outer port p. The conversion between electric and kinetic energy in the rotor depends on the magnetic\nenergy domain of the stator, which is represented by the junction with connected state ports named bk. The\nfull model is discussed in Section 9.\nwhere\nτs(q) = τr(q) = τ(q) = ((R, charge), p)\nτs(bs) = τr(bs) = ((R, flux linkage), s)\nτr(p) = τ(p) = ((R, angular momentum), p) .\nFurthermore, the interconnection is determined by\nJ = \b{stator.q, rotor.q, q}, {stator.bs, rotor.bs}, {rotor.p, p}\t .\nThe port space of the inner interface Iin = P β is\nPIin = TR × R × TR × TR × R\n∋ \u0000(stator.q.x, stator.q.f, stator.q.e), stator.bs.x,\n(rotor.q.x, rotor.q.f, rotor.q.e),\n(rotor.p.x, rotor.p.f, rotor.p.e), rotor.bs.x\u0001\nand the port space of the outer interface I is\nPI = TR × TR ∋ \u0000(q.x, q.f, q.e), (p.x, p.f, p.e)\u0001 .\n21\nFinally, the subspace PP ⊂ PIin × PI defining the relation is\nPP = \b\u0000(stator.q.x, stator.q.f, stator.q.e) , stator.bs.x ,\n(rotor.q.x, rotor.q.f, rotor.q.e) ,\n(rotor.p.x, rotor.p.f, rotor.p.e) , rotor.bs.x ,\n(q.x, q.f, q.e) , (p.x, p.f, p.e)\u0001 ∈ PIi × PI |\nstator.q.x = rotor.q.x = q.x ,\nstator.q.e = rotor.q.e = q.e ,\nstator.q.f + rotor.q.f = q.f ,\nstator.bs.x = rotor.bs.x ,\nrotor.p.x = p.x ,\nrotor.p.e = p.e ,\nrotor.p.f = p.f \t .\n⋄\n5. Exergy\nEvery system is ultimately determined by a power-preserving interconnection of\nprimitive subsystems, also called components, which represent elementary physical\nbehaviors such as storage and reversible as well as irreversible exchange of energy.\nTo achieve a thermodynamically consistent combination of reversible and irreversible\ndynamics, components are defined with respect to a fixed exergy reference environment\nthat is discussed in this section.\n5.1. Intuition\nAs briefly discussed in Section 1.4, thermodynamic models do not have all their\nphysically-relevant degrees of freedom determined by their state variables, which leads\nto irreversibility. According to the first and second law of thermodynamics, internal\nenergy, which is given by an imprecise phenomenological description, cannot be fully\nconverted into mechanical or electromagnetic energy, which is precise, in the sense that\nthe relevant degrees of freedom are determined by the state variables.\nThe irreversible degradation of ‘mechanically precise’ forms of energy into ‘thermo-\ndynamically imprecise’ forms of energy can be quantified using the concept of exergy.\nA hypothetical conversion device, whose mode of operation is only restricted by the\nfirst and second law of thermodynamics is used to determine how much mechanical\n(or electromagnetic) energy can be extracted from a system before it reaches thermo-\ndynamic equilibrium with a reference environment, whose intensive variables, such as\ntemperature and pressure, are constant (in time and space), see Figure 9.\nCrucially, the ideal conversion device is not restricted to interacting with the system\nthrough its interface. Instead, the device operates in a counterfactual where all energy\ndomains of both the system and the environment can be accessed. This means that\nthe exergy content of a (hierarchically flattened) composite system can be obtained by\nsumming the exergy stored in each of its storage components. So, in particular, the\n22\ncombined system\nreference environment\nsystem of interest\nideal \nconversion \ndevice\nwork\nFigure 9: To assess the exergy content of a system, it is combined with a reference environment. The exergy\ncontent is then defined as the maximum amount of work that can be extracted from the combined system via a\nhypothetical conversion device that operates completely reversibly.\nexergy content of a system does not depend on how its subsystems are interconnected.\nThe exergy content of a component storing internal energy is assessed based on an\nideal conversion device and the reference environment, while the exergy content of a\ncomponent storing only mechanical or electromagnetic forms of energy is equal to its\nenergy content.\nAs also remark that a similar concept of available energy could be defined intrinsi-\ncally, meaning without relying on a reference environment. The reversible conversion\ndevice would then interact only with the system of interest until it reaches equilibrium\nwith itself. However, the use of a reference environment with fixed intensive quantities\nhas the important advantage that the exergy content of a system is given explicitly by its\nexergy storage function, which follows systematically from its energy storage function\nand the definition of the reference environment, as detailed in Section 6.1. In contrast,\nthe intrinsic concept in general would lead to an optimization problem without a simple\nclosed-form solution.\nMore information and references about exergy, its history, and its links to port-\nHamiltonian as well as GENERIC systems can be found in [20].\n5.2. Reference environment\nDefinition 5.1.\nA reference environment (IR, λR) is given by an interface IR = (NR, τR) such that each\nport p ∈ IR is a power port with an unique extensive quantity in QR and an associated\nvalue λR(p) ∈ R∗ of the energy-conjugate intensive quantity.\n△\nUniqueness of quantities, i.e. injectivity of τR : NR → QR × {p}, is required to\ndetermine the exergy storage function of a system from its energy storage function.\nRegarding the physical interpretation, each port corresponds to an energy domain that is\npresent in the environment. Allowing multiple energy domains of the same kind would\nconflict with the environment always being in equilibrium with itself.\nExample 5.2.\nThe minimal definition of a reference environment represents an isothermal heat bath.\nThis amounts to an interface with a single entropy port and an associated reference\n23\ntemperature, henceforth denoted by θ0:\nNR = {s}\nτR(s) = ((R, entropy), p)\nλR(s) = θ0 = 298.15 K .\nTo determine the exergy content of pressurized fluids with respect to an isobaric atmo-\nsphere, the definition of the environment can be extended to NR = {s, v} with\nτR(v) = ((R, volume), p)\nλR(v) = −π0 = −1013.25 hPa .\nThe minus sign in front of the reference pressure π0 stems from the fact that more\nvolume means less energy. To model for instance a mass diffusion process, a port m\nrepresenting the mass of a chemical species with a fixed chemical potential µ0 should\nbe included, i.e. let NR = {s, v, m} with\nτR(m) = ((R, mass), p)\nλR(m) = µ0 .\n⋄\nA software implementation should include a comprehensive definition of a reference\nenvironment and allow the user to redefine the values of the intensive quantities.\n6. Primitive systems\nThe lowest level of any hierarchical model specification is defined by primitive\nsystems, also called components. There are four classes of components:\n• Storage components represent energy storage.\n• Reversible components represent reversible energy exchange\n(or a transformation between different forms of describing an energy domain).\n• Irreversible components represent irreversible energy exchange.\n• Environment components are used to model energy exchange with\nthe reference environment.\nComponents are in general defined with respect to a reference environment (IR, λR).\nFurther, every component has an interface I = (N, τ) with port variables (x, f, e) ∈ PI.\nTo define the exergy storage function of storage components and to state fundamental\nthermodynamic properties of reversible as well as irreversible components, we define\nthe following notation: For any port p ∈ I, let\nλ(p) =\n\nλR(pR)\n∃ pR ∈ IR : τR(pR) = τ(p)\n0 ∈ T∗Xp\nelse.\nFor instance, if p represents a thermal energy domain then λ(p) = θ0, whereas if p\nrepresents a kinetic energy domain then λ(p) = 0, since the environment does not\n24\nhave a kinetic energy domain. This can also be applied to the entire interface. E.g. for\nN = {p1, . . . , pn}, let\nλ(I) = \u0000λ(p1), . . . , λ(pn)\u0001 .\nWe also define a similar notation that references a specific environment port: For any\nport p ∈ I and pR ∈ IR, let\nλ(p, pR) =\n\nλR(pR)\nτR(pR) = τ(p)\n0 ∈ T∗Xp\nelse.\nAgain, given e.g. N = {p1, . . . , pn}, let\nλ(I, pR) = \u0000λ(p1, pR), . . . , λ(pn, pR)\u0001 .\n6.1. Storage components\nStorage components are primitive systems representing energy storage. Examples\ninclude elastic springs, movable masses, capacitors, inductors, and thermal capacities.\nDefinition 6.1.\nA storage component (I, E) is defined by an interface I containing only power ports\nand an energy storage function E : XI → R.\n△\nThe function E simply yields the stored energy for any state x ∈ XI. Based on the\nreference environment IR, the exergy content is determined as follows.\nDefinition 6.2.\nLet (I, E) be a storage component. Its exergy storage function H : XI → R is given by\nH(x) = E(x) −\nX\np ∈ I\nX\npR ∈ IR\nτR(pR) = τ(p)\n⟨λR(pR) | p.x⟩ .\n△\nNote that in the natural pairing, R is implicitly identified with its tangent space,\ni.e. R \u001b Tp.xR. While the exergy content of a system is supposed to be zero when it\nreaches equilibrium with itself and the environment, the component-wise definition for\nEPHS may yield another minimum value for the total exergy. In this case, a constant\nmay be added to remedy this. Regarding the dynamics of the system, this is however\nirrelevant, as it depends only on the differential dH. Specifically, the effort variables are\ngiven by the differential of the exergy function evaluated at the current state x ∈ XI:\n∀ p ∈ I : p.e =\n∂H\n∂(p.x)\n\f\f\f\f\f\nx\nIn case the constant offset should matter for thermodynamic analysis, it can be added to\nthe total exergy function once the equilibrium state of the system under study has been\ndetermined. Finally, the trajectory of the state variables is obtained by integrating the\nflow variables:\n∀ p ∈ I : d(p.x)\ndt\n= p.f\n25\nExample 6.3.\nConsider a storage component (Igas, Egas) representing a gas-filled compartment whose\nentropy and volume can change. Its interface Igas is defined as in Example 2.18 and we\nassume knowledge of its energy storage function Egas : R × R → R. Writing x = (s, v),\nthe exergy storage function is then given by\nHgas(s, v) = Egas(s, v) − θ0 s + π0 v .\nWith the temperature being defined as θ = ∂Egas\n∂s\nand the negative pressure being defined\nas −π = ∂Egas\n∂v , the effort variables are given by\ns.e = θ − θ0\nv.e = −(π − π0) .\nSince the entropy rate ˙s = s.f is related to the heat flow rate Φ via ˙s =\n1\nθ Φ, the\nexergetic power at the entropy port is ⟨s.e | s.f⟩ = θ−θ0\nθ\nΦ = ηCarnot Φ, where ηCarnot is\nthe efficiency of an ideal heat engine operating between a hot source with temperature θ\nand a cold sink with temperature θ0. Considering a piston with the pressurized gas on\none side and the atmosphere on the other, ⟨v.e | v.f⟩ = −(π − π0) ˙v is the power that can\nbe extracted from the pressurized gas when its volume grows at rate ˙v.\n⋄\nNext, we define the semantics of a storage component with interface I in terms of\na relation S : TXI ↛ PI. This is used in Section 7, where we define the semantics\nof a composite system in terms of the semantics of its primitive subsystems and the\nsemantics of its (hierarchy of nested) interconnection pattern(s).\nDefinition 6.4.\nThe semantics assigned to storage component (I, E) is the relation S : TXI ↛ PI\nthat is given by the subbundle\nS = \b\u0000(˜x, ˜f), (x, f, e)\u0001 ∈ TXI × PI | ˜x = x, ˜f = f, e = dH(x)\t ,\nwhere H is induced from E according to Definition 6.2.\n△\n6.2. Environment components\nWhile the primary role of the reference environment is to enable the thermody-\nnamically consistent combination of reversible and irreversible dynamics, it may also\nbe represented by a component to model energy exchange with the environment. For\ninstance, an environment component can represent an isothermal heat bath, which may\nabsorb heat generated by irreversible components, or an isobaric atmosphere, which\nmay exchange pressure-volume work with other components.\nDefinition 6.5.\nAn environment component is defined by a subinterface I ⊆ IR containing the exposed\nenergy domains of the reference environment.\n△\n26\nThe state variables keep track of the exchanged entropy, volume, etc. As for storage\ncomponents, their rate of change is given by the flow variables:\n∀ p ∈ I : d(p.x)\ndt\n= p.f\nSince the exergy content of the environment is zero by definition, the effort variables\nare also zero:\n∀ p ∈ I : p.e = 0\nConsequently, the semantics of an environment component is assigned as follows:\nDefinition 6.6.\nThe semantics assigned to environment component I ⊆ IR is the relation E : TXI ↛\nPI that is given by the subbundle\nE = \b\u0000(˜x, ˜f), (x, f, e)\u0001 ∈ TXI × PI | ˜x = x, ˜f = f, e = 0\t .\n△\n6.3. Reversible components\nIn a generalized sense, reversible components represent gyrators, transformers,\nand/or kinematic constraints. Generalized gyrators describe the reversible coupling of\ndifferent kinds of energy domains, such as a coupling of kinetic and potential energy\ndomains in mechanics or an electro-magnetic coupling. Examples where one domain\nreversibly interacts with itself are gyroscopic forces in rigid body dynamics and self-\nadvection of kinetic energy in fluid dynamics. The Lorentz force is another example\nwhere a kinetic energy domain interacts with itself in a way that depends on the state\nof a magnetic energy domain. Generalized transformers couple energy domains of\nthe same kind. They may for instance represent mechanical levers or ideal electrical\ntransformers. Frame transformations in multibody systems present an example where a\ntransformation between different representations of the same energy domain is realized.\nExamples of kinematic constraints include joint constraints in multibody dynamics and\nthe incompressibility constraint in fluid dynamics. Further, the parallel connection of\ncapacitors, the series connection of inductors or springs, as well as rigid links between\npoint masses are described by constraints.\nThe geometric structure behind reversible components is called Dirac structure.\nFor our purposes, an (almost) Dirac structure D is a power-preserving, locally linear\nrelation of port variables. More precisely, we could define D ⊂ PI as a maximally\nisotropic vector subbundle of the bundle of port variables PI ↠ XI, see [1, 49, 13].\nHowever, to state fundamental properties of reversible components, we give a more\npractical definition of Dirac structures in terms of a particular representation, which\nmay be called constrained hybrid input-output representation (cf. [13]):\nDefinition 6.7.\nLet I be an interface and let XI,p \u001b X1 × X2 ∋ xp = (x1, x2) be a factorization of the\nstate space of its power ports with flow and effort variables correspondingly denoted\n27\nby f = ( f1, f2) and e = (e1, e2). A Dirac structure D ⊂ PI admits the following\nrepresentation:\nD =\n(x, f, e) ∈ PI | ∃ λc ∈ V∗ :\n\nf1\ne2\n0\n =\n\nL(x)\n−g(x)\nC∗(x)\ng∗(x)\n0\n0\n−C(x)\n0\n0\n\n\ne1\nf2\nλc\n\n\nHere, L : T∗X1 → TX1, g : TX2 → TX1, its linear dual g∗ : T∗X1 → T∗X2,\nC : T∗X1 → XI × V, and its dual C∗ : XI × V∗ → TX1 are vector bundle maps over\nthe identity on XI. Further, V is a vector space and L(x) is skew-symmetric for all\nx ∈ XI.\n△\nThe maps L, g and C define a gyrator, a transformer and a constraint, respectively.\nThe constraint is enforced via the Lagrange multiplier λc. Due to the skew-symmetry of\nthe matrix in Definition 6.7, exergetic power is conserved, i.e.\n⟨e1 | f1⟩ + ⟨e2 | f2⟩ = 0 .\nExample 6.8.\nLet the interface Ihk = (Nhk, τhk) be given by\nNhk = {v1, v2, p}\nτhk(v1) = τhk(v2) = ((R, volume), p)\nτhk(p) = ((R, momentum), p)\nand let a ∈ R be a constant surface area of a piston. Then, the following equation defines\na Dirac structure Dhk ⊂ PIhk:\n\nv1.f\nv2.f\np.f\n =\n\n0\n0\na\n0\n0\n−a\n−a\na\n0\n\n\nv1.e\nv2.e\np.e\n\nThis describes a generalized gyrator that couples the two hydraulic energy domains at\nthe front and the back side of a piston with a kinetic energy domain corresponding to\nthe piston’s moving mass.\n⋄\nA reversible component is defined by a Dirac structure which satisfies two extra\nproperties ensuring thermodynamic consistency.\nDefinition 6.9.\nA reversible component (I, D) is given by an interface I and a Dirac structure D ⊂ PI\nsuch that all quantities of the reference environment are conserved and the time-reversal\ninvariance property holds. The first condition requires that\n∀ pR ∈ IR : ∀ x ∈ XI :\n\u0010\n0 = L(x) λ(I1, pR)\nand\n0 = g∗(x) λ(I1, pR)\n\u0011\n.\nThe time-reversal invariance property holds if ∀ x ∈ XI :\n(L(x))ij , 0 =⇒ −P(xi\n1) = P((L(x))i j) P(x j\n1)\n(g(x))ik , 0 =⇒\nP(xi\n1) = P((g(x))ik) P(xk\n2) .\n28\nHere, we use abstract index notation without implied summation. Indices i and j range\nover the power ports associated with X1 and k ranges over the power ports associated\nwith X2. The state variable is accordingly split as x = (xp, xs) = ((x1, x2), xs) and P\nyields the parity of the respective quantity with P(const.) = +1.\n△\nExample 6.10.\nThe reversible component (Ihk, Dhk), as already defined in Example 6.8, describes the\ncoupling between the kinetic energy domain of a piston with surface area a and the two\nhydraulic energy domains on either side of the piston. The first condition here ensures\nthat volume is conserved. This is satisfied since\n\n0\n0\n0\n =\n\n0\n0\na\n0\n0\n−a\n−a\na\n0\n\n\n−π0\n−π0\n0\n .\nThe time-reversal invariance property holds since\n−P((R, volume)) = P(a) P((R, momentum))\n−P((R, volume)) = P(−a) P((R, momentum)) .\nChecks for the other two non-zero entries of L must pass due to its skew-symmetry.\n⋄\nThe semantics of a reversible component is simply given by its Dirac structure\ninterpreted as a relation:\nDefinition 6.11.\nThe semantics assigned to reversible component (I, D) is the relation D : 1 ↛ PI\nthat is given by its Dirac structure D.\n△\nThe symbol 1 in 1 ↛ PI refers to the Cartesian unit for vector bundles, i.e. the\nvector bundle with a single point as its base space and the zero-dimensional vector space\nabove it.\n6.4. Irreversible components\nIrreversible components are phenomenological models of irreversible processes with\nlocal thermodynamic equilibrium. Examples include mechanical friction, fluid viscosity,\nelectrical conduction / resistance, thermal conduction, and mass diffusion. Such models\ncan be defined in terms of a function that maps thermodynamic forces, which drive\nthe relaxation process, to thermodynamic fluxes, which seek to restore equilibrium.\nBased on the assumption that the microscopic dynamics are reversible, Onsager found\nthat such maps must satisfy a symmetry property [6]. This motivates our definition of\nan Onsager structure:\nDefinition 6.12.\nLet I be an interface. An Onsager structure O ⊂ PI is a fiber subbundle that admits\nthe following representation:\nO =\n(\n(x, f, e) ∈ PI | f = 1\nθ0\nM(e) e\n)\n,\nwhere M is a smooth function that yields a symmetric non-negative definite linear\noperator M(e): T∗XI,p → TXI,p for all effort variables e ∈ T∗XI,p.\n△\n29\nIn contrast to a Dirac structure, an Onsager structure is neither power-preserving,\nnor is it a locally linear relation of the port variables, since destruction of exergy, or\nequivalently production of entropy, is described in general by a non-linear relation.\nHence, O ⊂ PI is not a vector subbundle of PI, but merely a fiber subbundle. The\nsymmetry of M(e) corresponds to Onsager’s reciprocal relations and its non-negative\ndefiniteness implies a non-negative exergy destruction rate.\nExample 6.13.\nLet the interface Imf = (Nmf, τmf) be given by\nNmf = {p, s}\nτmf(p) = ((R, momentum), p)\nτmf(s) = ((R, entropy), p)\nand let d ∈ R>0 be a friction coefficient. Then, the following defines an Onsager\nstructure Omf ⊂ PImf representing mechanical friction:\n\"p.f\ns.f\n#\n= 1\nθ0\nd\n\" θ\n−υ\n−υ\nυ2\nθ\n# \"p.e\ns.e\n#\nHere, υ = p.e is the velocity and θ = θ0 + s.e is the absolute temperature at which\nkinetic energy is dissipated into the thermal energy domain. The phenomenological\nparameter d could also be a function of the effort variables e, i.e. it could depend on\nthe velocity and the temperature, or theoretically also the base point x. The above can\nbe simplified to p.f = d υ and s.f = − 1\nθ d υ2. Hence, the environment temperature\nθ0 cancels out in the flow variables, which here are the friction force and the entropy\nproduction rate (with a minus sign since thermal energy is leaving the component).\n⋄\nAn irreversible component is defined by an Onsager structure which satisfies two\nextra properties ensuring thermodynamic consistency:\nDefinition 6.14.\nAn irreversible component (I, O) is given by an interface I and an Onsager structure\nO ⊂ PI such that energy and all quantities of the reference environment, except for\nentropy, are conserved and the time-reversal invariance property does strictly not hold.\nThe condition for conservation of energy requires that\n∀ e ∈ T∗XI,p : 0 = M(e) \u0000λ(I) + e\u0001 .\nThe condition that all quantities of the reference environment, except for entropy, are\nconserved requires that\n∀ pR ∈ IR :\n\u0010\nτR(pR) , ((R, entropy), p) =⇒ \u0000∀ e ∈ T∗XI,p : 0 = M(e) λ(I, pR)\u0001\u0011\n.\nThe time-reversal invariance property does strictly not hold if ∀ x ∈ XI :\n(M(x))ij , 0 =⇒ P(xi) = P((M(x))i j) P(x j) .\nHere, we use the same notation as in Definition 6.9 with indices i and j ranging over all\npower ports of I.\n△\n30\nExample 6.15.\nThe irreversible component (Imf, Omf), as already defined in Example 6.13, models\nmechanical friction. The condition for conservation of energy is satisfied since\n\"0\n0\n#\n= d\n\" θ\n−υ\n−υ\nυ2\nθ\n# \"υ\nθ\n#\n.\nThe condition that all quantities of the reference environment, except for entropy, are\nconserved is trivially satisfied. The time-reversal invariance property does strictly not\nhold since\nP((R, momentum)) = P(d) P(θ) P((R, momentum))\nP((R, momentum)) = P(d) P(−υ) P((R, entropy))\nP((R, entropy)) = P(d) P(−υ) P((R, momentum))\nP((R, entropy)) = P(d) (P(υ))2 / P(θ) P((R, entropy)) ,\nwhere we used that temperature has positive parity and velocity has negative parity.\n⋄\nExample 6.16.\nLet the interface Iht = (Nht, τht) be given by\nNht = {s1, s2}\nτht(s1) = τht(s2) = ((R, entropy), p) ,\nlet α ∈ R>0 be a heat transfer coefficient, and let the Onsager structure Oht ⊂ PIht be\ngiven by\n\"s1.f\ns2.f\n#\n= 1\nθ0\nα\n\nθ2\nθ1\n−1\n−1\nθ1\nθ2\n\n\"s1.e\ns2.e\n#\n,\nwhere θ1 = θ0 + s1.e and θ2 = θ0 + s2.e are the absolute temperatures of the two thermal\ndomains. Then, we can check that (Imf, Omf), defines an irreversible component. Again,\nthe phenomenological parameter α could for instance be a function of the temperatures.\nThe above can be simplified to s1.f = − 1\nθ1 α (θ2 − θ1) and s2.f = − 1\nθ2 α (θ1 − θ2). Hence,\nthe environment temperature θ0 cancels out in the flow variables, which are rates of\nentropy change due to heat transfer.\n⋄\nThe semantics of an irreversible component is simply given by its Onsager structure\ninterpreted as a relation:\nDefinition 6.17.\nThe semantics assigned to irreversible component (I, O) is the relation O : 1 ↛ PI\nthat is given by its Onsager structure O.\n△\n7. Composite systems\nA composite system is formed by interconnecting finitely many systems, be they\nprimitive systems or other composite systems, according to an interconnection pattern.\nThe data defining a composite system is therefore given by an interconnection pattern\nand for each of its inner boxes a system with the corresponding interface.\n31\nDefinition 7.1.\nLet System refer to the set of all systems defined with respect to a fixed reference\nenvironment. A composite system (I, γ, J) is defined by the following data:\n1. An interface I of the composite system.\n2. A package of systems γ ∈ Pkg(System), which can be reduced to a package of\ninterfaces β ∈ Pkg(Interface) by forgetting further data.\n3. A partition J of the combined interface P = P \u0002inner 7→ P β, outer 7→ I\u0003 such\nthat (β, I, J) defines an interconnection pattern.\n△\nclass of system\ninterface\nrelation\ndefinition\nstorage component\nIs\nS : TXIs ×\n1\n↛ PIs\n6.4\nenvironment component\nIe\nE :\n1\n× TXIe ↛ PIe\n6.6\nreversible component\nIr\nD :\n1\n×\n1\n↛ PIr\n6.11\nirreversible component\nIi\nO :\n1\n×\n1\n↛ PIi\n6.17\ncomposite system\nI\nC : TXIs × TXIe ↛ PI\n7.2\nTable 2: Overview of systems and their semantics given by a relation.\nTable 2 recalls the different classes of components defined in Section 6. In order\nto write the relations that determine their semantics in a consistent form, the Cartesian\nunit is inserted a few times. As already shown in the last row of the table, we can state\nthe semantics of a composite system in the same form. The idea is that we just need to\ncompose the relation assigned to the interconnection pattern with the Cartesian product\nof the relations assigned to the subsystems filling its inner boxes.\nDefinition 7.2.\nLet (I, γ, J) be a composite system and let P = (β, I, J) be its underlying inter-\nconnection pattern. Further, let PP be the relation assigned to pattern P according\nto Definition 4.2. For any inner box b ∈ dom(γ), let JsK denote the relation assigned to\nthe subsystem s = γ(b). In case system s is itself a composite system, this definition\napplies recursively. Then, the semantics assigned to composite system (I, γ, J) is the\nrelation C : TXIs × TXIe ↛ PI given by\nC = PP ◦\n\nY\nb ∈ dom(γ)\nJγ(b)K\n .\nHere, XIs denotes the state space of all storage components and XIe denotes the state\nspace of all environment components, which are subsystems of the composite system in\na recursive sense.\n△\nExample 7.3.\nConsider the composite system given by filling the inner boxes of the interconnection\npattern for the nonisothermal damper shown in Figure 6 with three suitable systems.\nThe system filling the box tc represents a thermal capacity and it is defined analogous\nto Example 6.3, but without a port for volume exchange. It gives a relation\nStc : TXtc × 1 ↛ TXtc\n32\nwith Xtc = R. The system filling the box mf is a mechanical friction model as defined\nin Example 6.15 and it gives a relation\nOmf : 1 × 1 ↛ TXmf\nwith Xmf = R × R. The system filling the box ht is a heat transfer model as defined\nin Example 6.16 and it gives a relation\nOht : 1 × 1 ↛ TXht\nwith Xht = R × R. Let the Cartesian product of the three relations be denoted by\nStc × Omf × Oht : TXtc × 1 ↛ TXtc × TXmf × TXht .\nFurther, let the semantics of the interconnection pattern be given by the relation\nPP : TXtc × TXmf × TXht ↛ PI ,\nwhere PI = TXp ×TXs = TR×TR is the bundle of port variables of the outer interface.\nThen, the semantics of the composite system is given by the relation\nC = PP ◦ (Stc × Omf × Oht)\nfrom TXtc × 1 to PI.\n⋄\nFor an isolated composite system the assigned relation C: TXIs × TXIe ↛ 1 simply\namounts to a subbundle of TXIs × TXIe, which should implicitly define a vector field on\nXIs × XIe. Given an initial condition, one can integrate this vector field to determine the\nevolution of the system. We simply say that (x, ˙x) ∈ C, where x = (xs, xe), gives the\ndynamics of the isolated system. This is generalized by the following definition:\nDefinition 7.4.\nLet s ∈ System be a system with interface I and let the relation R: TXIs × TXIe ↛ PI\ndefine its semantics, according to one of the definitions mentioned in Table 2. Further,\nlet (xs, xe) ∈ XIs × XIe denote the state variables associated to all (nested) storage and\nenvironment components. If s is a primitive system this may be vacuous. Moreover, let\n(x, f, e) ∈ PI denote the port variables of its (outer) interface. Again, if the system is\nisolated this is vacuous. Then, the dynamics of system s is determined by the implicit\ndifferential-algebraic equation\n\u0000(xs, ˙xs), (xe, ˙xe), (x, f, e)\u0001 ∈ R .\n△\nExample 7.5.\nThe dynamics of the composite system described in Example 7.3 is given by\n\u0000(s, ˙s), (p.x, p.f, p.e), (s.x, s.f, s.e)\u0001 ∈ C .\nThis boils down to the following equations:\n˙s = 1\nθ1\n\u0010\nd υ2 + α (θ2 − θ1)\n\u0011\np.f = d υ\ns.f = − 1\nθ2\nα (θ1 − θ2)\n33\nHere, υ = p.e is the velocity of the kinetic energy domain represented by the outer port\np, θ1 = dU(s) is the absolute temperature of the thermal capacity with internal energy\nfunction U : R → R and θ2 = θ0 + s.e is the absolute temperature of the thermal energy\ndomain represented by the outer port s. Further, d ∈ R>0 is the damping coefficient and\nα ∈ R>0 is the heat transfer coefficient.\n⋄\nFor programming languages it usually holds that not everything that is syntactically\ncorrect is also semantically meaningful. There are also cases where a compiler for the\nEPHS language should throw an error, despite of syntactic correctness. Every junction\nmust have either zero or one connected port belonging to a storage or environment\ncomponent. Also, one cannot connect more than two power ports with a quantity such\nas (R, displacement) to the same junction, since velocities don’t balance. As of\nnow, we don’t have a comprehensive set of restrictions that should be imposed on the\ninterconnection of systems in order to get something meaningful, but we hope that this\ncan be worked out in the future.\n8. Thermodynamic consistency\nAs already touched upon in the introduction, the GENERIC establishes a general\nstructure, also called metriplectic structure, for combining reversible and irreversible\ndynamics in a way that respects fundamental principles from thermodynamics, namely\nthe first law, the second law, and Onsager reciprocal relations.\nThe vector field which determines the dynamics of a metriplectic system is given\nas the sum of a reversible Hamiltonian vector field that conserves energy due to the\nskew-symmetry of the Poisson bivector and a vector field of an irreversible gradient flow\nthat has non-negative entropy production due to the non-negative definiteness of the\nmetric tensor. Further, so-called non-interacting or degeneracy conditions ensure that the\nreversible dynamics conserves entropy and the irreversible dynamics conserves energy.\nThe first law then holds since both parts conserve energy and the second law holds\nbecause the irreversible part has non-negative entropy production, while the reversible\npart conserves entropy, see e.g. [18, 14]. Onsager reciprocal relations hold, as the\nsymmetry of the metric tensor implies equal cross-effect coefficients, see e.g. [50].\nUsually, the reversible part and the irreversible part both satisfy further degeneracy\nconditions that ensure the conservation of further quantities such as volume or mass.\nGiven that (some of) these quantities, together with entropy, are present in an exergy\nreference environment that is adjoined to the metriplectic system, it follows that the\nreversible dynamics conserve exergy and the irreversible dynamics are characterized by\na non-negative exergy destruction. This immediately follows from the definition of the\nexergy storage function analogous to Definition 6.2.\nThe argument for EPHS is very similar in nature, although it is in a sense reversed.\nTo keep it short and simple, we focus on isolated systems.\nProposition 8.1.\nThe dynamics of any isolated EPHS respects the first law, the second law, and Onsager\nreciprocal relations.\n△\nProof. We argue in terms of components and their interconnection.\n34\n1. According to Definition 6.9, all reversible components conserve exergy as well as\nall quantities of the reference environment.\nConsidering the definition of exergy in Definition 6.2, it follows immediately that\nall reversible components also conserve energy.\n2. According to Definition 6.14, all irreversible components are defined by a non-\nnegative exergy destruction rate and they conserve energy as well as all quantities\nof the reference environment, except for entropy.\nConsidering the definition of exergy, it follows that all irreversible components\nalso have a non-negative entropy production rate.\n3. According to Definition 4.2, any interconnection of the components conserves\nexergy and all quantities (of the reference environment), since flows balance at\nequal efforts.\nConsidering the definition of exergy, it follows that any interconnection of the\ncomponents also conserves energy.\nThe first law holds since all three aspects conserve energy. The second law holds\nbecause the irreversible components have a non-negative entropy production rate, while\nthe reversible components and the interconnection conserve entropy. The reciprocal\nrelations hold because, according to Definition 6.12, thermodynamic fluxes (flows)\ndepend on thermodynamic forces (efforts) via a symmetric locally-linear operator.\nWe note that the argument is reversed because, according to Definitions 6.4 and 7.2,\nthe semantics of EPHS is defined in terms of a storage function that is interpreted as the\nexergy of the system, as opposed to two separate functions representing the energy and\nentropy of a system. The concept of a storage function originates in Willems’ theory\nof dissipative systems [51]. In this context, reversible components as well as all EPHS\nwithout any irreversible components are said to be lossless, while (all systems with)\nirreversible components are said to be dissipative.\n9. Example\nThis section compares a bond graph and an EPHS model of a DC shunt motor.\nA direct current (DC) motor has a fixed outer part, called stator, and a rotating inner\npart, called rotor. Both parts contain a coil of wire through which current flows. In\nthe case of a shunt motor, these two inductors are connected in parallel (aka in shunt)\nto a source of electric energy. The working principle of such motors is based on a\ncoupling of the electro-magnetic and the kinetic energy domains via the Lorentz force\nand the commutation of the rotor coil after every half turn. However, both aspects are\nnot directly taken into account by the two models, which instead consider the coupling\nas being lumped into a gyrator element.\nWe start with the bond graph model that is taken from [22] and redrawn in Figure 10.\nThe half arrows are called bonds and each bond has two associated variables, called\nflow and effort. The name of the flow variable is written on the side of the arrow head,\nwhile the name of the effort variable is written on the opposite side. However, not all\nvariables are explicitly named in the example. At any 0-junction the effort variables\nof all connected bonds are equal, while the flow variables balance, with their sign\n35\nelectical part\nmechanical part\n<latexit sha1_base64=\"etQASNT2drMAw9KsXcxB/bPxTw=\">ABoHicZY+7TwJBEMZn8YX4Qi1tDQWhtwZXyXGhk6I8ohwIX\nvrABt29zY3eybkQm9jq3+b/40nXgN8zfwy38zkm9AqSc7zflhY3Nre6e4W9rbPzg8Kh+fdChKYoFtEako7oWcUEmDbSedwp6NketQYTecPv753XeMSUbmxc0sBpqPjRxJwV3Weg6HNCxXvZq30Pk6+DlUIVdzWP4YvEUi0WicUJyo73vWBSmPnRQK56VBQmi5mPIx9jM0X\nCMF6SLqkplyTZq7yWVWabDZdNOZiQFrZxzo/sglcYmDo2YZ9H91aDr0Lmq+be1m9Z1tf6QP1GEM6jABfhwB3VoQBPaIGAMn/AF36zCGuyJtf5HCyzfOYUlsdfFQhxvQ=</latexit>bs\n<latexit sha1_base64=\"U0ZkwP0z8+4wvMEp0WQirNbq6qM=\">ABoHicZY+7TwJBEMZn8YX4Qi1tDQWhtwZXyXGhsJEiPKIcC\nF76wAbdvc2N3sm5EJvY6t/m/+Np14DfM38Mt/M5JvQKknO875ZYW19Y3OruF3a2d3bPygfHnUoSmKBbRGpKO6FnFBJg20ncKejZHrUGE3nN7/+t03jElG5tnNLAaj40cScFd1np6GNKwXPVq3p9OV8HPoQq5msPy+A1EolG4TiRH3fsy5IeykUDgvDRJCy8WUj7Gfo\neEaKUj/oi6YKdekuZucZ5VmOlw07WRGUtDSOTe6DVJpbOLQiHkW3V8Ougqdi5p/XbtqXVbrd/kTRTiBCpyBDzdQhwY0oQ0CxvABn/DFKqzBHlnrf7TA8p1jWB7+QH50XGn</latexit>Ls\n<latexit sha1_base64=\"F1jz4YIzLzFDKcrHhG42cVuscSE=\"\n>ABr3icZY9NT8JAEIZn8Qvxq+rRC5GLB0Na41c8Ybx4RCIfCdS6XQfYsLvdLckTcPdH+FV/5P/xoK9AO9lnsw7M3kn1Ib67q/p\nLSxubW9U96t7O0fHB45xycdEyUxwzaLRBT3QmpQcIVty63Ano6RylBgN5w8zf3uFGPDI/VqU42+pCPFh5xRm7cCxlIasexzFqz6k\nO1FcSBU3Pr7kLVdfAKqEGhZuB8Dj4ilkhUlglqTN9ztfUzGlvOBM4qg8SgpmxCR9jPUVGJxs8WyZfMjEoz3KZV5PKcNnU49RwZlb\nO2eG9n3GlE4uKzfLo3mrQdehc1b3b+s3Lda3xWDxRhjM4hwvw4A4a8AxNaAODKXzBN/wQj3TJG3n/Hy2RYucUlkT4HzC0dwg=</lat\nexit>R : Rr\n<latexit sha1_base64=\"epY6WemAxDWc2ar4f7LTWw7TbhU=\">ABr3icZY9NT8JAEIan+IX4VfXohcjFgyGt8SueMF48opGPBG\nrdLgNs2N1udrckTcPdH+FV/5P/xoK9AO9lnsw7M3knUpwZ63m/Tmljc2t7p7xb2ds/ODxyj0/aJk40xRaNeay7ETHImcSWZjV2kIuLYiSZPc78zRW1YLN9sqjAQZCTZkFi81boun1B7FiL7HVWfagOQh26Na/uLVRdB7+AGhRqhu5nfxDTRKC0lBNjer6nbJARbRnlO\nKv0E4OK0AkZYS9HSQSaIFskXzIzIsw8y2VeTSqiZVONU8OoWTlnh/dBxqRKLEo6y6P7q0HXoX1V92/rNy/XtcZj8UQZzuAcLsCHO2jAMzShBRSm8AXf8OP4Tsd5dz7+R0tOsXMKS3LYH0bsdxo=</latexit>R : dr\n<latexit sha1_base64=\"8LgHyi1dEqK5OH/LvezrcNHCtPM=\">ABr3icZY9NT8JAEIZn8Qvxq+rRC5GLB0Na41c8Ybx4RCIfCd\nS6XQfYsLvdLckTcPdH+FV/5P/xoK9AO9lnsw7M3kn1Ib67q/pLSxubW9U96t7O0fHB45xycdEyUxwzaLRBT3QmpQcIVty63Ano6RylBgN5w8zf3uFGPDI/VqU42+pCPFh5xRm7cCxlIasexzFqz6kO1FZjAqbl1d6HqOngF1KBQM3A+Bx8RSyQqywQ1pu+52voZjS1nA\nmeVQWJQUzahI+znqKhE42eL5EtmRqWZ7nMq0luGzqcWo4Myvn7PDez7jSiUXFZnl0bzXoOnSu6t5t/eblutZ4LJ4owxmcwV4cAcNeIYmtIHBFL7gG36IR7rkjbz/j5ZIsXMKSyL8DzHudwk=</latexit>R : Rs\n<latexit sha1_base64=\"p/50F7HtNM5ZbMqT+Tf6jpvL1g=\"\n>ABr3icZY+7TsNAEVnwyuEl4GSJiINBYpsxEtUQTQgUQSJPKTEmPUySVbZXa+860iWlZ6PoIV/4m9wgpskt5mjuTOjO6EW3FjX/\nSWltfWNza3ydmVnd2/wDk8apsoiRm2WCSiuBtSg4IrbFluBXZ1jFSGAjvh+GHmdyYGx6pV5tq9CUdKj7gjNq8FThOX1I7imX2NK\n3eVZ+DOHBqbt2dq7oKXgE1KNQMnM/+R8QSicoyQY3pea62fkZjy5nAaWfGNSUjekQezkqKtH42Tz5gplRaWZzvNqUhkumnqUGs7\nM0jk7uPUzrnRiUbFpHt1bDroK7Yu6d12/ermsNe6LJ8pwAqdwBh7cQAMeoQktYDCBL/iGH+KRDnkj7/+jJVLsHMOCP8DHgN2+Q=<\n/latexit>I : Lr\n<latexit sha1_base64=\"/ObKXdrRexbW3J8+/z38xzr/yRc=\">ABr3icZY+7TsNAEVnwyuEl4GSJiINBYpsxEtUQTRAFSTykB\nJj1skWV3vfKuI1lWej6CFv6Jv8EJbpLcZo7mzozuhFpwY13l5TW1jc2t8rblZ3dvf0D5/CobaIkZthikYjibkgNCq6wZbkV2NUxUhkK7ITjh5nfmWBseKRebarRl3So+IAzavNW4Dh9Se0oltnTtHpXfQ7iwKm5dXeu6ip4BdSgUDNwPvsfEUskKsENabnudr6GY0tZ\nwKnlX5iUFM2pkPs5aioRONn8+QLZkalmWU5z6tJZbho6lFqODNL5+zg1s+40olFxaZ5dG856Cq0L+redf3q5bLWuC+eKMJnMIZeHADXiEJrSAwQS+4Bt+iEc65I28/4+WSLFzDAsi/A8bi3b3</latexit>I : Jr\n<latexit sha1_base64=\"uLzGklz9lSWOgOxXM+AVfrvsXEk=\">ABnicZY9NTwIxEIan+IX4hXr0QuTiwZCtEfWIMTFejJAIbA\nIb0q0DNLTdZts1IRvuJl71x/lvXHEvC+9lnsw7M3knNFJY53k/pLSxubW9U96t7O0fHB5Vj096Nkpijl0eySj2Q2ZRCo1dJ5xE38TIVCixH84e/vz+O8ZWRPrVzQ0Gik20GAvOXNbq0FG17jW8pWrQHOoQ672qPoxfIt4olA7Lpm1A+oZF6QsdoJLXFSGiUXD+IxNcJChZ\ngptkC6DFsyUKauYm15m1c5VWDTNdG4Ftyvn3PguSIU2iUPNF1l0uhp0HXpXDXrTaHau637/IkynME5XACFW2jBE7ShCxwQPuELvkmNPJn8vI/WiL5zikURPxfjONwpg=</latexit>1\n<latexit sha1_base64=\"uLzGklz9lSWOgOxXM+AVfrvsXEk=\"\n>ABnicZY9NTwIxEIan+IX4hXr0QuTiwZCtEfWIMTFejJAIbAIb0q0DNLTdZts1IRvuJl71x/lvXHEvC+9lnsw7M3knNFJY53k/p\nLSxubW9U96t7O0fHB5Vj096Nkpijl0eySj2Q2ZRCo1dJ5xE38TIVCixH84e/vz+O8ZWRPrVzQ0Gik20GAvOXNbq0FG17jW8pWrQH\nOoQ672qPoxfIt4olA7Lpm1A+oZF6QsdoJLXFSGiUXD+IxNcJChZgptkC6DFsyUKauYm15m1c5VWDTNdG4Ftyvn3PguSIU2iUPNF1l\n0uhp0HXpXDXrTaHau637/IkynME5XACFW2jBE7ShCxwQPuELvkmNPJn8vI/WiL5zikURPxfjONwpg=</latexit>1\n<latexit sha1_base64=\"uLzGklz9lSWOgOxXM+AVfrvsXEk=\">ABnicZY9NTwIxEIan+IX4hXr0QuTiwZCtEfWIMTFejJAIbA\nIb0q0DNLTdZts1IRvuJl71x/lvXHEvC+9lnsw7M3knNFJY53k/pLSxubW9U96t7O0fHB5Vj096Nkpijl0eySj2Q2ZRCo1dJ5xE38TIVCixH84e/vz+O8ZWRPrVzQ0Gik20GAvOXNbq0FG17jW8pWrQHOoQ672qPoxfIt4olA7Lpm1A+oZF6QsdoJLXFSGiUXD+IxNcJChZ\ngptkC6DFsyUKauYm15m1c5VWDTNdG4Ftyvn3PguSIU2iUPNF1l0uhp0HXpXDXrTaHau637/IkynME5XACFW2jBE7ShCxwQPuELvkmNPJn8vI/WiL5zikURPxfjONwpg=</latexit>1\n<latexit sha1_base64=\"whsImLJ+Dr6W7f8ejS65o4QKxQA=\"\n>ABnicZY9NTwIxEIan+IX4hXr0QuTiwZCuEfWIMTFejJAIbAIb0q0DNLTdZts1IRvuJl71x/lvXHEvC+9lnsw7M3knNFJYR+kPK\nW1sbm3vlHcre/sHh0fV45OejZKY5dHMor9kFmUQmPXCSfRNzEyFUrsh7OHP7/jrEVkX51c4OBYhMtxoIzl7U6dFSt0wZdqrYOXg\n51yNUeVT+GbxFPFGrHJbN24FHjgpTFTnCJi8owsWgYn7EJDjLUTKEN0mXQgpkyZRVz08us2rkKi6aZzq3gduWcG98FqdAmcaj5Iov\nurQZdh95Vw7tpNDvX9dZ9/kQZzuAcLsCDW2jBE7ShCxwQPuELvkmNPJn8vI/WiL5zikURPxfi6lwpQ=</latexit>0\n<latexit sha1_base64=\"YwvTPNHRPei2pKZ+MWjb595M0Os=\">ABqXicZY9NT8JAEIZn8Qvxq+rRi7EXEw1pDX4cMR70YgKJfC\nhtyHYdYMPudtPdmpCGu7/Aq/4t/40FewHeyzyZd2byTqQFN9bzfklpbX1jc6u8XdnZ3ds/cA6P2iZOE4YtFos46UbUoOAKW5ZbgV2dIJWRwE40fpj5nQ9MDI/Vi51oDCUdKj7gjNq8FQS2lEis+fH12nfcb2qN9fpKvgFuFCo0Xc+g/eYpRKVZYIa0/M9bcOMJpYzgdNKk\nBrUlI3pEHs5KirRhNk84KZUWlmOS7zaiYyWjT1aGI4M0vn7OAuzLjSqUXFZtH95aCr0L6q+jfV62bNrd8XT5ThBM7gHy4hTo8QNawEDF3zD7kgTdIlb/+jJVLsHMOCPsD3qB1rQ=</latexit>MGY\n<latexit sha1_base64=\"L+Oo2HMJf14to5G2FwlZf/gN8=\"\n>ABrnicZY9NT8JAEIZn8Qvxg6pHL0QuHgxpjV/xhDEmHjHaQgJNs10H2LC73XS3JqTh7n/wqj/Kf2PBXoD3Mk/mnZm8E2vBjXdX\n1LZ2Nza3qnu1vb2Dw7rztFxYJIsZeizRCRpL6YGBVfoW24F9nSKVMYCu/Hkce53PzA1PFvdqoxlHSk+JAzaotW5NQHktpxKvNXnD\nXuG0+R03Rb7kKNdfBKaEKpTuR8Dt4TlklUlglqTN9ztQ1zmlrOBM5qg8ygpmxCR9gvUFGJswXwZfMnEozj3JRVDOV8bKpx1PDmVk\n5Z4d3Yc6VziwqNiuie6tB1yG4bHk3reuXq2b7oXyiCqdwBufgwS204Rk64AODL7gG36ISwISkuh/tELKnRNYEhn/AXP8doY=</lat\nexit>Se : E\n<latexit sha1_base64=\"9RmwVIS4KsiETvAZzAE/YXtwKU=\">ABunicZY89TwJBEIZn8Qvx69ShkhjYcid8SvGAmNjY4JRPh\nLuctlbBtiwu7e53TOSC4Wd/8RWf47/RsBrgLeZJ/POTN6JtODGu4vKaytb2xuFbdLO7t7+wfO4VHLxGnCsMliESediBoUXGHTciuwoxOkMhLYjkYPM7/9honhsXq1Y42BpAPF+5xRO2FTtmX1A4Tmb3gpHJbeQp9i+82EzHtTUKn6tbcuSqr4OVQhVyN0Pn0ezFLJSrLB\nDWm67naBhlNLGcCJyU/NagpG9EBdqeoqEQTZPMnFsyMSjOLdTatZiyjRVMPx4Yzs3TO9m+CjCudWlRsFt1bDroKrfOad1W7fL6o1u/zJ4pQhM4BQ+uoQ6P0IAmMPiAL/iGH3JHIsLJ6H+0QPKdY1gQsX/T93we</latexit>Se : Mload\n<latexit sha1_base64=\"Q6BfGYLdLt+NU91G+JZPw/xHPI=\">ABoHicZY+7TwJBEMZn8YX4Qi1tDQWhtwZXyXGhk6I8ohwIX\nvrABt29zY3eybkQm9jq3+b/40nXgN8zfwy38zkm9AqSc7zflhY3Nre6e4W9rbPzg8Kh+fdChKYoFtEako7oWcUEmDbSedwp6NketQYTecPv753XeMSUbmxc0sBpqPjRxJwV3WepZDGparXs1b6Hwd/ByqkKs5LH8M3iKRaDROKE7U9z3rgpTHTgqF89IgIbRcTPkY+xkar\npGCdBF1yUy5Js3d5DKrNPhsmknM5KCVs650X2QSmMTh0bMs+j+atB16FzV/NvaTeu6Wn/InyjCGVTgAny4gzo0oAltEDCGT/iCb1ZhDfbEWv+jBZbvnMKS2OsvHaxA=</latexit>is\n<latexit sha1_base64=\"CYNQt8+sSXVAwB2EeZjmMLDcXEk=\">ABoHicZY85T8NAEIVnwxXCZaCkQUlDgSIbcZVBNOlIBDlEYl\nnrZKsrtedIlpWehZ+G/8GE9w4ec18mjczehNqwY13R9S2djc2t6p7tb29g8Oj5zjk76Jkphj0UiochNSi4wp7lVuBQx0hlKHAQzh/ME7xoZH6sWmGn1Jp4pPOKM2bz0nQRw4DbfpLnW+Dl4BDSjUCZyP8VvEonKMkGNGXmutn5GY8uZwEVtnBjUlM3pFEc5K\nirR+NkyasnMqDS2tlXk0qw7KpZ6nhzKycs5N7P+NKJxYVW+TRvdWg69C/anq3zZvudaP1UDxRhTOowV4cActaEMHesBgCp/wBd+kTtrkiXT/Ryuk2DmFksjrLytCc8=</latexit>ur\n<latexit sha1_base64=\"ORDbKo0gsaYjX6kINPqIoUKYLaU=\">ABo3icZY/LS8NAEMZn6vWV9SjF7EIHiQkUh/HihfBS5W+oA\nls07btbubJbsRQujdo1f9z/xvjDWXt9lfsw3M3wTacGN9bwfUlb39jcqm7Xdnb39g+cw6OuidOEYfFIk76ETUouMKO5VZgXydIZSwF0f/vzeOyaGx6ptM42hpGPFR5xRW7S6QSxTIdO3XO9uU5XwS+hDqVaQ+cjeI1ZKlFZJqgxA9/TNsxpYjkTOKsFqUFN2ZSOc\nVCgohJNmM/TLpg5lUZSO7ksqslktGjqSWY4M0vn7OguzLnSqUXFZkV0fznoKnSvXP/GvX5u1Jv35RNVOIEzuAfbqEJj9CDjB4g0/4gm9yTp7IC2n/j1ZIuXMCyLhL/3ucw=</latexit>!\n<latexit sha1_base64=\"5MiVcDpJ1Llovkp7pkD/itKvXIE=\">ABnicZY9NS8NAEIZn61etX1WPXoq5eJCSiF/HiBei2YNt\nCGslmn7dLdzZLdCX0LnjVH+e/MdZc0r6XeZh3Zngn0oIb67o/pLKxubW9U92t7e0fHB7Vj096Jk4Thj6LRZwETUouELfcisw0AlSGQnsR7PHP7/jonhsXq1c42hpBPFx5xRm7e67VHdcZvuUo18ApwoFBnVP8YvsUslagsE9SYgedqG2Y0sZwJXNSGqUFN2YxOcJCjo\nhJNmC2DlsyMSiOpnV7m1cxlVDb1dG4Myvn7Pg+zLjSqUXFnl0bzXoOvSumt5t86Z7bQeieqcAbncAEe3ELnqEDPjBA+IQv+CYN8kTa5OV/tEKnVMoiQS/rztwg=</latexit>M\n<latexit sha1_base64=\"7cR6Dm+VkLVgFMjg+80isLPls=\">ABoHicZY85T8NAEIVnwxXCZaCkQXFDgSIbcZVBNGkQCZBDJF\na0XibJKrvrlXeNFnpaWjht/FvMGNk9fMp3kzozehFtxYz/shpbX1jc2t8nZlZ3dv/8A5POqYKIkZtlkorgXUoOCK2xbgX2dIxUhgK74fT+z+Y2x4pF7sTGMg6VjxEWfUZq3nh+HT0HG9mrfQ6Sr4ObiQqzl0PgZvEUskKsENabve9oGKY0tZwLnlUFiUFM2pWPsZ\n6ioRBOki6gFM6XSGon51k1MxkWT2ZGc7M0jk7ug1SrnRiUbF5Ft1fDroKnYuaf127al269bv8iTKcQBXOwIcbqEMDmtAGBmP4hC/4JlXSI+k9T9aIvnOMREXn8B0pNxhw=</latexit>MR\n<latexit sha1_base64=\"CwulivhE9uTIKguITQk6mJVEoQw=\"\n>ABnicZY9NS8NAEIZn61etX1WPXoq5eJCSiF/HihexBZMG2hD2azTdunuZsluhBJ6F7zqj/PfGsuad/LPMw7M7wTacGNd0fU\nlb39jcqm7Xdnb39g/qh0dE6cJQ5/FIk6CiBoUXKFvuRUY6ASpjAT2oun9n97x8TwWL3amcZQ0rHiI86ozVudh2HdcZvuQo1V8A\npwoFB7WP8YvMUslagsE9SYvudqG2Y0sZwJnNcGqUFN2ZSOsZ+johJNmC2ClsyMSiOpnZzn1cxkVDb1ZGY4M0vn7Og2zLjSqUXF5nl\n0bznoKnQvmt5186pz6bTuieqcAKncAYe3EALnqANPjBA+IQv+CYN8kieycv/aIUO8dQEgl+AaVrcLo=</latexit>E\n<latexit sha1_base64=\"FiAjeN0PWd5dIqt72gVUk4pXl+M=\"\n>ABoHicZY9NT8JAEIZn8QvxC/XoxdCLB0NaI+oR4WboBaI0JDtOsCG3e2muzVpGu5evOpv89YsRfgvcyTeWcm74RacGNd94eUN\nja3tnfKu5W9/YPDo+rxSdESczQZ5GI4n5IDQqu0LfcCuzrGKkMBfbC2cOf3vH2PBIvdhUYyDpRPExZ9Tmredk9DSqOm7dXeh8Hb\nwCHCjUHlU/hm8RSyQqywQ1ZuC52gYZjS1nAueVYWJQUzajExzkqKhE2SLqEtmRqWR1E4v82pSGS6bepoazszKOTu+CzKudGJRsXk\ne3VsNug7dq7p3U290rp3mfFEGc6gBhfgwS0oQVt8IHBD7hC75JjbTI+n8j5ZIsXMKSyKvwQCca8=</latexit>uR\n<latexit sha1_base64=\"JIvZO1BvTvCPr49O07KtiMs/6V4=\">ABqnicZY/LTgJBEWr8YX4Ql26MbJxQciM8bXEuHFjgkYeBi\nakpymgQ3dPO1jJBP2/oFb/Sz/RsDZAHdTJ3WrKrdCq6Qjz/tlubX1jc2t/HZhZ3dv/6B4eNRwURILrItIRXEr5A6VNFgnSQpbNkauQ4XNcHQ/85vGDsZmRcaWw0HxjZl4LTtBU8djuEH5SqiPcm3WLJq3hzna6Cn0EJMtW6xc9OLxKJRkNCcefavmcpSHlMUicFDqJQ\n8vFiA+wPUXDNbognYdeMFOuneY0LE+rG+tw0bTDsZPCLZ2j/m2QSmMTQiNm0f3loKvQuKj415Wrp8tS9S57Ig8ncAbn4MNVOEBalAHAW/wBd/w8rsmb2y9v9ojmU7x7Ag1vsDxe52Ug=</latexit>Mload\n<latexit sha1_base64=\"unyrS9cgVK3/5hWKXl26KOtKM2A=\">ABoHicZY9NT8JAEIZn8QvxC/XoxdCLB9O0xq8jxgs3IVogQk\nO261A27G43a0Jabh78aq/zX9jxV6A9zJP5p2ZvBNpwY31vB9S2djc2t6p7tb29g8Oj+rHJ12TZCnDgCUiSfsRNSi4wsByK7CvU6QyEtiLpo9/fu8dU8MT9WJnGkNJY8XHnFbtJ75KB3VHc/1FjpfB78EB0q1R/WP4VvCMonKMkGNGfietmFOU8uZwHltmBnUlE1pjIMCF\nZVownwRdcnMqTS2slUc1MRsumnswMZ2blnB3fhzlXOrOo2LyI7q8GXYfulevfujeda6f5UD5RhTNowAX4cAdNaEbAmAQwyd8wTdpkBZ5Ip3/0Qopd05hSeT1FxycM=</latexit>ir\nFigure 10: Bond graph model of a DC shunt motor.\ngiven by the bond direction. Dually, at 1-junctions flows are equal and efforts balance.\nSpecifically, at the 0-junction on the left the current from the Se-element (effort source)\nwith effort/voltage E splits into the current is through the stator coil and the current ir\nthrough the rotor coil. The inductance of the rotor coil is represented by the I-element\n(generalized inductor) with inductance Lr, while an I-element representing the stator\ncoil inductance is omitted. The (steady-state) stator coil current is is instead entirely\ndetermined by the R-element (generalized resistor) at the top representing the coil’s\nelectrical resistance Rs. The magnetic flux of the stator coil bs is instead obtained as\nthe signal that results from multiplying the signal is, which is the shared effort variable\nat the upper 1-junction, with the constant gain Ls. The bond graph hence combines\nenergy-based modeling with signal-based modeling known from block diagrams. At the\n1-junction on the left, the source voltage E is equal to the sum of the voltage over the\nrotor coil inductance Lr, the voltage uR over the rotor coil resistance Rr, and the induced\n(back EMF) voltage ur. The latter is determined by the MGY-element (modulated\ngyrator), which describes the coupling of the electrical and the mechanical parts. The\ngyrator ratio is the signal bs coming from the gain block. At the gyrator, the effort\nvariable of one port is equal to the product of the gyrator ratio and the flow variable\nof the other port. On the mechanical side, the load torque Mload ≤ 0 is modeled by\nthe effort source on the right, while the rotor’s angular mass Jr is represented by an\nI-element. At the 1-junction the sum of the generated torque M and the load torque\nMload is equal to the sum of the torque accelerating the angular mass and the friction\ntorque MR. The latter is the product of the friction coefficient dr and the angular velocity\nω. Putting all this together, the bond graph gives the system of ordinary differential\n36\nequations\nLr\ndir\ndt = E − ur − uR\nJr\ndω\ndt\n= M − MR + Mload ,\nwhere\nis =\n1\nRs\nE\nbs = Ls is\nur = bs ω\nM = bs ir\nMR = dr ω\nuR = Rr ir .\nAs already shown in Example 4.3, the EPHS model is specified as an interconnection\nof two subsystems named stator and rotor. The two systems share an electric energy\ndomain represented by the junction with connected ports named q. The kinetic energy\ndomain of the rotor is represented by the junction with connected ports named p. Both\nenergy domains are exposed such that the motor model can be integrated into another\nsystem. The conversion between electric and kinetic energy in the rotor depends on the\nstate of the magnetic energy domain of the stator, which is represented by the junction\nwith connected state ports named bs.\nstator\nem\ncoil\nemloss\nenv\ns\nq\nbₛ\nFigure 11: Interconnection pattern of the stator model.\nThe interconnection pattern of the stator model is shown in Figure 11. The box em\nis filled by a reversible component that represents the coupling of the electric energy\ndomain with port q and the magnetic energy domain with port bs. The box coil is\nfilled by a storage component that represents the inductance of the stator coil, while the\nbox emloss is filled by an irreversible component that represents its electric resistance.\nThe box env is filled by an environment component whose thermal energy domain with\nport s absorbs the dissipated electromagnetic energy.\n37\nThe reversible component (Iem, Dem) is defined by its interface Iem = ({q, bs}, τem)\nwith τem(q) = ((R, charge), p), τem(bs) = ((R, flux linkage), p) and its Dirac\nstructure Dem ⊂ PIem given by\n\" q.f\nbs.f\n#\n=\n\" 0\n1\n−1\n0\n# \" q.e\nbs.e\n#\n.\nThe storage component (Icoil, Ecoil) is defined by its interface Icoil = ({bs}, τcoil)\nwith τcoil(bs) = ((R, flux linkage), p) and its energy function Ecoil : XIcoil → R with\nXIcoil = R ∋ bs.x = bs given by\nEcoil(bs) =\n1\n2 Ls\nb2\ns ,\nwhere the parameter Ls is the inductance. Since Hcoil = Ecoil, the effort variable\nbs.e = bs\nLs is the current through the coil.\nThe irreversible component (Iemloss, Oemloss) is defined by Iemloss = ({bs, s}, τemloss)\nwith τemloss(bs) = ((R, flux linkage), p), τemloss(s) = ((R, entropy), p) and its\nOnsager structure Oemloss ⊂ Pemloss given by\n\"bs.f\ns.f\n#\n= 1\nθ0\nRs\n\nθ0+s.e\n−bs.e\n−bs.e\n(bs.e)2\nθ0+s.e\n\n\"bs.e\ns.e\n#\n=\n\nRs bs.e\n− Rs (bs.e)2\nθ0+s.e\n ,\nwhere the parameter Rs is the electric resistance of the coil.\nThe environment component is defined by the subinterface Ienv = {s} ⊆ IR.\nrotor\nem\ncoil\nmk\nemloss\nmass\nmloss\nenv\nbₛ\ns\nq\nb\np\nFigure 12: Interconnection pattern of the rotor model.\n38\nThe interconnection pattern of the rotor model is shown in Figure 12. The compo-\nnents filling the boxes coil, em, emloss, and env are defined as for the stator model,\nexcept for a different port name, namely b instead of bs, and different parameters,\nnamely Lr instead of Ls and Rr instead of Rs. The box mk is filled by a reversible\ncomponent that describes the coupling of the magnetic energy domain with port b\nand the (rotational) kinetic energy domain with port p. This coupling depends on the\nmagnetic flux bs.x that is generated by the stator coil. The box mass is filled by a\nstorage component that represents the rotor’s angular mass and the box mloss is filled\nby an irreversible component that represents its mechanical friction.\nThe reversible component (Imk, Dmk) is defined by Imk = ({b, p, bs}, τmk) with\nτmk(b) = ((R, flux linkage), p), τmk(p) = ((R, angular momentum), p), τmk(bs) =\n((R, flux linkage), s) and its Dirac structure Dmk ⊂ PImk given by\n\"b.f\np.f\n#\n=\n\"\n0\nbs.x\n−bs.x\n0\n# \"b.e\np.e\n#\n.\nThe storage component (Imass, Emass) is defined by Imass = ({p}, τmass) with τmass(p) =\n((R, angular momentum), p) and Emass : XImass → R with XImass = R ∋ p.x = p given\nby\nEmass(p) =\n1\n2 Jr\np2 ,\nwhere the parameter Jr is the angular mass.\nThe irreversible component (Imloss, Omloss) is defined by Imloss = ({p, s}, τmloss)\nwith τmloss(p) = ((R, angular momentum), p), τmloss(s) = ((R, entropy), p) and its\nOnsager structure Omloss ⊂ PImloss given by\n\"p.f\ns.f\n#\n= 1\nθ0\ndr\n\nθ0+s.e\n−p.e\n−p.e\n(p.e)2\nθ0+s.e\n\n\"p.e\ns.e\n#\n=\n\ndr p.e\n− dr (p.e)2\nθ0+s.e\n ,\nwhere the parameter dr is the mechanical friction coefficient.\nWe write (bs, b, p, s) ∈ R4 for the state of the interconnected motor model, where\nwe identify the entropy state variables s of both environment components. In future\nwork, the identification of environment components can be formalized by composing\nwith a suitable relation. The EPHS model then yields the equations\n˙bs = q.e − Rs is\n˙b = q.e − bs ω − Rr ir\n˙p = bs ir − dr ω + p.f\n˙s = 1\nθ0\n\u0010\nRs i2\ns + Rr i2\nr + dr ω2\u0011\nq.f = is + ir ,\n39\nwhere\nis =\n1\nLs\nbs\nir =\n1\nLr\nb\nω = 1\nJr\np .\n10. Discussion\nWhile it still seems reasonable to package a motor model as a single bond graph,\nintegrating the model as part of a more complex system is not supported by the bond\ngraph notation. Hence, bond graph users have to reproduce models as parts of more\ncomplex models. EPHS improves upon this, making it nearly trivial to encapsulate, reuse,\nand swap out submodels. Another main feature of EPHS is their built-in thermodynamic\nconsistency. Restricting the space of models in this way not only provides important\nguarantees, it also makes models compatible with each other, as a close link between\ntheir mathematical structure and physical interpretation is established. This is reflected\nby the correspondence of junctions and energy domains, which in our opinion contributes\nsubstantially to the improved readability of the EPHS syntax. The reason why EPHS\nusers can easily integrate existing models without first needing to adapt them to fit\ninto the larger system is that EPHS simply compose by sharing energy domains. In\nthis way, we hope to improve upon port-Hamiltonian systems, which lack an intuitive\ngraphical syntax and require that users define the ports of a system in a somewhat\narbitrary manner.\nAuthor contribution statement\nMarkus Lohmayer: Conceptualization, Investigation, Writing – Original Draft,\nWriting – Review & Editing, Visualization; Owen Lynch: Investigation, Writing –\nOriginal Draft; Sigrid Leyendecker: Supervision\nAcknowledgements\nWe thank David Spivak for help when working out the concept of namespaces.\nReferences\n[1] T. J. Courant, Dirac manifolds, Transactions of the American Mathematical\nSociety 319 (1990) 631–661.\n[2] M. Pavelka, V. Klika, M. Grmela, Multiscale Thermo-Dynamics, De Gruyter,\nBerlin, 2018. doi:10.1515/9783110350951.\n40\n[3] H. Callen, Thermodynamics and an Introduction to Thermostatistics, second ed.,\nJohn Wiley & Sons Inc, New York, 1985.\n[4] H. C. ¨Ottinger, Beyond Equilibrium Thermodynamics, John Wiley & Sons Inc,\nHoboken, New Jersey, 2005.\n[5] S. de Groot, P. Mazur, Non-equilibrium Thermodynamics, Dover Books on Physics,\nDover Publications, New York, 1984.\n[6] L. Onsager, Reciprocal relations in irreversible processes. i., Physical Review 37\n(1931) 405–426.\n[7] P. C. Breedveld, Thermodynamic bond graphs and the problem of thermal iner-\ntance, Journal of the Franklin Institute 314 (1982) 15 – 40.\n[8] B. Maschke, Geometrical formulation of bond graph dynamics with application to\nmechanisms, Journal of the Franklin Institute 328 (1991) 723–740.\n[9] J. C. Willems,\nQualitative behavior of interconnected systems,\nin: An-\nnals of Systems Research, Springer US, 1974, pp. 61–80. doi:10.1007/\n978-1-4613-4555-8_4.\n[10] J. C. Willems, The behavioral approach to open and interconnected systems, IEEE\nControl Systems 27 (2007) 46–99.\n[11] B. Maschke, A. van der Schaft, P. Breedveld, An Intrinsic Hamiltonian Formulation\nof Network Dynamics: Non-standard Poisson Structures and Gyrators, Journal of\nthe Franklin Institute 329 (1992) 923–966.\n[12] A. van der Schaft, B. Maschke, The Hamiltonian formulation of energy con-\nserving physical systems with external ports, AEU - Archiv f¨ur Elektronik und\n¨Ubertragungstechnik 49 (1995) 362–371.\n[13] A. van der Schaft, D. Jeltsema, Port-Hamiltonian systems theory: An introductory\noverview, Foundations and Trends in Systems and Control 1 (2014) 173–378.\n[14] M. Grmela, H. C. ¨Ottinger, Dynamics and thermodynamics of complex fluids. I.\nDevelopment of a general formalism, Phys. Rev. E 56 (1997) 6620–6632.\n[15] A. N. Kaufman, Dissipative Hamiltonian systems: A unifying principle, Physics\nLetters A 100 (1984) 419–422.\n[16] M. Grmela, Particle and bracket formulations of kinetic equations, in: Fluids and\nplasmas: geometry and dynamics (Boulder, Colo., 1983), volume 28 of Contemp.\nMath., Amer. Math. Soc., Providence, RI, 1984, pp. 125–132. doi:10.1090/conm/\n028/751978.\n[17] M. Grmela, Bracket formulation of dissipative fluid mechanics equations, Physics\nLetters A 102 (1984) 355–358.\n41\n[18] P. J. Morrison, Bracket formulation for irreversible classical fields, Physics Letters\nA 100 (1984) 423–427.\n[19] A. M. Badlyan, B. Maschke, C. Beattie, V. Mehrmann, Open physical systems:\nfrom GENERIC to port-Hamiltonian systems, in: Proceedings of the 23rd Inter-\nnational Symposium on Mathematical Theory of Systems and Networks, Hong\nKong, China, 2018, pp. 204–211.\n[20] M. Lohmayer, P. Kotyczka, S. Leyendecker, Exergetic port-Hamiltonian systems:\nmodelling basics, Mathematical and Computer Modelling of Dynamical Systems\n27 (2021) 489–521.\n[21] H. Paynter, Analysis and Design of Engineering Systems, MIT Press, Cambridge,\n1961.\n[22] W. Borutzky, Bond Graph Methodology, Springer London, 2010. doi:10.1007/\n978-1-84882-882-7.\n[23] S. Birkett, P. Roe, The mathematical foundations of bond graphs—i. algebraic\ntheory, Journal of the Franklin Institute 326 (1989) 329–350.\n[24] B. Coya, A compositional framework for bond graphs, 2017. doi:10.48550/\nARXIV.1710.00098.\n[25] M. Pfeifer, S. Caspart, S. Hampel, C. Muller, S. Krebs, S. Hohmann, Explicit port-\nHamiltonian formulation of multi-bond graphs for an automated model generation,\nAutomatica 120 (2020) 109121.\n[26] S. Mac Lane, Categories for the Working Mathematician, Graduate Texts in\nMathematics, second ed., Springer, 1998.\n[27] B. Fong, D. I. Spivak, An Invitation to Applied Category Theory, Cambridge\nUniversity Press, 2019. doi:10.1017/9781108668804.\n[28] D. J. Myers, Categorical systems theory, http://davidjaz.com/Papers/\nDynamicalBook.pdf, 2022.\n[29] J. Baez, J. Erberle, Categories in control, Theory and Applications of Categories\n30 (2015) 836–881.\n[30] J. C. Baez, B. S. Pollard, A compositional framework for reaction networks,\nReviews in Mathematical Physics 29 (2017) 1750028.\n[31] J. C. Baez, B. Fong, A compositional framework for passive linear networks, 2018.\ndoi:10.48550/ARXIV.1504.05625.\n[32] J. C. Baez, J. Foley, J. Moeller, B. S. Pollard, Network models, 2020.\n[33] J. D. Foley, S. Breiner, E. Subrahmanian, J. M. Dusel, Operads for complex system\ndesign specification, analysis and synthesis, Proceedings of the Royal Society A:\nMathematical, Physical and Engineering Sciences 477 (2021) 20210099.\n42\n[34] T. Leinster, Higher Operads, Higher Categories, London Mathematical So-\nciety Lecture Note Series, Cambridge University Press, 2004. doi:10.1017/\nCBO9780511525896.\n[35] D. Yau, Colored Operads, American Mathematical Society (AMS), Providence,\nRhode Island, 2016.\n[36] M. Lohmayer, S. Leyendecker,\nEPHS: A Port-Hamiltonian Modelling Lan-\nguage, in: 25th IFAC Symposium on Mathematical Theory of Networks and\nSystems MTNS 2022, volume 55, Elsevier BV, 2022, pp. 347–352. doi:10.1016/\nj.ifacol.2022.11.077.\n[37] D. I. Spivak, The operad of wiring diagrams: formalizing a graphical language\nfor databases, recursion, and plug-and-play circuits, 2013. doi:10.48550/ARXIV.\n1305.0297.\n[38] D. Spivak, Category Theory for the Sciences, MIT Press, 2014.\n[39] D. Yau, Operads of Wiring Diagrams, Springer International Publishing, 2018.\ndoi:10.1007/978-3-319-95001-3.\n[40] S. Breiner, B. Pollard, E. Subrahmanian, O. Marie-Rose, Modeling hierarchical\nsystem with operads, Electronic Proceedings in Theoretical Computer Science\n323 (2020) 72–83.\n[41] D. Vagner, D. Spivak, E. Lerman, Algebras of open dynamical systems on the\noperad of wiring diagrams, Theory and Applications of Categories 30 (2015)\n1793–1822.\n[42] P. Schultz, D. I. Spivak, C. Vasilakopoulou, Dynamical systems and sheaves,\nApplied Categorical Structures 28 (2019) 1–57.\n[43] S. Libkind, An algebra of resource sharing machines, 2020. doi:10.48550/ARXIV.\n2007.14442.\n[44] S. Libkind, A. Baas, E. Patterson, J. Fairbanks, Operadic modeling of dynami-\ncal systems: Mathematics and computation, 2021. doi:10.48550/ARXIV.2105.\n12282.\n[45] O. Lynch, Relational composition of physical systems: A categorical approach,\n2022. doi:10.48550/arXiv.2310.06088.\n[46] E. Fredkin, Trie memory, Communications of the ACM 3 (1960) 490–499.\n[47] M. Pavelka, V. Klika, M. Grmela,\nTime reversal in nonequilibrium thermo-\ndynamics, Phys. Rev. E 90 (2014) 062131.\n[48] J. M. Lee, Introduction to Smooth Manifolds, second ed., Springer New York,\n2012. doi:10.1007/978-1-4419-9982-5.\n43\n[49] H. Bursztyn, A brief introduction to Dirac manifolds, in: A. Cardona, I. Contreras,\nA. F. Reyes-Lega (Eds.), Geometric and Topological Methods for Quantum Field\nTheory: Proceedings of the 2009 Villa de Leyva Summer School, Cambridge\nUniversity Press, Cambridge, 2013, p. 4–38. doi:10.1017/CBO9781139208642.\n002.\n[50] A. Mielke, D. R. M. Renger, M. A. Peletier, A generalization of Onsager’s\nreciprocity relations to gradient flows with nonlinear mobility, Journal of Non-\nEquilibrium Thermodynamics 41 (2016).\n[51] J. C. Willems, Dissipative dynamical systems part I: General theory, Archive for\nRational Mechanics and Analysis 45 (1972) 321–351.\n44\n"
}