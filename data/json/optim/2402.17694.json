{
    "optim": "1\nOptimal Control Barrier Functions: Maximizing the Action Space\nSubject to Control Bounds\nLogan E. Beaver, Member, IEEE\nAbstract— This letter addresses the constraint compatibility\nproblem of control barrier functions (CBFs), which occurs when\na safety-critical CBF requires a system to apply more control\neffort than it is capable of generating. This inevitably leads to a\nsafety violation, which transitions the system to an unsafe (and\npossibly dangerous) trajectory. We resolve the constraint com-\npatibility problem by constructing a control barrier function\nthat maximizes the feasible action space for first and second-\norder constraints, and we prove that the optimal CBF encodes\na dynamical motion primitive. Furthermore, we show that this\ndynamical motion primitive contains an implicit model for the\nfuture trajectory for time-varying components of the system.\nWe validate our optimal CBF in simulation, and compare its\nbehavior with a linear CBF.\nI. INTRODUCTION\nControl Barrier Functions (CBFs) have recently emerged\nas a mathematically rigorous method to guarantee constraint\nsatisfaction for nonlinear systems with affine dynamics [1],\n[2]. CBFs have been used as an additional ”safety layer”\nto track a reference trajectory [3], and to directly generate\ntrajectories for reactive systems, e.g., in ecologically-inspired\nsystems [4]. CBFs have seen a wide range of applications,\nincluding connected and autonomous vehicles [3], mobile\nrobots [5], legged robots [6], and aerial vehicles [7].\nAs CBFs are deployed on more realistic and complicated\nsystems, new questions have arisen about the existence\nof feasible control actions that can jointly satisfy all of\nthe constraints on the system. This is also known as the\nconstraint compatibility problem, and it is a common issue\nin constrained control. There have been many proposed\nsolutions; imposing ‘compatibility constraints’ to ensure con-\nstraints don’t conflict [8], validating (or falsifying) whether\nconstraints are compatible before deploying a system [9],\nlearning individual control barrier functions to maximize the\nfeasible action space [10], selectively deactivating constraints\n[11], and the use of slack variables to soften constraints that\nare not safety-critical [12].\nIn contrast, this letter considers a dynamical system with\na single safety-critical constraint that is subject to control\nbounds. This is the simplest system where the constraint\nincompatibility arises [8], and it presents an opportunity for\nus to analyze the fundamental properties of the optimal CBF\nin detail. The contributions of this letter are as follows:\n• We present a constructive proof to derive the optimal\nCBF (Theorems 1 and 2).\nL.E. Beaver is with the Department of Mechanical & Aerospace En-\ngineering, Old Dominion University, Norfolk, VA 23529 USA (e-mail:\nlbeaver@odu.edu).\n• We derive a switching system that behaves equivalently\nto the optimal CBF (Remark 2).\n• We derive the dynamical motion primitive the system\nfollows when the optimal CBF is active (Definition 1).\n• We show how the optimal CBF implicitly embeds\na model of the environment over a significant time\nhorizon (Remark 1).\nThe remainder of this article is organized as follows. We\nbriefly address notation in Section I-A and present prelim-\ninary information about CBFs in Section II. We address\noptimal first-order CBFs in Section III, and we present\nour main results for second-order systems in Section IV.\nSection V contains simulation results for an adaptive cruise\ncontrol problem, and Section VI presents the conclusions and\nmotivates areas of future work.\nA. Notation\nThroughout our exposition we use standard notation from\nmultiple domains. First, we write vectors with bold letters\nand scalars as unstyled letters, i.e., x and x, respectively.\nWe write exogenous variables as explicit functions of time\nδ(t), and we omit the dependence of endogenous variables,\ni.e., states, on time. We write the spatial derivative of a scalar\nfunction b(x) along a vector field f(x) using Lie derivative\nnotation, ∂f\n∂xf(x) := Lf g. We examine constraints of the\nform b(x) ≤ 0 rather than b(x) ≥ 0. This means that\nthe corresponding class K∞ function is α(−b(x)). Finally,\nwe refer to the barriers in this article as Zeroing Barrier\nFunctions (ZBF) in general, and Control Barrier Functions\n(CBFs) when the barrier is a class K∞ function.\nII. CONTROL BARRIER FUNCTION PRELIMINARIES\nWe consider a nonlinear dynamical system with state x ∈\nRm, control action u ∈ Rn, and control-affine dynamics,\n˙x = f(x) + g(x)u.\n(1)\nWe consider the usual assumptions, namely, (1) is Lipschitz\ncontinuous, autonomous, and f, g are continuous vector\nfields. We seek trajectories that satisfy an inequality con-\nstraint,\nb(x) ≤ 0.\n(2)\nThe constraint has order r ∈ N if an only if\n(\nLk\ng b u = 0\nif k < r,\nLk\ng b u ̸= 0\nif k = r,\n(3)\narXiv:2402.17694v1  [math.OC]  27 Feb 2024\n2\ni.e., the control action u first appears after taking r time\nderivatives of the constraint b(x). Finally, we we impose a\nmaximum control effort bound,\nu ∈ U =\nn\nu ∈ Rm : ||u|| ≤ umax\no\n.\n(4)\nFor a first order system, where u shows up explicitly in\n˙b, it is common to employ a control barrier function (CBF)\nwith the form [1],\n˙b(x) = Lfb + Lgb u ≤ −α(b(x)),\n(5)\nwhere α(−b(x)) is an extended class K∞ function. This is\nalso a zeroing barrier function (ZBF) [1] because b(x) = 0\nimplies α(b(x)) = 0, and thus ˙b(x) ≤ 0. This satisfies the\nNagumo theorem [2], which guarantees that the sub-level set\nb(x) ≤ 0 is forward-invariant.\nThe challenge we address in this letter is the constraint\ncompatibility problem, i.e., how to design a ZBF that simul-\ntaneously satisfies the constraint (2) and control bounds (4).\nFor example, when Lgb > 0, a scalar system must jointly\nsatisfy,\n(\nu ≤ − α(b)+Lf b\nLgb\n,\nu ≥ −umax.\n(6)\nThus, if the system ever enters a state satisfying\n−α(b) < −umaxLgb + Lfb,\n(7)\nthen there is no feasible control action u that can jointly\nsatisfy the barrier function (5) and control bounds (4).\nAssumption 1. We only consider the dynamics of the system\nwithin the set b(x) ≤ 0.\nAssumption 1 simplifies our analysis by assuming the\nsystem initially satisfies b(x) ≤ 0, and it restricts the\nform of our CBFs to class-K∞ functions. This can be\nrelaxed by extending the optimal CBF to an extended class-\nK∞ function, which has demonstrated robustness to noise,\ndisturbances, and model uncertainty [13].\nAssumption 2. For a constraint b(x) of order r, for every\nstate x ∈ Rm, there exists at least one value of u satisfying\nmin\nu\ndr\ndtr b(x) ≤ −ϵ2 < 0,\nmax\nu\ndr\ndtr b(x) ≥ 0,\nthat also satisfies the control bounds (4).\nWe employ Assumption 2 to simplify our analysis and\nensure the system has the control authority to keep the system\nin the safe set. This assumption is straightforward to relax\nwith tools from Lyapunov stability, e.g., LaSalle’s Invariance\nPrinciple [14], to show forward invariance of b(x).\nAssumption 3. If the constraint b(x) is order r, then it is\nalso class Cr.\nAssumption 3 requires the constraint to be smooth enough\nfor the control input u to appear after taking r derivatives.\nThis is necessary because the control input is bounded, so the\nsystem trajectory cannot stay on a discontinuous constraint\nboundary. This assumption is straightforward to ensure, as\nthe form of the constraint b(x) is generally chosen by a\ndesigner.\nIII. FIRST ORDER SYSTEMS\nWe begin with a first order system where the control input\nu shows up explicitly in the first derivative of the barrier\nfunction. We follow this with an analysis of second order\nsystems in Section IV, where the constraint compatibility\nproblem is more significant.\nWe start by defining the set of safe states,\nC =\n\b\nx ∈ Rm : b(x) ≤ 0\n\t\n,\n(8)\nwhich is compact under the continuity of b(x) (Assumption\n3). Next, we seek a ZBF β(x) to guarantee forward invari-\nance of the set C via,\n˙b(x) ≤ −β(x).\n(9)\nWe require β to satisfy,\nsign\n\u0000− β(x)\n\u0001\n=\n(\n1\nfor all x ∈ C \\ ∂C,\n0\nfor all x ∈ ∂C,\n(10)\nwhere ∂C is the boundary of C. This satisfies the Nagumo\ntheorem [2], which implies forward invariance of C.\nTo guarantee constraint compatibility, β must also satisfy,\n−β(x) ≥ min\nu\n\u0000˙b(x)\n\u0001\n,\n−β(x) ≤ max\nu\n\u0000˙b(x)\n\u0001\n,\n(11)\nwhich trivially guarantees constraint compatibility,\nmin\nu\n\u0000˙b(x)\n\u0001\n≤ ˙b(x) ≤ −β(x) ≤ max\nu\n\u0000˙b(x)\n\u0001\n.\n(12)\nTo maximize the feasible set of control actions u, we select\n−β(x) =\n(\nmax\nu\n\u0000˙b(x)\n\u0001\nif x ∈ Co,\n0\nif x ∈ ∂C,\n(13)\nwhich satisfies (10) by Assumption 2. For a control-affine\nsystem (1), the optimal ZBF simplifies to,\nLgb u ≤\n(\f\fLgb|umax\nif x ∈ Co\n−Lfb\nif x ∈ ∂C,\n(14)\nwhich is a linear in u.\nProperty 1. The ZBF (14) obeys all state and control\nconstraints.\nProof. For all x ∈ Co, ||u|| ≤ umax by the definition of\nthe dot product. For all x ∈ ∂C, Assumption 2 implies the\nexistence of a u that simultaneously satisfies the ZBF and\nthe control bounds.\nProperty 2. The ZBF (14) maximizes the feasible action\nspace of u for all x ∈ C.\nSimilar to Property 1, this is implied by the definition of\nthe dot product and the construction of (13).\n3\nTheorem 1. The optimal ZBF (14) can be approximated\narbitrarily well by jointly imposing a linear CBF and control\nbounds.\nProof. Consider the control barrier function α\n\u0000b(x)\n\u0001\n=\nc1b(x) for some constant c1 > 0. For all points x ∈ ∂C, both\nfunctions imply ˙b\n\u0000x\n\u0001\n≤ 0. Let x ∈ Co such that b(x) ≤ ϵ\nfor some small ϵ > 0. Next, let\nc1 = 1\nϵ max\nu\n\b˙b(x)\n\t\n.\n(15)\nThis implies that\nc1b(x) ≥ max\nu\n\b˙b(x)\n\t\n≥ ˙b(x)\n(16)\nfor all b(x) ≥ ϵ. Thus, the feasible space of joint linear CBF\nand control bound constraints can be brought ϵ-close to the\noptimal ZBF.\nTheorem 1 requires the slope of a linear CBF to be\narbitrarily steep to ensure ϵ-closeness. However, for any real\nsystem, the effect of any noise and extenral disturbances will\nquickly dominate the ϵ-optimality gap for a linear CBF with a\nfinite slope. Thus, a linear CBF will effectively approximates\nthe optimal ZBF in practical applications.\nIV. SECOND ORDER ZBFS\nFor higher-order systems, we define a sequence of nested\nsafe sets [15]. The largest safe set is\nC1 = {x ∈ Rm : b(x) ≤ 0},\n(17)\nwhich is identical to the first-order safe set in Section III.\nTo generate the higher-order safe set C2, we take advantage\nof the following lemma.\nLemma 1. For any x ∈ ∂C1, the set C1 is invariant if and\nonly if ˙b(x) = 0.\nLemma 1 is essentially a restatement of the Nagumo\ntheorem. This is equivalent to the tangency conditions in\noptimal control [16], which arise when the system cannot\napply infinite impulse to make instantaneous jumps in the\nstate variables.\nNext, we seek to define the set of all states x that guarantee\nrecursive feasibility, i.e., states where there always exists a\ncontrol input such that C1 is forward invariant. We facilitate\nthis with the definition of the shortest line integral.\nDefinition 1. The shortest line integral starting at state x\nand ending at xf satisfies,\nmin\nu∈U\nn Z b(xf )\nb(x)\n¨b(x) db\no\n=\nZ ˙b(xf )\n˙b(x)\n˙b(x) d˙b,\n(18)\nwhich comes from the kinematic relationship between\nb(x), ˙b(x), and ¨b(x) [17].\nNext, we prove that the dynamical motion primitive,\nmin\nu\nn\n¨b(x)\no\n,\n(19)\ndescribes the system’s trajectory on the safe set’s boundary.\nLemma 2. The function ¨b that generates the shortest line\nintegral (Definition 1) is the instantaneous maximum or\nminimum of ¨b.\nProof. We seek the function ¨b that minimizes,\nZ t2\nt1\n¨b(x(t))|˙b(x(t))|dt,\n(20)\nwhich is equivalent to the line integral in Definition 1 for any\nparameterization of the trajectory that satisfies the boundary\nconditions [17]. This is an optimal control problem, and the\nunconstrained solution for ¨b satisfies [18],\n− d\ndt\n \n¨b|˙b|\n˙b\n!\n+ d2\ndt2\n\u0010\n|˙b|\n\u0011\n= 0.\n(21)\nUsing the additive property of integrals, we split (20) into\nintervals where ˙b has a positive or negative sign. In each of\nthese cases, the optimality condition reduces to 0 = 0. This\nimplies that ¨b never follows the unconstrained trajectory, and\nthe behavior of ¨b must be bang-bang.\nRemark 1. Definition 1 and Lemma 2 define a motion\nprimitive minu ¨b(x) over the horizon b(x) ∈ [b1, 0]. This\nhorizon can be large, and if b(x, t) is time-varying, the\nmotion primitive must also contain a model for the time-\nvarying component\n∂2b\n∂t2 . Thus, while CBFs are generally\nconsidered myopic, they actually contain an implicit model\nfor i) the future trajectory of endogenous variables, and ii)\nthe evolution of exogenous variables.\nLemma 3. The boundary of the safe set ∂C2 is,\n∂C2 =\nn\nx ∈ Rm : ˙b(x) ≥ 0,\nZ 0\nb(x)\n¨b db + 1\n2\n˙b(x)2 = 0,\no\n[ n\nx ∈ Rm : ˙b(x) < 0,\nZ 0\nb(x)\n¨b db − 1\n2\n˙b(x)2 = 0,\no\n,\nwhere ¨b is the lower bound of ¨b (Lemma 2).\nProof. Lemma 3 evaluates the shortest line integral (Defini-\ntion 1) from every x ∈ Rm to the set boundary, which is\nnecessary and sufficient for safety by Lemma 1.\nFor any other point x′, let δ be the euclidean distance\nbetween x′ and the nearest point x satisfying Lemma 3. No\ny ∈ Bδ/2(X′) satisfies Lemma 3, where Br(x) is a ball of\nradius r centered at x. Thus, Bδ/2(x′) is an open set (of safe\nor unsafe states), and x′ ̸∈ ∂C2 by definition.\nNote that the definition of ∂C2 contains two cases, one for\neach sign of ˙b. This is because when ˙b(x) < 0, the limits\nof integration change direction in Definition 1. Intuitively,\n˙b(x) < 0 implies that b(x) is decreasing–thus, by the\ncontinuty of b(x) (Assumption 3), there exists an interval of\ntime ∆t such that b(x) ≤ 0 for any arbitrarily large control\ninput u.\nLemma 4. The safe set C2 is\nC2 =\nn\nx ∈ Rm : ˙b(x) ≥ 0,\nZ 0\nb(x)\n¨b db + 1\n2\n˙b(x)2 ≤ 0,\no\n[ n\nx ∈ Rm : ˙b(x) < 0, x ∈ C1\no\n.\n4\nProof. Let xf ∈ C1 such that ˙b(xf) = 0. We use the\ncontrapositive of Lemma 1, which implies that xf is feasible\nif and only if b(xf) ≤ 0.\nFirst, consider some x ∈ C2 such that ˙b(x) ≥ 0.\nEvaluating the shortest line integral (Definition 1) yields,\nZ b(xf )\nb(x)\n˙b db + 1\n2\n˙b(x)2 = 0.\n(22)\nThis implies,\nZ 0\nb(x)\n˙b db + 1\n2\n˙b(x)2 =\nZ 0\nb(xf )\n¨b db ≤ 0.\n(23)\nAssumption 2 implies that the integrand of the right hand\nside is negative and b is increasing from b(xf) ≤ 0 to b = 0.\nThus, the condition in Lemma 4 is necessary for safety.\nNext, consider a point x ̸∈ C2 such that ˙b(x) ≥ 0. Similar\nto the previous case, applying Definition 1 yields\nZ 0\nb(x)\n˙b db + 1\n2\n˙b(x) =\nZ 0\nb(xf )\n¨b db > 0.\n(24)\nUnder our premise, the integrand of the right hand side is\nnegative and b is decreasing from b(xf) > 0 to b = 0 under\nAssumption 2. Thus, the premise of Lemma 4 is sufficient\nfor safety by contraposition.\nFinally, consider the case where x ∈ C1 such that ˙b(x) <\n0. If ˙b remains non-positive, then b ≤ b(x) ≤ 0 and the\ntrajectory remains in C1. If ˙b becomes positive, then by the\ncontinuity in ˙b (Assumption 3) it must pass through some\nintermediate point ˙b(x′) = 0. Setting xf = x′ satisfies the\npremise of the previous case and completes the proof.\nLemma 5. The set C2 is a strict subset of C1.\nProof. For all x ∈ Rm such that ˙b(x) < 0, x ∈ C1 if and\nonly if x ∈ C2.\nNext, let x ∈ C2 such that ˙b(x) ≥ 0. By Lemma 4,\nZ 0\nb(x)\n¨b(x) db ≤ −1\n2\n˙b2(x) ≤ 0.\n(25)\nUnder Assumption 2 the integrand of (25) is negative,\ntherefore b(x) ≤ 0 and x ∈ C1.\nTo prove strictness of the subset, consider a point x ∈ C1\nsuch that b(x) = 0 and ˙b(x) > 0. By Lemma 1, x ̸∈ C2.\nTheorem 2. The largest set that ensures forward invariance\nof b(x) ≤ 0 is,\nC2 =\nn\nx ∈ Rm : ˙b(x) ≥ 0,\nZ 0\nb(x)\n¨b db + 1\n2\n˙b(x)2 ≤ 0,\no\n[ n\nx ∈ Rm : ˙b(x) < 0, x ∈ C1\no\n.\nProof. The proof follows from Lemmas 4 and 5.\nTheorem 2 describes the shape of the largest safe set that\nensures recursive feasibility of C1. Next, we present a result\nthat we use to define the optimal CBF, which has the same\nfeasible action space as C2.\nLemma 6. The shortest line integral (Definition 1) induces\na Class K∞ function.\nProof. Consider the function,\nF\n\u0000− b(x)\n\u0001\n= −\nZ 0\nb(x)\n¨bdb.\n(26)\nThis satisfies the definition of a class K∞ function: 1)\nF(0) = 0, as the integral over a zero-measure set is zero;\n2) F(b(x) is strictly increasing, and 3) F(b(x)) → ∞ as\nb(x) → ∞, since ¨b(x) is upper bounded by a negative\nconstant.\nTheorem 3. The control barrier function\nα\n\u0000b(x)\n\u0001\n=\ns\n−2\nZ 0\nb(x)\n¨b db\n(27)\ncombined with a control bounds constraint is optimal, i.e.,\nits set of safe actions is equal to C2.\nProof. By Lemma 6, (27) is a class K∞ function, and it\ndescribes the safe set,\nCα =\n\b\nx ∈ Rm : ˙b(x) ≤ −α\n\u0000b(x)\n\u0001\t\n.\n(28)\nSubstituting (26) yields the boundary,\n˙b(x) ≤ −\ns\n−2\nZ 0\nb(x)\n˙b.\n(29)\nSquaring both sides and re-arranging yields the boundary of\nC2, thus (27) describes the optimal barrier function when ˙b ≤\n0. Enforcing the control bounds when ˙b(x) > 0 completes\nthe proof.\nTheorem 3 is a constructive proof to generate the control\nbarrier function that exactly captures the system’s feasible\naction space. Keeping the system in Cα is a first-order\nconstraint, and thus applying Theorem 1 yields a control\nbarrier function that is ϵ−close to the optimal ZBF. Finally,\nto complete this section, we describe the optimal behavior\nof a system with second-order constraints under the optimal\ncontrol barrier function.\nRemark 2. The optimal control policy switches between\nsatisfying the control bounds when x ∈ Co\nα and minimizing\n¨b(x) when x ∈ ∂Cα; this is depicted in Fig. 1.\n||u|| ≤ umax\nu = arg minu{¨b(x)}\nx ∈ ∂C2\nx ̸∈ ∂C2\nFig. 1.\nSwitching description of the optimal behavior; the system operates\nwithin the control bounds until it reaches the safe set boundary.\nProof. We now have the first order constraint,\n˙b(x) + α(b(x)) ≤ 0.\n(30)\nApplying Theorem 2 implies that the optimal CBF approxi-\nmates the ZBF,\n−β(x) =\n(\nmaxu{¨b(x) + ˙α(b(x))}\nif x ∈ Co\n2,\n0\nif x ∈ ∂C2.\n(31)\n5\nThe ZBF (31) is equivalent to enforcing the control bounds\nfor x ∈ Co\n2 by definition. For x ∈ ∂C2, the ZBF keeps the\nsystem within C2. By construction, this is only be achieved\nby applying the control input\nu = arg min\nu {¨b(x)}.\n(32)\nV. SIMULATION RESULTS\nIn this section we consider longitudinal control of a\nconnected autonomous vehicle (CAV) using adaptive cruise\ncontrol. Under adaptive cruise control, the CAV attempts\nto maintain a set speed while maintaining a safe following\ndistance. At each time-instant the vehicle measures the\ndistance δ(t) to the vehicle in front of it, which must be\nkept within an admissible range.\nThe autonomous vehicle has a state x = [p, v]⊺ ∈ R2 and\ncontrol action u ∈ R. It follows integrator dynamics,\n˙p = v,\n˙v = u.\n(33)\nWe impose the acceleration bounds\n|u| ≤ umax,\n(34)\nand we constrain the vehicle to obey a headway constraint,\nb(x) = p − δ(t) − γ ≤ 0,\n(35)\nwhere δ(t) is the position of the vehicle in front of the CAV,\nand γ is a minimum separating distance.\nRemark 1 requires us to explicitly embed a model of\nδ(t) in the optimal CBF. For vehicle in front, we assume a\nconstant speed model, i.e., ¨δ(t) = 0. This is a common model\nused in the literature with reasonable success (e.g., for model\npredictive control [19]), however, in safety-critical scenarios\nit may be beneficial to replace ¨δ(t) with a lower bound\n(e.g., the minimum braking distance of [20]). Alternatively,\nfuture predictions of δ(t) can be communicated from the lead\nvehicle if it is a CAV.\nTo construct the higher order CBF, we consider the case\nwhen v ≥ 0. From Lemma 2, the shortest line integral is,\nZ b=0\nb=p−δ\n−umax dp = umax(p − δ(t) − γ).\n(36)\nTheorem 3 implies the barrier function\nα\n\u0000b(x)\n\u0001\n= −\np\n−2 umax (p − δ(t) − γ),\n(37)\nand thus,\nv − ˙δ(t) ≤\np\n−2 umax (p − δ(t) − γ).\n(38)\nEquivalently, the boundary of the safe set (Theorem 2) yields\nthe minimum stopping distance constraint,\n2 umax(p − δ(t) − γ) +\n\u0000v − ˙δ(t)\n\u00012 ≤ 0.\n(39)\nFollowing , Remark 2 the optimal barrier function to\nensure (38) is,\nu ≤ − c1\n\u0010\nv − ˙δ(t) −\np\n−2umax(p − δ(t) − γ)\n\u0011\n−\numax(v − ˙δ(t))\np\n−2umax(p − δ(t) − γ)\n,\n(40)\nfor some large constant c1. Finally, we present a quadratic\nprogram to solve the adaptive cruise control problem for the\nCAV.\nProblem 1. (Adaptive Cruise Control) At each time step tk,\napply the control action u that maintains the optimal speed\nv∗ while guaranteeing safety:\nmin\nu(tk)\n\u0000v(tk) + u(tk)∆t − v∗\u00012\nsubject to:\n(33)\n(dynamics),\n(34)\n(control bounds),\n(40)\n(control barrier function; if v > δ(t)).\nNote that Theorem 2 implies we only need to enforce the\nCBF when ˙b(x) = v > 0.\nIt is critical to realize that while the CBF’s safety guaran-\ntees are derived for a continuous-time system, we discretize\nProblem 1 for implementation on a digital computer. In gen-\neral, we calculate the right hand side of the CBF (40) using\nthe state at the current time tk, and we apply the constant\ncontrol input u(tk) over the interval ∆t. The impact of\ndiscretizing the system, and managing constraint violations\nover the interval ∆t, is an area of active research [21].\nA simulation of Problem 1 is depicted in Fig. 2 for the\noptimal CBF and a second-order linear CBF with the form,\nu ≤ −cB\n\u0000v + ˙δ(t)\n\u0001\n− cAcB\n\u0000p + δ(t) + γ\n\u0001\n.\n(41)\nThe corresponding parameters for each simulation are given\nin Table I.\nx0\nv∗\nγ\nδ\n˙δ\numax\nc1\nca\ncb\n[0, 10]⊺\n10\n10\n1\n10\n5\n3\n100\n1\nTABLE I\nPARAMETERS USED FOR THE ADAPTIVE CRUISE CONTROL SIMULATION.\nFig. 2 depicts how the upper bound on the control input\nu varies as a function of the rear-end safety constraint b(x).\nAs expected, the linear CBF is conservative, and causes the\nsystem to start braking before it is necessary. This is not\nan artefact of parameter selection, rather it comes from the\nlinear CBF (41) under-approximating the square root in the\noptimal CBF (40). In contrast, the optimal CBF approximates\nthe switching behavior described in Remark 2. While the\nconservativeness of the linear CBF may have additional\nbenefits, e.g., passenger comfort, such considerations should\nbe explicitly imposed on the controller in Problem 1–they\nshould not arise as coincidence of selecting a sub-optimal\nCBF.\nBoth the optimal and linear CBFs approach a steady\nseparating distance equal to γ, and in each case the relative\nspeed between the vehicles is zero. This is necessary and\nsufficient for forward invariance of the safe set (Lemma 1).\nIt is important to note that the CAV is only guaranteed to\nsatisfy the rear-end safety constraint as long as our modeling\nassumption of ¨δ(t) = 0 holds. If the front vehicle applies\n6\n-10\n-9\n-8\n-7\n-6\n-5\n-4\n-3\n-2\n-1\n0\nb(x) [meters]\n-10\n-8\n-6\n-4\n-2\n0\n2\n4\n6\n8\n10\nValue\nFig. 2. Behavior of the optimal CBF (blue and orange) and the conservative\nlinear CBF (purple and yellow) as the system approaches the boundary of\nthe safe set at b(x) = 0.\na positive acceleration, the proposed optimal CBF would\nbe conserviative with respect to the feasible action space.\nSimilarly, if the front vehicle decelerates, our CBF would\nno longer guarantee forward-invariance for the safe set.\nOvercoming these challenges requires an explicit model of\nthe front vehicle–either to predict ¨δ(t) or to to model the\nworst case scenario where ¨δ(t) is equal to its lower bound\n(emergency braking). However, this is an issue for problem\nformulation and modeling that is independent of the specific\nbarrier function.\nVI. CONCLUSIONS\nIn this article we presented sufficient conditions and a con-\nstructive proof for control barrier functions to be optimal, i.e.,\nthey maximize the feasible action space of a system while\nguaranteeing safety. We proved that the optimal CBF follows\na dynamical motion primitive on the boundary of the safe set\n(Definition 1) and implicitly predicts the future trajectories\nof exogenous variables (Remark 1). We demonstrated the\nperformance of the optimal CBF in an adaptive cruise control\nproblem and compared its performance to a linear CBF.\nThis work suggests several interesting areas for future\nwork. The most immediate is generalizing the results for\nhigher-order systems, as well as specializing the results to\nsystems with scalar dynamics. Finding methods to solve the\nshortest path integral is an interesting area of research, and it\npresents an opportunity for data-driven and machine learning\nsolutions to generate optimal barrier functions. Addressing\nthe constraint compatability for a system with multiple\noptimal CBFs is another area interest. Finally, analyzing the\neffect of the stopping behavior and exogenous variables that\nare embedded in the optimal CBF through the shortest line\nintegral is a compelling research direction for large multi-\nagent systems.\nREFERENCES\n[1] Aaron D. Ames, Samuel Coogan, Magnus Egerstedt, Gennaro No-\ntomista, Koushil Sreenath, and Paulo Tabuada.\nControl barrier\nfunctions: Theory and applications. In 2019 18th European Control\nConference, ECC 2019, pages 3420–3431. Institute of Electrical and\nElectronics Engineers Inc., 6 2019.\n[2] W. Xiao, C.G. Cassandras, and C. Belta. Safe Autonomy with Control\nBarrier Functions: Theory and Applications. Synthesis Lectures on\nComputer Science. Springer International Publishing, 2023.\n[3] Wei Xiao, Christos G. Cassandras, and Calin A. Belta. Bridging the\nGap between Optimal Trajectory Planning and Safety-Critical Control\nwith Applications to Autonomous Vehicles. Automatica, 129, 8 2021.\n[4] Magnus Egerstedt, Jonathan N. Pauli, Gennaro Notomista, and Seth\nHutchinson. Robot ecology: Constraint-based control design for long\nduration autonomy. Annual Reviews in Control, 46:1–7, 1 2018.\n[5] Gennaro Notomista, Yousef Emam, and Magnus Egerstedt.\nThe\nSlothBot: A Novel Design for a Wire-Traversing Robot.\nIEEE\nRobotics and Automation Letters, 4(2):1993–1998, 4 2019.\n[6] Ruben Grandia, Andrew J Taylor, Aaron D Ames, and Marco Hutter.\nMulti-layered safety for legged robots via control barrier functions and\nmodel predictive control. In 2021 IEEE International Conference on\nRobotics and Automation (ICRA), pages 8352–8358. IEEE, 2021.\n[7] Andrew Singletary, Aiden Swann, Yuxiao Chen, and Aaron D Ames.\nOnboard safety guarantees for racing drones: High-speed geofencing\nwith control barrier functions. IEEE Robotics and Automation Letters,\n7(2):2897–2904, 2022.\n[8] Kaiyuan Xu, Wei Xiao, and Christos G. Cassandras.\nFeasibility\nGuaranteed Traffic Merging Control Using Control Barrier Functions.\nIn 2022 American Control Conference, pages 2039–2314, 2022.\n[9] Xiao Tan and Dimos V. Dimarogonas.\nCompatibility checking of\nmultiple control barrier functions for input constrained systems. In\n2022 IEEE 61st Conference on Decision and Control (CDC), pages\n939–944, 2022.\n[10] Wei Xiao, Christos G. Cassandras, and Calin A. Belta.\nLearning\nfeasibility constraints for control barrier functions. In 2023 European\nControl Conference (ECC), pages 1–6, 2023.\n[11] Lars Lindemann and Dimos V Dimarogonas. Control barrier functions\nfor signal temporal logic tasks. IEEE control systems letters, 3(1):96–\n101, 2018.\n[12] Gennaro Notomista, Siddharth Mayya, Seth Hutchinson, and Magnus\nEgerstedt. An optimal task allocation strategy for heterogeneous multi-\nrobot systems. In 2019 18th European Control Conference (ECC),\npages 2071–2076. IEEE, 2019.\n[13] Yousef Emam, Gennaro Notomista, Paul Glotfelter, Zsolt Kira, and\nMagnus Egerstedt. Safe reinforcement learning using robust control\nbarrier functions. IEEE Robotics and Automation Letters, pages 1–8,\n2022.\n[14] Hassan K Khalil. Nonlinear Systems. Prentice Hall, 2002.\n[15] Wei Xiao and Calin Belta.\nControl Barrier Functions for Systems\nwith High Relative Degree. In Proceedings of the IEEE Conference\non Decision and Control, volume 2019-December, pages 474–479.\nInstitute of Electrical and Electronics Engineers Inc., 12 2019.\n[16] A. E. Bryson, Jr. and Yu-Chi Ho. Applied Optimal Control: Optimiza-\ntion, Estimation, and Control. John Wiley and Sons, 1975.\n[17] James L Meriam, L Glenn Kraige, and Jeff N Bolton. Engineering\nmechanics: dynamics. John Wiley & Sons, 2020.\n[18] Logan E Beaver and Andreas A Malikopoulos. Optimal control of dif-\nferentially flat systems is surprisingly easy. Automatica, 159:111404,\n2024.\n[19] AM Ishtiaque Mahbub and Andreas A Malikopoulos. Platoon forma-\ntion in a mixed traffic environment: A model-agnostic optimal control\napproach. In 2022 American Control Conference (ACC), pages 4746–\n4751. IEEE, 2022.\n[20] Logan E Beaver et al. Constraint-driven optimal control of multiagent\nsystems: A highway platooning case study.\nIEEE Control Systems\nLetters, 6:1754–1759, 2021.\n[21] Wei Xiao, Calin Belta, and Christos G Cassandras. Event-triggered\ncontrol for safety-critical systems with unknown dynamics.\nIEEE\nTransactions on Automatic Control, 2022.\n"
}