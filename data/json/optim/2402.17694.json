{
    "optim": "1 Optimal Control Barrier Functions: Maximizing the Action Space Subject to Control Bounds Logan E. Beaver, Member, IEEE Abstract— This letter addresses the constraint compatibility problem of control barrier functions (CBFs), which occurs when a safety-critical CBF requires a system to apply more control effort than it is capable of generating. This inevitably leads to a safety violation, which transitions the system to an unsafe (and possibly dangerous) trajectory. We resolve the constraint com- patibility problem by constructing a control barrier function that maximizes the feasible action space for first and second- order constraints, and we prove that the optimal CBF encodes a dynamical motion primitive. Furthermore, we show that this dynamical motion primitive contains an implicit model for the future trajectory for time-varying components of the system. We validate our optimal CBF in simulation, and compare its behavior with a linear CBF. I. INTRODUCTION Control Barrier Functions (CBFs) have recently emerged as a mathematically rigorous method to guarantee constraint satisfaction for nonlinear systems with affine dynamics [1], [2]. CBFs have been used as an additional ”safety layer” to track a reference trajectory [3], and to directly generate trajectories for reactive systems, e.g., in ecologically-inspired systems [4]. CBFs have seen a wide range of applications, including connected and autonomous vehicles [3], mobile robots [5], legged robots [6], and aerial vehicles [7]. As CBFs are deployed on more realistic and complicated systems, new questions have arisen about the existence of feasible control actions that can jointly satisfy all of the constraints on the system. This is also known as the constraint compatibility problem, and it is a common issue in constrained control. There have been many proposed solutions; imposing ‘compatibility constraints’ to ensure con- straints don’t conflict [8], validating (or falsifying) whether constraints are compatible before deploying a system [9], learning individual control barrier functions to maximize the feasible action space [10], selectively deactivating constraints [11], and the use of slack variables to soften constraints that are not safety-critical [12]. In contrast, this letter considers a dynamical system with a single safety-critical constraint that is subject to control bounds. This is the simplest system where the constraint incompatibility arises [8], and it presents an opportunity for us to analyze the fundamental properties of the optimal CBF in detail. The contributions of this letter are as follows: • We present a constructive proof to derive the optimal CBF (Theorems 1 and 2). L.E. Beaver is with the Department of Mechanical & Aerospace En- gineering, Old Dominion University, Norfolk, VA 23529 USA (e-mail: lbeaver@odu.edu). • We derive a switching system that behaves equivalently to the optimal CBF (Remark 2). • We derive the dynamical motion primitive the system follows when the optimal CBF is active (Definition 1). • We show how the optimal CBF implicitly embeds a model of the environment over a significant time horizon (Remark 1). The remainder of this article is organized as follows. We briefly address notation in Section I-A and present prelim- inary information about CBFs in Section II. We address optimal first-order CBFs in Section III, and we present our main results for second-order systems in Section IV. Section V contains simulation results for an adaptive cruise control problem, and Section VI presents the conclusions and motivates areas of future work. A. Notation Throughout our exposition we use standard notation from multiple domains. First, we write vectors with bold letters and scalars as unstyled letters, i.e., x and x, respectively. We write exogenous variables as explicit functions of time δ(t), and we omit the dependence of endogenous variables, i.e., states, on time. We write the spatial derivative of a scalar function b(x) along a vector field f(x) using Lie derivative notation, ∂f ∂xf(x) := Lf g. We examine constraints of the form b(x) ≤ 0 rather than b(x) ≥ 0. This means that the corresponding class K∞ function is α(−b(x)). Finally, we refer to the barriers in this article as Zeroing Barrier Functions (ZBF) in general, and Control Barrier Functions (CBFs) when the barrier is a class K∞ function. II. CONTROL BARRIER FUNCTION PRELIMINARIES We consider a nonlinear dynamical system with state x ∈ Rm, control action u ∈ Rn, and control-affine dynamics, ˙x = f(x) + g(x)u. (1) We consider the usual assumptions, namely, (1) is Lipschitz continuous, autonomous, and f, g are continuous vector fields. We seek trajectories that satisfy an inequality con- straint, b(x) ≤ 0. (2) The constraint has order r ∈ N if an only if ( Lk g b u = 0 if k < r, Lk g b u ̸= 0 if k = r, (3) arXiv:2402.17694v1  [math.OC]  27 Feb 2024 2 i.e., the control action u first appears after taking r time derivatives of the constraint b(x). Finally, we we impose a maximum control effort bound, u ∈ U = n u ∈ Rm : ||u|| ≤ umax o . (4) For a first order system, where u shows up explicitly in ˙b, it is common to employ a control barrier function (CBF) with the form [1], ˙b(x) = Lfb + Lgb u ≤ −α(b(x)), (5) where α(−b(x)) is an extended class K∞ function. This is also a zeroing barrier function (ZBF) [1] because b(x) = 0 implies α(b(x)) = 0, and thus ˙b(x) ≤ 0. This satisfies the Nagumo theorem [2], which guarantees that the sub-level set b(x) ≤ 0 is forward-invariant. The challenge we address in this letter is the constraint compatibility problem, i.e., how to design a ZBF that simul- taneously satisfies the constraint (2) and control bounds (4). For example, when Lgb > 0, a scalar system must jointly satisfy, ( u ≤ − α(b)+Lf b Lgb , u ≥ −umax. (6) Thus, if the system ever enters a state satisfying −α(b) < −umaxLgb + Lfb, (7) then there is no feasible control action u that can jointly satisfy the barrier function (5) and control bounds (4). Assumption 1. We only consider the dynamics of the system within the set b(x) ≤ 0. Assumption 1 simplifies our analysis by assuming the system initially satisfies b(x) ≤ 0, and it restricts the form of our CBFs to class-K∞ functions. This can be relaxed by extending the optimal CBF to an extended class- K∞ function, which has demonstrated robustness to noise, disturbances, and model uncertainty [13]. Assumption 2. For a constraint b(x) of order r, for every state x ∈ Rm, there exists at least one value of u satisfying min u dr dtr b(x) ≤ −ϵ2 < 0, max u dr dtr b(x) ≥ 0, that also satisfies the control bounds (4). We employ Assumption 2 to simplify our analysis and ensure the system has the control authority to keep the system in the safe set. This assumption is straightforward to relax with tools from Lyapunov stability, e.g., LaSalle’s Invariance Principle [14], to show forward invariance of b(x). Assumption 3. If the constraint b(x) is order r, then it is also class Cr. Assumption 3 requires the constraint to be smooth enough for the control input u to appear after taking r derivatives. This is necessary because the control input is bounded, so the system trajectory cannot stay on a discontinuous constraint boundary. This assumption is straightforward to ensure, as the form of the constraint b(x) is generally chosen by a designer. III. FIRST ORDER SYSTEMS We begin with a first order system where the control input u shows up explicitly in the first derivative of the barrier function. We follow this with an analysis of second order systems in Section IV, where the constraint compatibility problem is more significant. We start by defining the set of safe states, C = \b x ∈ Rm : b(x) ≤ 0 \t , (8) which is compact under the continuity of b(x) (Assumption 3). Next, we seek a ZBF β(x) to guarantee forward invari- ance of the set C via, ˙b(x) ≤ −β(x). (9) We require β to satisfy, sign \u0000− β(x) \u0001 = ( 1 for all x ∈ C \\ ∂C, 0 for all x ∈ ∂C, (10) where ∂C is the boundary of C. This satisfies the Nagumo theorem [2], which implies forward invariance of C. To guarantee constraint compatibility, β must also satisfy, −β(x) ≥ min u \u0000˙b(x) \u0001 , −β(x) ≤ max u \u0000˙b(x) \u0001 , (11) which trivially guarantees constraint compatibility, min u \u0000˙b(x) \u0001 ≤ ˙b(x) ≤ −β(x) ≤ max u \u0000˙b(x) \u0001 . (12) To maximize the feasible set of control actions u, we select −β(x) = ( max u \u0000˙b(x) \u0001 if x ∈ Co, 0 if x ∈ ∂C, (13) which satisfies (10) by Assumption 2. For a control-affine system (1), the optimal ZBF simplifies to, Lgb u ≤ (\f\fLgb|umax if x ∈ Co −Lfb if x ∈ ∂C, (14) which is a linear in u. Property 1. The ZBF (14) obeys all state and control constraints. Proof. For all x ∈ Co, ||u|| ≤ umax by the definition of the dot product. For all x ∈ ∂C, Assumption 2 implies the existence of a u that simultaneously satisfies the ZBF and the control bounds. Property 2. The ZBF (14) maximizes the feasible action space of u for all x ∈ C. Similar to Property 1, this is implied by the definition of the dot product and the construction of (13). 3 Theorem 1. The optimal ZBF (14) can be approximated arbitrarily well by jointly imposing a linear CBF and control bounds. Proof. Consider the control barrier function α \u0000b(x) \u0001 = c1b(x) for some constant c1 > 0. For all points x ∈ ∂C, both functions imply ˙b \u0000x \u0001 ≤ 0. Let x ∈ Co such that b(x) ≤ ϵ for some small ϵ > 0. Next, let c1 = 1 ϵ max u \b˙b(x) \t . (15) This implies that c1b(x) ≥ max u \b˙b(x) \t ≥ ˙b(x) (16) for all b(x) ≥ ϵ. Thus, the feasible space of joint linear CBF and control bound constraints can be brought ϵ-close to the optimal ZBF. Theorem 1 requires the slope of a linear CBF to be arbitrarily steep to ensure ϵ-closeness. However, for any real system, the effect of any noise and extenral disturbances will quickly dominate the ϵ-optimality gap for a linear CBF with a finite slope. Thus, a linear CBF will effectively approximates the optimal ZBF in practical applications. IV. SECOND ORDER ZBFS For higher-order systems, we define a sequence of nested safe sets [15]. The largest safe set is C1 = {x ∈ Rm : b(x) ≤ 0}, (17) which is identical to the first-order safe set in Section III. To generate the higher-order safe set C2, we take advantage of the following lemma. Lemma 1. For any x ∈ ∂C1, the set C1 is invariant if and only if ˙b(x) = 0. Lemma 1 is essentially a restatement of the Nagumo theorem. This is equivalent to the tangency conditions in optimal control [16], which arise when the system cannot apply infinite impulse to make instantaneous jumps in the state variables. Next, we seek to define the set of all states x that guarantee recursive feasibility, i.e., states where there always exists a control input such that C1 is forward invariant. We facilitate this with the definition of the shortest line integral. Definition 1. The shortest line integral starting at state x and ending at xf satisfies, min u∈U n Z b(xf ) b(x) ¨b(x) db o = Z ˙b(xf ) ˙b(x) ˙b(x) d˙b, (18) which comes from the kinematic relationship between b(x), ˙b(x), and ¨b(x) [17]. Next, we prove that the dynamical motion primitive, min u n ¨b(x) o , (19) describes the system’s trajectory on the safe set’s boundary. Lemma 2. The function ¨b that generates the shortest line integral (Definition 1) is the instantaneous maximum or minimum of ¨b. Proof. We seek the function ¨b that minimizes, Z t2 t1 ¨b(x(t))|˙b(x(t))|dt, (20) which is equivalent to the line integral in Definition 1 for any parameterization of the trajectory that satisfies the boundary conditions [17]. This is an optimal control problem, and the unconstrained solution for ¨b satisfies [18], − d dt   ¨b|˙b| ˙b ! + d2 dt2 \u0010 |˙b| \u0011 = 0. (21) Using the additive property of integrals, we split (20) into intervals where ˙b has a positive or negative sign. In each of these cases, the optimality condition reduces to 0 = 0. This implies that ¨b never follows the unconstrained trajectory, and the behavior of ¨b must be bang-bang. Remark 1. Definition 1 and Lemma 2 define a motion primitive minu ¨b(x) over the horizon b(x) ∈ [b1, 0]. This horizon can be large, and if b(x, t) is time-varying, the motion primitive must also contain a model for the time- varying component ∂2b ∂t2 . Thus, while CBFs are generally considered myopic, they actually contain an implicit model for i) the future trajectory of endogenous variables, and ii) the evolution of exogenous variables. Lemma 3. The boundary of the safe set ∂C2 is, ∂C2 = n x ∈ Rm : ˙b(x) ≥ 0, Z 0 b(x) ¨b db + 1 2 ˙b(x)2 = 0, o [ n x ∈ Rm : ˙b(x) < 0, Z 0 b(x) ¨b db − 1 2 ˙b(x)2 = 0, o , where ¨b is the lower bound of ¨b (Lemma 2). Proof. Lemma 3 evaluates the shortest line integral (Defini- tion 1) from every x ∈ Rm to the set boundary, which is necessary and sufficient for safety by Lemma 1. For any other point x′, let δ be the euclidean distance between x′ and the nearest point x satisfying Lemma 3. No y ∈ Bδ/2(X′) satisfies Lemma 3, where Br(x) is a ball of radius r centered at x. Thus, Bδ/2(x′) is an open set (of safe or unsafe states), and x′ ̸∈ ∂C2 by definition. Note that the definition of ∂C2 contains two cases, one for each sign of ˙b. This is because when ˙b(x) < 0, the limits of integration change direction in Definition 1. Intuitively, ˙b(x) < 0 implies that b(x) is decreasing–thus, by the continuty of b(x) (Assumption 3), there exists an interval of time ∆t such that b(x) ≤ 0 for any arbitrarily large control input u. Lemma 4. The safe set C2 is C2 = n x ∈ Rm : ˙b(x) ≥ 0, Z 0 b(x) ¨b db + 1 2 ˙b(x)2 ≤ 0, o [ n x ∈ Rm : ˙b(x) < 0, x ∈ C1 o . 4 Proof. Let xf ∈ C1 such that ˙b(xf) = 0. We use the contrapositive of Lemma 1, which implies that xf is feasible if and only if b(xf) ≤ 0. First, consider some x ∈ C2 such that ˙b(x) ≥ 0. Evaluating the shortest line integral (Definition 1) yields, Z b(xf ) b(x) ˙b db + 1 2 ˙b(x)2 = 0. (22) This implies, Z 0 b(x) ˙b db + 1 2 ˙b(x)2 = Z 0 b(xf ) ¨b db ≤ 0. (23) Assumption 2 implies that the integrand of the right hand side is negative and b is increasing from b(xf) ≤ 0 to b = 0. Thus, the condition in Lemma 4 is necessary for safety. Next, consider a point x ̸∈ C2 such that ˙b(x) ≥ 0. Similar to the previous case, applying Definition 1 yields Z 0 b(x) ˙b db + 1 2 ˙b(x) = Z 0 b(xf ) ¨b db > 0. (24) Under our premise, the integrand of the right hand side is negative and b is decreasing from b(xf) > 0 to b = 0 under Assumption 2. Thus, the premise of Lemma 4 is sufficient for safety by contraposition. Finally, consider the case where x ∈ C1 such that ˙b(x) < 0. If ˙b remains non-positive, then b ≤ b(x) ≤ 0 and the trajectory remains in C1. If ˙b becomes positive, then by the continuity in ˙b (Assumption 3) it must pass through some intermediate point ˙b(x′) = 0. Setting xf = x′ satisfies the premise of the previous case and completes the proof. Lemma 5. The set C2 is a strict subset of C1. Proof. For all x ∈ Rm such that ˙b(x) < 0, x ∈ C1 if and only if x ∈ C2. Next, let x ∈ C2 such that ˙b(x) ≥ 0. By Lemma 4, Z 0 b(x) ¨b(x) db ≤ −1 2 ˙b2(x) ≤ 0. (25) Under Assumption 2 the integrand of (25) is negative, therefore b(x) ≤ 0 and x ∈ C1. To prove strictness of the subset, consider a point x ∈ C1 such that b(x) = 0 and ˙b(x) > 0. By Lemma 1, x ̸∈ C2. Theorem 2. The largest set that ensures forward invariance of b(x) ≤ 0 is, C2 = n x ∈ Rm : ˙b(x) ≥ 0, Z 0 b(x) ¨b db + 1 2 ˙b(x)2 ≤ 0, o [ n x ∈ Rm : ˙b(x) < 0, x ∈ C1 o . Proof. The proof follows from Lemmas 4 and 5. Theorem 2 describes the shape of the largest safe set that ensures recursive feasibility of C1. Next, we present a result that we use to define the optimal CBF, which has the same feasible action space as C2. Lemma 6. The shortest line integral (Definition 1) induces a Class K∞ function. Proof. Consider the function, F \u0000− b(x) \u0001 = − Z 0 b(x) ¨bdb. (26) This satisfies the definition of a class K∞ function: 1) F(0) = 0, as the integral over a zero-measure set is zero; 2) F(b(x) is strictly increasing, and 3) F(b(x)) → ∞ as b(x) → ∞, since ¨b(x) is upper bounded by a negative constant. Theorem 3. The control barrier function α \u0000b(x) \u0001 = s −2 Z 0 b(x) ¨b db (27) combined with a control bounds constraint is optimal, i.e., its set of safe actions is equal to C2. Proof. By Lemma 6, (27) is a class K∞ function, and it describes the safe set, Cα = \b x ∈ Rm : ˙b(x) ≤ −α \u0000b(x) \u0001\t . (28) Substituting (26) yields the boundary, ˙b(x) ≤ − s −2 Z 0 b(x) ˙b. (29) Squaring both sides and re-arranging yields the boundary of C2, thus (27) describes the optimal barrier function when ˙b ≤ 0. Enforcing the control bounds when ˙b(x) > 0 completes the proof. Theorem 3 is a constructive proof to generate the control barrier function that exactly captures the system’s feasible action space. Keeping the system in Cα is a first-order constraint, and thus applying Theorem 1 yields a control barrier function that is ϵ−close to the optimal ZBF. Finally, to complete this section, we describe the optimal behavior of a system with second-order constraints under the optimal control barrier function. Remark 2. The optimal control policy switches between satisfying the control bounds when x ∈ Co α and minimizing ¨b(x) when x ∈ ∂Cα; this is depicted in Fig. 1. ||u|| ≤ umax u = arg minu{¨b(x)} x ∈ ∂C2 x ̸∈ ∂C2 Fig. 1. Switching description of the optimal behavior; the system operates within the control bounds until it reaches the safe set boundary. Proof. We now have the first order constraint, ˙b(x) + α(b(x)) ≤ 0. (30) Applying Theorem 2 implies that the optimal CBF approxi- mates the ZBF, −β(x) = ( maxu{¨b(x) + ˙α(b(x))} if x ∈ Co 2, 0 if x ∈ ∂C2. (31) 5 The ZBF (31) is equivalent to enforcing the control bounds for x ∈ Co 2 by definition. For x ∈ ∂C2, the ZBF keeps the system within C2. By construction, this is only be achieved by applying the control input u = arg min u {¨b(x)}. (32) V. SIMULATION RESULTS In this section we consider longitudinal control of a connected autonomous vehicle (CAV) using adaptive cruise control. Under adaptive cruise control, the CAV attempts to maintain a set speed while maintaining a safe following distance. At each time-instant the vehicle measures the distance δ(t) to the vehicle in front of it, which must be kept within an admissible range. The autonomous vehicle has a state x = [p, v]⊺ ∈ R2 and control action u ∈ R. It follows integrator dynamics, ˙p = v, ˙v = u. (33) We impose the acceleration bounds |u| ≤ umax, (34) and we constrain the vehicle to obey a headway constraint, b(x) = p − δ(t) − γ ≤ 0, (35) where δ(t) is the position of the vehicle in front of the CAV, and γ is a minimum separating distance. Remark 1 requires us to explicitly embed a model of δ(t) in the optimal CBF. For vehicle in front, we assume a constant speed model, i.e., ¨δ(t) = 0. This is a common model used in the literature with reasonable success (e.g., for model predictive control [19]), however, in safety-critical scenarios it may be beneficial to replace ¨δ(t) with a lower bound (e.g., the minimum braking distance of [20]). Alternatively, future predictions of δ(t) can be communicated from the lead vehicle if it is a CAV. To construct the higher order CBF, we consider the case when v ≥ 0. From Lemma 2, the shortest line integral is, Z b=0 b=p−δ −umax dp = umax(p − δ(t) − γ). (36) Theorem 3 implies the barrier function α \u0000b(x) \u0001 = − p −2 umax (p − δ(t) − γ), (37) and thus, v − ˙δ(t) ≤ p −2 umax (p − δ(t) − γ). (38) Equivalently, the boundary of the safe set (Theorem 2) yields the minimum stopping distance constraint, 2 umax(p − δ(t) − γ) + \u0000v − ˙δ(t) \u00012 ≤ 0. (39) Following , Remark 2 the optimal barrier function to ensure (38) is, u ≤ − c1 \u0010 v − ˙δ(t) − p −2umax(p − δ(t) − γ) \u0011 − umax(v − ˙δ(t)) p −2umax(p − δ(t) − γ) , (40) for some large constant c1. Finally, we present a quadratic program to solve the adaptive cruise control problem for the CAV. Problem 1. (Adaptive Cruise Control) At each time step tk, apply the control action u that maintains the optimal speed v∗ while guaranteeing safety: min u(tk) \u0000v(tk) + u(tk)∆t − v∗\u00012 subject to: (33) (dynamics), (34) (control bounds), (40) (control barrier function; if v > δ(t)). Note that Theorem 2 implies we only need to enforce the CBF when ˙b(x) = v > 0. It is critical to realize that while the CBF’s safety guaran- tees are derived for a continuous-time system, we discretize Problem 1 for implementation on a digital computer. In gen- eral, we calculate the right hand side of the CBF (40) using the state at the current time tk, and we apply the constant control input u(tk) over the interval ∆t. The impact of discretizing the system, and managing constraint violations over the interval ∆t, is an area of active research [21]. A simulation of Problem 1 is depicted in Fig. 2 for the optimal CBF and a second-order linear CBF with the form, u ≤ −cB \u0000v + ˙δ(t) \u0001 − cAcB \u0000p + δ(t) + γ \u0001 . (41) The corresponding parameters for each simulation are given in Table I. x0 v∗ γ δ ˙δ umax c1 ca cb [0, 10]⊺ 10 10 1 10 5 3 100 1 TABLE I PARAMETERS USED FOR THE ADAPTIVE CRUISE CONTROL SIMULATION. Fig. 2 depicts how the upper bound on the control input u varies as a function of the rear-end safety constraint b(x). As expected, the linear CBF is conservative, and causes the system to start braking before it is necessary. This is not an artefact of parameter selection, rather it comes from the linear CBF (41) under-approximating the square root in the optimal CBF (40). In contrast, the optimal CBF approximates the switching behavior described in Remark 2. While the conservativeness of the linear CBF may have additional benefits, e.g., passenger comfort, such considerations should be explicitly imposed on the controller in Problem 1–they should not arise as coincidence of selecting a sub-optimal CBF. Both the optimal and linear CBFs approach a steady separating distance equal to γ, and in each case the relative speed between the vehicles is zero. This is necessary and sufficient for forward invariance of the safe set (Lemma 1). It is important to note that the CAV is only guaranteed to satisfy the rear-end safety constraint as long as our modeling assumption of ¨δ(t) = 0 holds. If the front vehicle applies 6 -10 -9 -8 -7 -6 -5 -4 -3 -2 -1 0 b(x) [meters] -10 -8 -6 -4 -2 0 2 4 6 8 10 Value Fig. 2. Behavior of the optimal CBF (blue and orange) and the conservative linear CBF (purple and yellow) as the system approaches the boundary of the safe set at b(x) = 0. a positive acceleration, the proposed optimal CBF would be conserviative with respect to the feasible action space. Similarly, if the front vehicle decelerates, our CBF would no longer guarantee forward-invariance for the safe set. Overcoming these challenges requires an explicit model of the front vehicle–either to predict ¨δ(t) or to to model the worst case scenario where ¨δ(t) is equal to its lower bound (emergency braking). However, this is an issue for problem formulation and modeling that is independent of the specific barrier function. VI. CONCLUSIONS In this article we presented sufficient conditions and a con- structive proof for control barrier functions to be optimal, i.e., they maximize the feasible action space of a system while guaranteeing safety. We proved that the optimal CBF follows a dynamical motion primitive on the boundary of the safe set (Definition 1) and implicitly predicts the future trajectories of exogenous variables (Remark 1). We demonstrated the performance of the optimal CBF in an adaptive cruise control problem and compared its performance to a linear CBF. This work suggests several interesting areas for future work. The most immediate is generalizing the results for higher-order systems, as well as specializing the results to systems with scalar dynamics. Finding methods to solve the shortest path integral is an interesting area of research, and it presents an opportunity for data-driven and machine learning solutions to generate optimal barrier functions. Addressing the constraint compatability for a system with multiple optimal CBFs is another area interest. Finally, analyzing the effect of the stopping behavior and exogenous variables that are embedded in the optimal CBF through the shortest line integral is a compelling research direction for large multi- agent systems. REFERENCES [1] Aaron D. Ames, Samuel Coogan, Magnus Egerstedt, Gennaro No- tomista, Koushil Sreenath, and Paulo Tabuada. Control barrier functions: Theory and applications. In 2019 18th European Control Conference, ECC 2019, pages 3420–3431. Institute of Electrical and Electronics Engineers Inc., 6 2019. [2] W. Xiao, C.G. Cassandras, and C. Belta. Safe Autonomy with Control Barrier Functions: Theory and Applications. Synthesis Lectures on Computer Science. Springer International Publishing, 2023. [3] Wei Xiao, Christos G. Cassandras, and Calin A. Belta. Bridging the Gap between Optimal Trajectory Planning and Safety-Critical Control with Applications to Autonomous Vehicles. Automatica, 129, 8 2021. [4] Magnus Egerstedt, Jonathan N. Pauli, Gennaro Notomista, and Seth Hutchinson. Robot ecology: Constraint-based control design for long duration autonomy. Annual Reviews in Control, 46:1–7, 1 2018. [5] Gennaro Notomista, Yousef Emam, and Magnus Egerstedt. The SlothBot: A Novel Design for a Wire-Traversing Robot. IEEE Robotics and Automation Letters, 4(2):1993–1998, 4 2019. [6] Ruben Grandia, Andrew J Taylor, Aaron D Ames, and Marco Hutter. Multi-layered safety for legged robots via control barrier functions and model predictive control. In 2021 IEEE International Conference on Robotics and Automation (ICRA), pages 8352–8358. IEEE, 2021. [7] Andrew Singletary, Aiden Swann, Yuxiao Chen, and Aaron D Ames. Onboard safety guarantees for racing drones: High-speed geofencing with control barrier functions. IEEE Robotics and Automation Letters, 7(2):2897–2904, 2022. [8] Kaiyuan Xu, Wei Xiao, and Christos G. Cassandras. Feasibility Guaranteed Traffic Merging Control Using Control Barrier Functions. In 2022 American Control Conference, pages 2039–2314, 2022. [9] Xiao Tan and Dimos V. Dimarogonas. Compatibility checking of multiple control barrier functions for input constrained systems. In 2022 IEEE 61st Conference on Decision and Control (CDC), pages 939–944, 2022. [10] Wei Xiao, Christos G. Cassandras, and Calin A. Belta. Learning feasibility constraints for control barrier functions. In 2023 European Control Conference (ECC), pages 1–6, 2023. [11] Lars Lindemann and Dimos V Dimarogonas. Control barrier functions for signal temporal logic tasks. IEEE control systems letters, 3(1):96– 101, 2018. [12] Gennaro Notomista, Siddharth Mayya, Seth Hutchinson, and Magnus Egerstedt. An optimal task allocation strategy for heterogeneous multi- robot systems. In 2019 18th European Control Conference (ECC), pages 2071–2076. IEEE, 2019. [13] Yousef Emam, Gennaro Notomista, Paul Glotfelter, Zsolt Kira, and Magnus Egerstedt. Safe reinforcement learning using robust control barrier functions. IEEE Robotics and Automation Letters, pages 1–8, 2022. [14] Hassan K Khalil. Nonlinear Systems. Prentice Hall, 2002. [15] Wei Xiao and Calin Belta. Control Barrier Functions for Systems with High Relative Degree. In Proceedings of the IEEE Conference on Decision and Control, volume 2019-December, pages 474–479. Institute of Electrical and Electronics Engineers Inc., 12 2019. [16] A. E. Bryson, Jr. and Yu-Chi Ho. Applied Optimal Control: Optimiza- tion, Estimation, and Control. John Wiley and Sons, 1975. [17] James L Meriam, L Glenn Kraige, and Jeff N Bolton. Engineering mechanics: dynamics. John Wiley & Sons, 2020. [18] Logan E Beaver and Andreas A Malikopoulos. Optimal control of dif- ferentially flat systems is surprisingly easy. Automatica, 159:111404, 2024. [19] AM Ishtiaque Mahbub and Andreas A Malikopoulos. Platoon forma- tion in a mixed traffic environment: A model-agnostic optimal control approach. In 2022 American Control Conference (ACC), pages 4746– 4751. IEEE, 2022. [20] Logan E Beaver et al. Constraint-driven optimal control of multiagent systems: A highway platooning case study. IEEE Control Systems Letters, 6:1754–1759, 2021. [21] Wei Xiao, Calin Belta, and Christos G Cassandras. Event-triggered control for safety-critical systems with unknown dynamics. IEEE Transactions on Automatic Control, 2022. "
}